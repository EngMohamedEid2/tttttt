{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Account/Wrapper.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <section class=\"user-dashboard-section section-b-space\">\n        <div class=\"container-fluid-lg\">\n            <div class=\"row\">\n                <div class=\"col-xxl-3 col-lg-4\">\n                    <AccountSidebar @close=\"openMenu()\" :class=\"open ? 'show' : ''\" :user=\"user\"\n                        :UserInfo=\"useUserStore().UserInfo\"></AccountSidebar>\n                </div>\n\n                <div class=\"col-xxl-9 col-lg-8\">\n                    <WidgetsButton :classes=\"'btn left-dashboard-show btn-animation btn-md fw-bold d-block mb-4 d-lg-none'\"\n                        :type=\"'button'\" :id=\"'show_menu'\" @onClick=\"openMenu()\">\n                        {{ $t('Show Menu') }}\n                    </WidgetsButton>\n                    <div class=\"dashboard-right-sidebar\">\n                        <slot />\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"~~/store/user\";\nlet { User, UserInfo } = storeToRefs(useUserStore())\nlet user = ref(UserInfo)\nlet open = ref(false);\nfunction openMenu() {\n    open.value = !open.value\n}\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056340738,
      "end": 1716056340934,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056340934,
      "end": 1716056340934,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056340934,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"~~/store/user\";\n\nconst _sfc_main = {\n  __name: 'Wrapper',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet { User, UserInfo } = storeToRefs(useUserStore())\nlet user = ref(UserInfo)\nlet open = ref(false);\nfunction openMenu() {\n    open.value = !open.value\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_AccountSidebar = _resolveComponent(\"AccountSidebar\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"user-dashboard-section section-b-space\" }, _attrs))}><div class=\"container-fluid-lg\"><div class=\"row\"><div class=\"col-xxl-3 col-lg-4\">`)\n  _push(_ssrRenderComponent(_component_AccountSidebar, {\n    onClose: $event => (openMenu()),\n    class: _unref(open) ? 'show' : '',\n    user: _unref(user),\n    UserInfo: _unref(useUserStore)().UserInfo\n  }, null, _parent))\n  _push(`</div><div class=\"col-xxl-9 col-lg-8\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn left-dashboard-show btn-animation btn-md fw-bold d-block mb-4 d-lg-none',\n    type: 'button',\n    id: 'show_menu',\n    onOnClick: $event => (openMenu())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Show Menu'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Show Menu')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`<div class=\"dashboard-right-sidebar\">`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {}, null, _push, _parent)\n  _push(`</div></div></div></div></section>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Wrapper.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340935,
      "end": 1716056340935,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056340935,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056340936,
      "end": 1716056340936,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"~~/store/user\";\n\nconst _sfc_main = {\n  __name: 'Wrapper',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet { User, UserInfo } = storeToRefs(useUserStore())\nlet user = ref(UserInfo)\nlet open = ref(false);\nfunction openMenu() {\n    open.value = !open.value\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_AccountSidebar = _resolveComponent(\"AccountSidebar\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"user-dashboard-section section-b-space\" }, _attrs))}><div class=\"container-fluid-lg\"><div class=\"row\"><div class=\"col-xxl-3 col-lg-4\">`)\n  _push(_ssrRenderComponent(_component_AccountSidebar, {\n    onClose: $event => (openMenu()),\n    class: _unref(open) ? 'show' : '',\n    user: _unref(user),\n    UserInfo: _unref(useUserStore)().UserInfo\n  }, null, _parent))\n  _push(`</div><div class=\"col-xxl-9 col-lg-8\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn left-dashboard-show btn-animation btn-md fw-bold d-block mb-4 d-lg-none',\n    type: 'button',\n    id: 'show_menu',\n    onOnClick: $event => (openMenu())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Show Menu'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Show Menu')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`<div class=\"dashboard-right-sidebar\">`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {}, null, _push, _parent)\n  _push(`</div></div></div></div></section>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Wrapper.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340936,
      "end": 1716056340937,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"~~/store/user\";\n\nconst _sfc_main = {\n  __name: 'Wrapper',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet { User, UserInfo } = storeToRefs(useUserStore())\nlet user = ref(UserInfo)\nlet open = ref(false);\nfunction openMenu() {\n    open.value = !open.value\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_AccountSidebar = _resolveComponent(\"AccountSidebar\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"user-dashboard-section section-b-space\" }, _attrs))}><div class=\"container-fluid-lg\"><div class=\"row\"><div class=\"col-xxl-3 col-lg-4\">`)\n  _push(_ssrRenderComponent(_component_AccountSidebar, {\n    onClose: $event => (openMenu()),\n    class: _unref(open) ? 'show' : '',\n    user: _unref(user),\n    UserInfo: _unref(useUserStore)().UserInfo\n  }, null, _parent))\n  _push(`</div><div class=\"col-xxl-9 col-lg-8\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn left-dashboard-show btn-animation btn-md fw-bold d-block mb-4 d-lg-none',\n    type: 'button',\n    id: 'show_menu',\n    onOnClick: $event => (openMenu())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Show Menu'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Show Menu')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`<div class=\"dashboard-right-sidebar\">`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {}, null, _push, _parent)\n  _push(`</div></div></div></div></section>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Wrapper.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340936,
      "end": 1716056340937,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Account/Sidebar/index.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Button/index.vue\";\nimport { ref } from 'vue';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useUserStore } from \"~~/store/user\";\n\nconst _sfc_main = {\n  __name: 'Wrapper',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet { User, UserInfo } = storeToRefs(useUserStore())\nlet user = ref(UserInfo)\nlet open = ref(false);\nfunction openMenu() {\n    open.value = !open.value\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_AccountSidebar = __nuxt_component_0\n  const _component_WidgetsButton = __nuxt_component_1\n\n  _push(`<section${_ssrRenderAttrs(_mergeProps({ class: \"user-dashboard-section section-b-space\" }, _attrs))}><div class=\"container-fluid-lg\"><div class=\"row\"><div class=\"col-xxl-3 col-lg-4\">`)\n  _push(_ssrRenderComponent(_component_AccountSidebar, {\n    onClose: $event => (openMenu()),\n    class: _unref(open) ? 'show' : '',\n    user: _unref(user),\n    UserInfo: _unref(useUserStore)().UserInfo\n  }, null, _parent))\n  _push(`</div><div class=\"col-xxl-9 col-lg-8\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn left-dashboard-show btn-animation btn-md fw-bold d-block mb-4 d-lg-none',\n    type: 'button',\n    id: 'show_menu',\n    onOnClick: $event => (openMenu())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Show Menu'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Show Menu')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`<div class=\"dashboard-right-sidebar\">`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {}, null, _push, _parent)\n  _push(`</div></div></div></div></section>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Wrapper.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "normal"
    }
  ]
}
