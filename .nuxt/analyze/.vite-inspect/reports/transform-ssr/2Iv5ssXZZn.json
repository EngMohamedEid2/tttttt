{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/ProductDetails/Widgets/ProductBundle/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <div class=\"related-product bundle-sec\" v-if=\"crossSellProducts?.length\">\n        <div class=\"product-title-2\">\n            <h4>{{ $t(\"Frequently bought together\") }}</h4>\n        </div>\n\n        <div class=\"related-box\">\n            <div class=\"related-image\">\n                <ul>\n                    <li v-for=\"crossSellproduct in crossSellProducts\" :key=\"crossSellproduct\">\n                        <div class=\"product-box product-box-bg wow fadeInUp\">\n                            <div class=\"product-image\">\n                                <NuxtLink :to=\"`/product/${crossSellproduct.slug}`\">\n                                    <img :src=\"crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png'\"\n                                        class=\"img-fluid\" alt=\"\">\n                                </NuxtLink>\n                            </div>\n                            <div class=\"product-detail\">\n                                <NuxtLink :to=\"`/product/${crossSellproduct.slug}`\">\n                                    <h6 class=\"name\">\n                                        {{ crossSellproduct.name }}\n                                    </h6>\n                                </NuxtLink>\n\n                                <h5 class=\"sold text-content\">\n                                    <span class=\"theme-color price\">{{ store.currency.symbol }} {{\n                                        Number(store.convertCurrency(crossSellproduct.sale_price)).toFixed(2) }}</span>\n                                    <del v-if=\"crossSellproduct?.discount\">{{ store.currency.symbol }} {{\n                                        Number(store.convertCurrency(crossSellproduct.price)).toFixed(2)\n                                    }}</del>\n                                </h5>\n                            </div>\n                        </div>\n                    </li>\n                </ul>\n            </div>\n\n            <div class=\"budle-list\">\n                <ul>\n                    <li v-for=\"crossSellproduct in crossSellProducts\" :key=\"crossSellproduct\">\n                        <div class=\"form-check\">\n                            <input class=\"checkbox_animated\" type=\"checkbox\" @change=\"select($event)\"\n                                :value=\"crossSellproduct.id\" :id=\"crossSellproduct.id\">\n                            <label class=\"form-check-label\" :for=\"crossSellproduct.id\">\n                                <span class=\"color color-1\">{{ crossSellproduct.name }}\n                                    <span>{{ store.currency.symbol }} {{\n                                        Number(store.convertCurrency(crossSellproduct.sale_price)).toFixed(2)\n                                    }}</span></span>\n                            </label>\n                        </div>\n                    </li>\n\n                    <li class=\"contant\">\n                        <h5>{{ $t(\"Product Selected for\") }}</h5>\n                        <h4 class=\"theme-color\">{{ store.currency.symbol }} {{\n                            Number(store.convertCurrency(total)).toFixed(2) }}</h4>\n                        <WidgetsButton :classes=\"'btn text-white theme-bg-color btn-md mt-sm-4 mt-3 fw-bold'\"\n                            :id=\"'addcartAllbtn'\" :disabled=\"!total\" :iconClass=\"'fa-solid fa-cart-shopping ms-2'\"\n                            @onClick=\"AddToCartAll()\">\n                            {{ $t(\" Add All To Cart\") }}\n                        </WidgetsButton>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from \"@/store/data\"\nimport { useCartStore } from \"~~/store/cart\"\nimport { useCurrencyStore } from '@/store/currency'\nlet props = defineProps({\n    productData: Object\n})\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\nawait useDataStore().GetProduct()\nlet { Products } = storeToRefs(useDataStore());\nlet crossSellProducts = Products?.value.data?.filter(product => props.productData?.cross_sell_products?.includes(product.id))\n\nlet total = ref(0);\nlet selectedProductIds = ref([]);\nlet crossSellproducts = ref([]);\nlet selectedProduct = ref([]);\n\nconst select = (event) => {\n    const inputValue = event?.target?.value;\n    const index = selectedProductIds?.value?.indexOf(Number(inputValue));\n    if (event?.target?.checked) {\n        selectedProductIds.value.push(Number(inputValue))\n    } else {\n        selectedProductIds.value.splice(index, 1)\n    }\n    const products = crossSellProducts;\n    selectedProduct.value = products.filter(product => selectedProductIds.value.includes(product?.id));\n    total.value = selectedProduct.value.reduce((sum, item) => sum + item.sale_price, 0);\n}\n\nconst AddToCartAll = () => {\n    selectedProduct.value.forEach(product => {\n        if (product) {\n            useCartStore().addToCartProduct({\n                product: product ? product : null,\n                quantity: 1,\n                variation: null,\n                variation_id: null,\n            });\n        }\n    })\n}\n</script>\n<style lang=\"scss\" scoped></style>",
      "start": 1716056341855,
      "end": 1716056342022,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342022,
      "end": 1716056342022,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342022,
      "end": 1716056342022,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342022,
      "end": 1716056342022,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342022,
      "end": 1716056342022,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056342022,
      "end": 1716056342023,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from \"@/store/data\"\nimport { useCartStore } from \"~~/store/cart\"\nimport { useCurrencyStore } from '@/store/currency'\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    productData: Object\n},\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet props = __props\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\n;(\n  ([__temp,__restore] = _withAsyncContext(() => useDataStore().GetProduct())),\n  await __temp,\n  __restore()\n)\nlet { Products } = storeToRefs(useDataStore());\nlet crossSellProducts = Products?.value.data?.filter(product => props.productData?.cross_sell_products?.includes(product.id))\n\nlet total = ref(0);\nlet selectedProductIds = ref([]);\nlet crossSellproducts = ref([]);\nlet selectedProduct = ref([]);\n\nconst select = (event) => {\n    const inputValue = event?.target?.value;\n    const index = selectedProductIds?.value?.indexOf(Number(inputValue));\n    if (event?.target?.checked) {\n        selectedProductIds.value.push(Number(inputValue))\n    } else {\n        selectedProductIds.value.splice(index, 1)\n    }\n    const products = crossSellProducts;\n    selectedProduct.value = products.filter(product => selectedProductIds.value.includes(product?.id));\n    total.value = selectedProduct.value.reduce((sum, item) => sum + item.sale_price, 0);\n}\n\nconst AddToCartAll = () => {\n    selectedProduct.value.forEach(product => {\n        if (product) {\n            useCartStore().addToCartProduct({\n                product: product ? product : null,\n                quantity: 1,\n                variation: null,\n                variation_id: null,\n            });\n        }\n    })\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  if (_unref(crossSellProducts)?.length) {\n    _push(`<div${\n      _ssrRenderAttrs(_mergeProps({ class: \"related-product bundle-sec\" }, _attrs))\n    }><div class=\"product-title-2\"><h4>${\n      _ssrInterpolate(_ctx.$t(\"Frequently bought together\"))\n    }</h4></div><div class=\"related-box\"><div class=\"related-image\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"product-box product-box-bg wow fadeInUp\"><div class=\"product-image\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<img${\n              _ssrRenderAttr(\"src\", crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png')\n            } class=\"img-fluid\" alt=\"\"${\n              _scopeId\n            }>`)\n          } else {\n            return [\n              _createVNode(\"img\", {\n                src: crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png',\n                class: \"img-fluid\",\n                alt: \"\"\n              }, null, 8, [\"src\"])\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`</div><div class=\"product-detail\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<h6 class=\"name\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(crossSellproduct.name)\n            }</h6>`)\n          } else {\n            return [\n              _createVNode(\"h6\", { class: \"name\" }, _toDisplayString(crossSellproduct.name), 1)\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`<h5 class=\"sold text-content\"><span class=\"theme-color price\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span>`)\n      if (crossSellproduct?.discount) {\n        _push(`<del>${\n          _ssrInterpolate(_unref(store).currency.symbol)\n        } ${\n          _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.price)).toFixed(2))\n        }</del>`)\n      } else {\n        _push(`<!---->`)\n      }\n      _push(`</h5></div></div></li>`)\n    })\n    _push(`<!--]--></ul></div><div class=\"budle-list\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"form-check\"><input class=\"checkbox_animated\" type=\"checkbox\"${\n        _ssrRenderAttr(\"value\", crossSellproduct.id)\n      }${\n        _ssrRenderAttr(\"id\", crossSellproduct.id)\n      }><label class=\"form-check-label\"${\n        _ssrRenderAttr(\"for\", crossSellproduct.id)\n      }><span class=\"color color-1\">${\n        _ssrInterpolate(crossSellproduct.name)\n      } <span>${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span></span></label></div></li>`)\n    })\n    _push(`<!--]--><li class=\"contant\"><h5>${\n      _ssrInterpolate(_ctx.$t(\"Product Selected for\"))\n    }</h5><h4 class=\"theme-color\">${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(_unref(total))).toFixed(2))\n    }</h4>`)\n    _push(_ssrRenderComponent(_component_WidgetsButton, {\n      classes: 'btn text-white theme-bg-color btn-md mt-sm-4 mt-3 fw-bold',\n      id: 'addcartAllbtn',\n      disabled: !_unref(total),\n      iconClass: 'fa-solid fa-cart-shopping ms-2',\n      onOnClick: $event => (AddToCartAll())\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate(_ctx.$t(\" Add All To Cart\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString(_ctx.$t(\" Add All To Cart\")), 1)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n    _push(`</li></ul></div></div></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/ProductDetails/Widgets/ProductBundle/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056342023,
      "end": 1716056342023,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342023,
      "end": 1716056342024,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056342024,
      "end": 1716056342024,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056342024,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342025,
      "end": 1716056342025,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from \"@/store/data\"\nimport { useCartStore } from \"~~/store/cart\"\nimport { useCurrencyStore } from '@/store/currency'\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    productData: Object\n},\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet props = __props\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\n;(\n  ([__temp,__restore] = _withAsyncContext(() => useDataStore().GetProduct())),\n  await __temp,\n  __restore()\n)\nlet { Products } = storeToRefs(useDataStore());\nlet crossSellProducts = Products?.value.data?.filter(product => props.productData?.cross_sell_products?.includes(product.id))\n\nlet total = ref(0);\nlet selectedProductIds = ref([]);\nlet crossSellproducts = ref([]);\nlet selectedProduct = ref([]);\n\nconst select = (event) => {\n    const inputValue = event?.target?.value;\n    const index = selectedProductIds?.value?.indexOf(Number(inputValue));\n    if (event?.target?.checked) {\n        selectedProductIds.value.push(Number(inputValue))\n    } else {\n        selectedProductIds.value.splice(index, 1)\n    }\n    const products = crossSellProducts;\n    selectedProduct.value = products.filter(product => selectedProductIds.value.includes(product?.id));\n    total.value = selectedProduct.value.reduce((sum, item) => sum + item.sale_price, 0);\n}\n\nconst AddToCartAll = () => {\n    selectedProduct.value.forEach(product => {\n        if (product) {\n            useCartStore().addToCartProduct({\n                product: product ? product : null,\n                quantity: 1,\n                variation: null,\n                variation_id: null,\n            });\n        }\n    })\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  if (_unref(crossSellProducts)?.length) {\n    _push(`<div${\n      _ssrRenderAttrs(_mergeProps({ class: \"related-product bundle-sec\" }, _attrs))\n    }><div class=\"product-title-2\"><h4>${\n      _ssrInterpolate(_ctx.$t(\"Frequently bought together\"))\n    }</h4></div><div class=\"related-box\"><div class=\"related-image\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"product-box product-box-bg wow fadeInUp\"><div class=\"product-image\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<img${\n              _ssrRenderAttr(\"src\", crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png')\n            } class=\"img-fluid\" alt=\"\"${\n              _scopeId\n            }>`)\n          } else {\n            return [\n              _createVNode(\"img\", {\n                src: crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png',\n                class: \"img-fluid\",\n                alt: \"\"\n              }, null, 8, [\"src\"])\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`</div><div class=\"product-detail\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<h6 class=\"name\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(crossSellproduct.name)\n            }</h6>`)\n          } else {\n            return [\n              _createVNode(\"h6\", { class: \"name\" }, _toDisplayString(crossSellproduct.name), 1)\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`<h5 class=\"sold text-content\"><span class=\"theme-color price\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span>`)\n      if (crossSellproduct?.discount) {\n        _push(`<del>${\n          _ssrInterpolate(_unref(store).currency.symbol)\n        } ${\n          _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.price)).toFixed(2))\n        }</del>`)\n      } else {\n        _push(`<!---->`)\n      }\n      _push(`</h5></div></div></li>`)\n    })\n    _push(`<!--]--></ul></div><div class=\"budle-list\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"form-check\"><input class=\"checkbox_animated\" type=\"checkbox\"${\n        _ssrRenderAttr(\"value\", crossSellproduct.id)\n      }${\n        _ssrRenderAttr(\"id\", crossSellproduct.id)\n      }><label class=\"form-check-label\"${\n        _ssrRenderAttr(\"for\", crossSellproduct.id)\n      }><span class=\"color color-1\">${\n        _ssrInterpolate(crossSellproduct.name)\n      } <span>${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span></span></label></div></li>`)\n    })\n    _push(`<!--]--><li class=\"contant\"><h5>${\n      _ssrInterpolate(_ctx.$t(\"Product Selected for\"))\n    }</h5><h4 class=\"theme-color\">${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(_unref(total))).toFixed(2))\n    }</h4>`)\n    _push(_ssrRenderComponent(_component_WidgetsButton, {\n      classes: 'btn text-white theme-bg-color btn-md mt-sm-4 mt-3 fw-bold',\n      id: 'addcartAllbtn',\n      disabled: !_unref(total),\n      iconClass: 'fa-solid fa-cart-shopping ms-2',\n      onOnClick: $event => (AddToCartAll())\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate(_ctx.$t(\" Add All To Cart\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString(_ctx.$t(\" Add All To Cart\")), 1)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n    _push(`</li></ul></div></div></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/ProductDetails/Widgets/ProductBundle/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342025,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from \"@/store/data\"\nimport { useCartStore } from \"~~/store/cart\"\nimport { useCurrencyStore } from '@/store/currency'\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    productData: Object\n},\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet props = __props\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\n;(\n  ([__temp,__restore] = _withAsyncContext(() => useDataStore().GetProduct())),\n  await __temp,\n  __restore()\n)\nlet { Products } = storeToRefs(useDataStore());\nlet crossSellProducts = Products?.value.data?.filter(product => props.productData?.cross_sell_products?.includes(product.id))\n\nlet total = ref(0);\nlet selectedProductIds = ref([]);\nlet crossSellproducts = ref([]);\nlet selectedProduct = ref([]);\n\nconst select = (event) => {\n    const inputValue = event?.target?.value;\n    const index = selectedProductIds?.value?.indexOf(Number(inputValue));\n    if (event?.target?.checked) {\n        selectedProductIds.value.push(Number(inputValue))\n    } else {\n        selectedProductIds.value.splice(index, 1)\n    }\n    const products = crossSellProducts;\n    selectedProduct.value = products.filter(product => selectedProductIds.value.includes(product?.id));\n    total.value = selectedProduct.value.reduce((sum, item) => sum + item.sale_price, 0);\n}\n\nconst AddToCartAll = () => {\n    selectedProduct.value.forEach(product => {\n        if (product) {\n            useCartStore().addToCartProduct({\n                product: product ? product : null,\n                quantity: 1,\n                variation: null,\n                variation_id: null,\n            });\n        }\n    })\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_NuxtLink = _resolveComponent(\"NuxtLink\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  if (_unref(crossSellProducts)?.length) {\n    _push(`<div${\n      _ssrRenderAttrs(_mergeProps({ class: \"related-product bundle-sec\" }, _attrs))\n    }><div class=\"product-title-2\"><h4>${\n      _ssrInterpolate(_ctx.$t(\"Frequently bought together\"))\n    }</h4></div><div class=\"related-box\"><div class=\"related-image\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"product-box product-box-bg wow fadeInUp\"><div class=\"product-image\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<img${\n              _ssrRenderAttr(\"src\", crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png')\n            } class=\"img-fluid\" alt=\"\"${\n              _scopeId\n            }>`)\n          } else {\n            return [\n              _createVNode(\"img\", {\n                src: crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png',\n                class: \"img-fluid\",\n                alt: \"\"\n              }, null, 8, [\"src\"])\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`</div><div class=\"product-detail\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<h6 class=\"name\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(crossSellproduct.name)\n            }</h6>`)\n          } else {\n            return [\n              _createVNode(\"h6\", { class: \"name\" }, _toDisplayString(crossSellproduct.name), 1)\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`<h5 class=\"sold text-content\"><span class=\"theme-color price\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span>`)\n      if (crossSellproduct?.discount) {\n        _push(`<del>${\n          _ssrInterpolate(_unref(store).currency.symbol)\n        } ${\n          _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.price)).toFixed(2))\n        }</del>`)\n      } else {\n        _push(`<!---->`)\n      }\n      _push(`</h5></div></div></li>`)\n    })\n    _push(`<!--]--></ul></div><div class=\"budle-list\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"form-check\"><input class=\"checkbox_animated\" type=\"checkbox\"${\n        _ssrRenderAttr(\"value\", crossSellproduct.id)\n      }${\n        _ssrRenderAttr(\"id\", crossSellproduct.id)\n      }><label class=\"form-check-label\"${\n        _ssrRenderAttr(\"for\", crossSellproduct.id)\n      }><span class=\"color color-1\">${\n        _ssrInterpolate(crossSellproduct.name)\n      } <span>${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span></span></label></div></li>`)\n    })\n    _push(`<!--]--><li class=\"contant\"><h5>${\n      _ssrInterpolate(_ctx.$t(\"Product Selected for\"))\n    }</h5><h4 class=\"theme-color\">${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(_unref(total))).toFixed(2))\n    }</h4>`)\n    _push(_ssrRenderComponent(_component_WidgetsButton, {\n      classes: 'btn text-white theme-bg-color btn-md mt-sm-4 mt-3 fw-bold',\n      id: 'addcartAllbtn',\n      disabled: !_unref(total),\n      iconClass: 'fa-solid fa-cart-shopping ms-2',\n      onOnClick: $event => (AddToCartAll())\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate(_ctx.$t(\" Add All To Cart\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString(_ctx.$t(\" Add All To Cart\")), 1)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n    _push(`</li></ul></div></div></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/ProductDetails/Widgets/ProductBundle/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342025,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Button/index.vue\";\nimport { ref } from 'vue';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from \"@/store/data\"\nimport { useCartStore } from \"~~/store/cart\"\nimport { useCurrencyStore } from '@/store/currency'\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    productData: Object\n},\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet props = __props\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\n;(\n  ([__temp,__restore] = _withAsyncContext(() => useDataStore().GetProduct())),\n  await __temp,\n  __restore()\n)\nlet { Products } = storeToRefs(useDataStore());\nlet crossSellProducts = Products?.value.data?.filter(product => props.productData?.cross_sell_products?.includes(product.id))\n\nlet total = ref(0);\nlet selectedProductIds = ref([]);\nlet crossSellproducts = ref([]);\nlet selectedProduct = ref([]);\n\nconst select = (event) => {\n    const inputValue = event?.target?.value;\n    const index = selectedProductIds?.value?.indexOf(Number(inputValue));\n    if (event?.target?.checked) {\n        selectedProductIds.value.push(Number(inputValue))\n    } else {\n        selectedProductIds.value.splice(index, 1)\n    }\n    const products = crossSellProducts;\n    selectedProduct.value = products.filter(product => selectedProductIds.value.includes(product?.id));\n    total.value = selectedProduct.value.reduce((sum, item) => sum + item.sale_price, 0);\n}\n\nconst AddToCartAll = () => {\n    selectedProduct.value.forEach(product => {\n        if (product) {\n            useCartStore().addToCartProduct({\n                product: product ? product : null,\n                quantity: 1,\n                variation: null,\n                variation_id: null,\n            });\n        }\n    })\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_NuxtLink = __nuxt_component_0\n  const _component_WidgetsButton = __nuxt_component_1\n\n  if (_unref(crossSellProducts)?.length) {\n    _push(`<div${\n      _ssrRenderAttrs(_mergeProps({ class: \"related-product bundle-sec\" }, _attrs))\n    }><div class=\"product-title-2\"><h4>${\n      _ssrInterpolate(_ctx.$t(\"Frequently bought together\"))\n    }</h4></div><div class=\"related-box\"><div class=\"related-image\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"product-box product-box-bg wow fadeInUp\"><div class=\"product-image\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<img${\n              _ssrRenderAttr(\"src\", crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png')\n            } class=\"img-fluid\" alt=\"\"${\n              _scopeId\n            }>`)\n          } else {\n            return [\n              _createVNode(\"img\", {\n                src: crossSellproduct.product_thumbnail ? crossSellproduct?.product_thumbnail?.original_url : '/images/product.png',\n                class: \"img-fluid\",\n                alt: \"\"\n              }, null, 8, [\"src\"])\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`</div><div class=\"product-detail\">`)\n      _push(_ssrRenderComponent(_component_NuxtLink, {\n        to: `/product/${crossSellproduct.slug}`\n      }, {\n        default: _withCtx((_, _push, _parent, _scopeId) => {\n          if (_push) {\n            _push(`<h6 class=\"name\"${\n              _scopeId\n            }>${\n              _ssrInterpolate(crossSellproduct.name)\n            }</h6>`)\n          } else {\n            return [\n              _createVNode(\"h6\", { class: \"name\" }, _toDisplayString(crossSellproduct.name), 1)\n            ]\n          }\n        }),\n        _: 2\n      }, _parent))\n      _push(`<h5 class=\"sold text-content\"><span class=\"theme-color price\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span>`)\n      if (crossSellproduct?.discount) {\n        _push(`<del>${\n          _ssrInterpolate(_unref(store).currency.symbol)\n        } ${\n          _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.price)).toFixed(2))\n        }</del>`)\n      } else {\n        _push(`<!---->`)\n      }\n      _push(`</h5></div></div></li>`)\n    })\n    _push(`<!--]--></ul></div><div class=\"budle-list\"><ul><!--[-->`)\n    _ssrRenderList(_unref(crossSellProducts), (crossSellproduct) => {\n      _push(`<li><div class=\"form-check\"><input class=\"checkbox_animated\" type=\"checkbox\"${\n        _ssrRenderAttr(\"value\", crossSellproduct.id)\n      }${\n        _ssrRenderAttr(\"id\", crossSellproduct.id)\n      }><label class=\"form-check-label\"${\n        _ssrRenderAttr(\"for\", crossSellproduct.id)\n      }><span class=\"color color-1\">${\n        _ssrInterpolate(crossSellproduct.name)\n      } <span>${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(crossSellproduct.sale_price)).toFixed(2))\n      }</span></span></label></div></li>`)\n    })\n    _push(`<!--]--><li class=\"contant\"><h5>${\n      _ssrInterpolate(_ctx.$t(\"Product Selected for\"))\n    }</h5><h4 class=\"theme-color\">${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(_unref(total))).toFixed(2))\n    }</h4>`)\n    _push(_ssrRenderComponent(_component_WidgetsButton, {\n      classes: 'btn text-white theme-bg-color btn-md mt-sm-4 mt-3 fw-bold',\n      id: 'addcartAllbtn',\n      disabled: !_unref(total),\n      iconClass: 'fa-solid fa-cart-shopping ms-2',\n      onOnClick: $event => (AddToCartAll())\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate(_ctx.$t(\" Add All To Cart\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString(_ctx.$t(\" Add All To Cart\")), 1)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n    _push(`</li></ul></div></div></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/ProductDetails/Widgets/ProductBundle/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342028,
      "end": 1716056342028,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056342029,
      "end": 1716056342029,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056342029,
      "end": 1716056342029,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056342029,
      "end": 1716056342029,
      "order": "normal"
    }
  ]
}
