{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Wrapper/Form.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <form @submit.prevent=\"HandleSubmit\" :class=\"Classes\">\n        <slot :FormData=\"FormData\" :submit=\"HandleSubmit\" :FormSubmitted=\"FormData.IsSubmitted\" />\n    </form>\n</template>\n\n<script setup>\nlet props = defineProps({\n    OnSubmit: Function,\n    Inputs: Object,\n    NotRequiredFields: { type: Array, default: [] },\n    InitialData: Object,\n    Classes: String\n});\nlet FormData = ref({ IsValid: false, data: {}, IsSubmitted: false });\n\nprops.InitialData && setInitialValues({ initialValues: props.InitialData, inputs: props.Inputs });\nconst HandleSubmit = () => {\n    FormData.value.IsSubmitted = true;\n    if (formValidator({ FormData: props.Inputs, notRequired: props.NotRequiredFields })) {\n        FormData.value.IsValid = true;\n        FormData.value.data = convertInputData({ data: props.Inputs })\n        props.OnSubmit && props.OnSubmit(FormData.value.data);\n    }\n}\ndefineExpose({\n    HandleSubmit\n})\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056343142,
      "end": 1716056343242,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'Form',\n  __ssrInlineRender: true,\n  props: {\n    OnSubmit: Function,\n    Inputs: Object,\n    NotRequiredFields: { type: Array, default: [] },\n    InitialData: Object,\n    Classes: String\n},\n  setup(__props, { expose: __expose }) {\n\nlet props = __props;\nlet FormData = ref({ IsValid: false, data: {}, IsSubmitted: false });\n\nprops.InitialData && setInitialValues({ initialValues: props.InitialData, inputs: props.Inputs });\nconst HandleSubmit = () => {\n    FormData.value.IsSubmitted = true;\n    if (formValidator({ FormData: props.Inputs, notRequired: props.NotRequiredFields })) {\n        FormData.value.IsValid = true;\n        FormData.value.data = convertInputData({ data: props.Inputs })\n        props.OnSubmit && props.OnSubmit(FormData.value.data);\n    }\n}\n__expose({\n    HandleSubmit\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<form${_ssrRenderAttrs(_mergeProps({ class: __props.Classes }, _attrs))}>`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {\n    FormData: _unref(FormData),\n    submit: HandleSubmit,\n    FormSubmitted: _unref(FormData).IsSubmitted\n  }, null, _push, _parent)\n  _push(`</form>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Wrapper/Form.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343242,
      "end": 1716056343242,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343243,
      "end": 1716056343243,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { setInitialValues } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/initializers/initializer.js';\nimport formValidator from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/validators/formValidator.js';\nimport { convertInputData } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/formators/form.js';\nimport { unref as _unref, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'Form',\n  __ssrInlineRender: true,\n  props: {\n    OnSubmit: Function,\n    Inputs: Object,\n    NotRequiredFields: { type: Array, default: [] },\n    InitialData: Object,\n    Classes: String\n},\n  setup(__props, { expose: __expose }) {\n\nlet props = __props;\nlet FormData = ref({ IsValid: false, data: {}, IsSubmitted: false });\n\nprops.InitialData && setInitialValues({ initialValues: props.InitialData, inputs: props.Inputs });\nconst HandleSubmit = () => {\n    FormData.value.IsSubmitted = true;\n    if (formValidator({ FormData: props.Inputs, notRequired: props.NotRequiredFields })) {\n        FormData.value.IsValid = true;\n        FormData.value.data = convertInputData({ data: props.Inputs })\n        props.OnSubmit && props.OnSubmit(FormData.value.data);\n    }\n}\n__expose({\n    HandleSubmit\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<form${_ssrRenderAttrs(_mergeProps({ class: __props.Classes }, _attrs))}>`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {\n    FormData: _unref(FormData),\n    submit: HandleSubmit,\n    FormSubmitted: _unref(FormData).IsSubmitted\n  }, null, _push, _parent)\n  _push(`</form>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Wrapper/Form.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343243,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { setInitialValues } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/initializers/initializer.js';\nimport formValidator from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/validators/formValidator.js';\nimport { convertInputData } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/utils/formators/form.js';\nimport { unref as _unref, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderSlot as _ssrRenderSlot, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'Form',\n  __ssrInlineRender: true,\n  props: {\n    OnSubmit: Function,\n    Inputs: Object,\n    NotRequiredFields: { type: Array, default: [] },\n    InitialData: Object,\n    Classes: String\n},\n  setup(__props, { expose: __expose }) {\n\nlet props = __props;\nlet FormData = ref({ IsValid: false, data: {}, IsSubmitted: false });\n\nprops.InitialData && setInitialValues({ initialValues: props.InitialData, inputs: props.Inputs });\nconst HandleSubmit = () => {\n    FormData.value.IsSubmitted = true;\n    if (formValidator({ FormData: props.Inputs, notRequired: props.NotRequiredFields })) {\n        FormData.value.IsValid = true;\n        FormData.value.data = convertInputData({ data: props.Inputs })\n        props.OnSubmit && props.OnSubmit(FormData.value.data);\n    }\n}\n__expose({\n    HandleSubmit\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<form${_ssrRenderAttrs(_mergeProps({ class: __props.Classes }, _attrs))}>`)\n  _ssrRenderSlot(_ctx.$slots, \"default\", {\n    FormData: _unref(FormData),\n    submit: HandleSubmit,\n    FormSubmitted: _unref(FormData).IsSubmitted\n  }, null, _push, _parent)\n  _push(`</form>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Wrapper/Form.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343243,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056343244,
      "end": 1716056343244,
      "order": "normal"
    }
  ]
}
