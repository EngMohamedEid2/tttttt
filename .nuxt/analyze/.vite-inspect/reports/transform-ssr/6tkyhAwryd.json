{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/store/location.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineStore } from \"pinia\";\n\nexport const useLocationStore = defineStore(\"location-store\", () => {\n  var countries = ref([]),ResponseCountries = ref([]),ResponseStates = ref([]),\n    states = ref([]);\n\n    const GetData = async()=>{\n     let {data:Countries,error:CountryError} = await HandleRequest(\"country\",\n        {  key: \"getAllCountries\" }\n        );\n\n      if(!CountryError.value){\n        ResponseCountries.value= Countries.value;\n      }\n    \n      let {data:States,error:StateErrors} = await HandleRequest('state',\n        {  key: \"getAllStates\" }\n      );\n\n      if(!StateErrors.value){\n        ResponseStates.value= States.value;\n      }\n    }\n\n    GetData();\n\n  return {\n    countries,\n    states,\n    ResponseCountries,\n    ResponseStates\n  };\n});\n",
      "start": 1716056343395,
      "end": 1716056343555,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056343555,
      "end": 1716056343555,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056343556,
      "end": 1716056343556,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { defineStore } from \"pinia\";\nexport const useLocationStore = defineStore(\"location-store\", () => {\n  var countries = ref([]), ResponseCountries = ref([]), ResponseStates = ref([]), states = ref([]);\n  const GetData = async () => {\n    let { data: Countries, error: CountryError } = await HandleRequest(\n      \"country\",\n      { key: \"getAllCountries\" }\n    );\n    if (!CountryError.value) {\n      ResponseCountries.value = Countries.value;\n    }\n    let { data: States, error: StateErrors } = await HandleRequest(\n      \"state\",\n      { key: \"getAllStates\" }\n    );\n    if (!StateErrors.value) {\n      ResponseStates.value = States.value;\n    }\n  };\n  GetData();\n  return {\n    countries,\n    states,\n    ResponseCountries,\n    ResponseStates\n  };\n});\n",
      "start": 1716056343556,
      "end": 1716056343584,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056343584,
      "end": 1716056343584,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343584,
      "end": 1716056343585,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343584,
      "end": 1716056343585,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { defineStore } from \"pinia\";\nexport const useLocationStore = defineStore(\"location-store\", () => {\n  var countries = ref([]), ResponseCountries = ref([]), ResponseStates = ref([]), states = ref([]);\n  const GetData = async () => {\n    let { data: Countries, error: CountryError } = await HandleRequest(\n      \"country\",\n      { key: \"getAllCountries\" }\n    );\n    if (!CountryError.value) {\n      ResponseCountries.value = Countries.value;\n    }\n    let { data: States, error: StateErrors } = await HandleRequest(\n      \"state\",\n      { key: \"getAllStates\" }\n    );\n    if (!StateErrors.value) {\n      ResponseStates.value = States.value;\n    }\n  };\n  GetData();\n  return {\n    countries,\n    states,\n    ResponseCountries,\n    ResponseStates\n  };\n});\n",
      "start": 1716056343585,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { defineStore } from \"pinia\";\nexport const useLocationStore = defineStore(\"location-store\", () => {\n  var countries = ref([]), ResponseCountries = ref([]), ResponseStates = ref([]), states = ref([]);\n  const GetData = async () => {\n    let { data: Countries, error: CountryError } = await HandleRequest(\n      \"country\",\n      { key: \"getAllCountries\" }\n    );\n    if (!CountryError.value) {\n      ResponseCountries.value = Countries.value;\n    }\n    let { data: States, error: StateErrors } = await HandleRequest(\n      \"state\",\n      { key: \"getAllStates\" }\n    );\n    if (!StateErrors.value) {\n      ResponseStates.value = States.value;\n    }\n  };\n  GetData();\n  return {\n    countries,\n    states,\n    ResponseCountries,\n    ResponseStates\n  };\n});\n",
      "start": 1716056343585,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343586,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343586,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343586,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343586,
      "end": 1716056343586,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056343587,
      "end": 1716056343587,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056343587,
      "end": 1716056343587,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056343587,
      "end": 1716056343587,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056343588,
      "end": 1716056343588,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056343588,
      "end": 1716056343588,
      "order": "normal"
    }
  ]
}
