{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/pages/seller/store/fruits-market.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <div>\n        <WidgetsBreadcrumb :breadcrumbs=\"breadcrumbs\" />\n        <ShopSellerDetailsBasic :store=\"store\" v-if=\"layout == 'basic_store_details'\" :layout=\"layout\">\n        </ShopSellerDetailsBasic>\n        <ShopSellerDetailsClassic :store=\"store\" v-if=\"layout == 'classic_store_details'\" :layout=\"layout\">\n        </ShopSellerDetailsClassic>\n    </div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Fruits Market', links: [{ name: 'Sellers Store' }, { name: 'Fruits Market' }] }\n\nlet router = useRoute()\nconst layout = ref('basic_store_details');\n;\n\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\nlet { data: store } = await HandleRequest('store/slug/fruits-market', { key: 'GetStore', params: StoreParams.value }, { initialCache: false });\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\n\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056342933,
      "end": 1716056342986,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056342986,
      "end": 1716056342986,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'fruits-market',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Fruits Market', links: [{ name: 'Sellers Store' }, { name: 'Fruits Market' }] }\n\nlet router = useRoute()\nconst layout = ref('basic_store_details');\n;\n\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store/slug/fruits-market', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerDetailsBasic = _resolveComponent(\"ShopSellerDetailsBasic\")\n  const _component_ShopSellerDetailsClassic = _resolveComponent(\"ShopSellerDetailsClassic\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  if (_unref(layout) == 'basic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsBasic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) == 'classic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsClassic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/store/fruits-market.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342986,
      "end": 1716056342987,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056342987,
      "end": 1716056342987,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342987,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342987,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, watch } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'fruits-market',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Fruits Market', links: [{ name: 'Sellers Store' }, { name: 'Fruits Market' }] }\n\nlet router = useRoute()\nconst layout = ref('basic_store_details');\n;\n\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store/slug/fruits-market', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerDetailsBasic = _resolveComponent(\"ShopSellerDetailsBasic\")\n  const _component_ShopSellerDetailsClassic = _resolveComponent(\"ShopSellerDetailsClassic\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  if (_unref(layout) == 'basic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsBasic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) == 'classic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsClassic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/store/fruits-market.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342988,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, watch } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'fruits-market',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Fruits Market', links: [{ name: 'Sellers Store' }, { name: 'Fruits Market' }] }\n\nlet router = useRoute()\nconst layout = ref('basic_store_details');\n;\n\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store/slug/fruits-market', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerDetailsBasic = _resolveComponent(\"ShopSellerDetailsBasic\")\n  const _component_ShopSellerDetailsClassic = _resolveComponent(\"ShopSellerDetailsClassic\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  if (_unref(layout) == 'basic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsBasic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) == 'classic_store_details') {\n    _push(_ssrRenderComponent(_component_ShopSellerDetailsClassic, {\n      store: _unref(store),\n      layout: _unref(layout)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/store/fruits-market.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342988,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342988,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342988,
      "end": 1716056342988,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1716056342988,
      "end": 1716056342989,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1716056342988,
      "end": 1716056342989,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056342989,
      "end": 1716056342989,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056342989,
      "end": 1716056342989,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056342989,
      "end": 1716056342989,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056342989,
      "end": 1716056342989,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056342989,
      "end": 1716056342989,
      "order": "normal"
    }
  ]
}
