{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Alert/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div>\n  <div class=\"alert alert-danger login-alert\" role=\"alert\" v-if=\"alert['type'] == 'error'\">\n    <i class=\"ri-error-warning-line\"></i> {{ alert[\"message\"] }}\n  </div>\n  <div class=\"alert alert-success login-alert\" role=\"alert\" v-if=\"alert['type'] == 'success'\">\n    <i class=\"ri-check-line\"></i>{{ alert[\"message\"] }}\n  </div>\n</div>\n</template>\n\n<script setup>\nlet alert = ref({\n  type: null,\n  message: null\n});\n\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056342370,
      "end": 1716056342571,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet alert = ref({\n  type: null,\n  message: null\n});\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (_unref(alert)['type'] == 'error') {\n    _push(`<div class=\"alert alert-danger login-alert\" role=\"alert\"><i class=\"ri-error-warning-line\"></i> ${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(alert)['type'] == 'success') {\n    _push(`<div class=\"alert alert-success login-alert\" role=\"alert\"><i class=\"ri-check-line\"></i>${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Alert/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342571,
      "end": 1716056342571,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056342572,
      "end": 1716056342572,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { unref as _unref } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet alert = ref({\n  type: null,\n  message: null\n});\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (_unref(alert)['type'] == 'error') {\n    _push(`<div class=\"alert alert-danger login-alert\" role=\"alert\"><i class=\"ri-error-warning-line\"></i> ${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(alert)['type'] == 'success') {\n    _push(`<div class=\"alert alert-success login-alert\" role=\"alert\"><i class=\"ri-check-line\"></i>${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Alert/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342572,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { unref as _unref } from \"vue\"\nimport { ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet alert = ref({\n  type: null,\n  message: null\n});\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (_unref(alert)['type'] == 'error') {\n    _push(`<div class=\"alert alert-danger login-alert\" role=\"alert\"><i class=\"ri-error-warning-line\"></i> ${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(alert)['type'] == 'success') {\n    _push(`<div class=\"alert alert-success login-alert\" role=\"alert\"><i class=\"ri-check-line\"></i>${_ssrInterpolate(_unref(alert)[\"message\"])}</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Alert/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342572,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056342573,
      "end": 1716056342573,
      "order": "normal"
    }
  ]
}
