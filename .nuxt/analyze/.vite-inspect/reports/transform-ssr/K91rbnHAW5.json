{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ReviewModal/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n  <div class=\"modal-header\">\n    <h3 class=\"fw-semibold\">{{ (initialRating ? 'Edit a Review' : 'Write a Review') }}</h3>\n    <WidgetsButton :classes=\"'btn btn-close'\" :id=\"'profile_modal_close_btn'\" @onClick=\"() => { emit('close') }\">\n      <Icon name=\"ri-close-line\"></Icon>\n    </WidgetsButton>\n  </div>\n\n  <div class=\"modal-body\">\n    <form class=\"product-review-form\">\n      <div class=\"product-wrapper\">\n        <div class=\"product-image\">\n          <img :src=\"product.product_thumbnail ? product.product_thumbnail.original_url : '/images/product.png'\"\n            class=\"img-fluid\" :alt=\"product.name\">\n        </div>\n        <div class=\"product-content\">\n          <h5 class=\"name\">{{ product.name }}</h5>\n          <div class=\"product-review-rating\">\n            <label>{{ $t('Rating') }}</label>\n            <div class=\"product-rating\">\n              <NuxtRating :read-only=\"false\" :ratingValue=\"initialRating || 0\" />\n              <h6 class=\"rating-number\" v-if=\"product.rating_count\">( {{ product.rating_count.toFixed(2) || 0 }})</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"review-box\">\n        <div class=\"product-review-rating\">\n          <label>{{ $t('Rating') }}</label>\n          <div class=\"product-rating\">\n            <NuxtRating :read-only=\"false\" :ratingValue=\"initialRating || 0\" @rating-selected=\"getRetingValue\" />\n          </div>\n          <div class=\"invalid-feedback\">\n            {{ $t('Rating is required') }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"review-box\">\n        <label class=\"form-label\" for=\"content\">{{ $t('Review Content') }}</label>\n        <textarea placeholder=\"Write Something...\" class=\"form-control\" v-model=\"discription\"\n          formControlName=\"description\" rows=\"3\"></textarea>\n      </div>\n    </form>\n\n    <div class=\"modal-footer\">\n      <WidgetsButton :classes=\"'btn btn-theme-outline btn-md fw-bold'\" :type=\"'button'\" :id=\"'cancel_profile_btn'\"\n        @onClick=\"modal.dismiss('Cancel')\">{{ $t('Cancel') }}</WidgetsButton>\n      <WidgetsButton :classes=\"'btn theme-bg-color btn-md fw-bold text-light'\" :id=\"'submit_profile_btn'\"\n        @onClick=\"submit()\">\n        {{ $t('Submit') }}\n      </WidgetsButton>\n    </div>\n  </div>\n</div>\n</template>\n\n<script setup>\nimport { useDataStore } from '~~/store/data';\nlet props = defineProps({\n  product: Object,\n  reviews: Object\n})\n\nlet emit = defineEmits(['close'])\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  })\n  useDataStore().GetSingleProduct()\n}\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056342649,
      "end": 1716056342760,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056342760,
      "end": 1716056342760,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  })\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342760,
      "end": 1716056342761,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056342761,
      "end": 1716056342761,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  }, '$Uy8jg6n7j3')\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342761,
      "end": 1716056342763,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  }, '$Uy8jg6n7j3')\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342761,
      "end": 1716056342763,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { useFetch } from '#app/composables/fetch';\nimport { BaseUrl } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/urls.js';\nimport { GetHeaders } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/handleRequest.js';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  }, '$Uy8jg6n7j3')\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342763,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { useFetch } from '#app/composables/fetch';\nimport { BaseUrl } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/urls.js';\nimport { GetHeaders } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/handleRequest.js';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  }, '$Uy8jg6n7j3')\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342763,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Button/index.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt-icon/dist/runtime/Icon.vue\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt-rating/dist/runtime/components/NuxtRating.vue\";\nimport { ref } from 'vue';\nimport { useFetch } from '#app/composables/fetch';\nimport { BaseUrl } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/urls.js';\nimport { GetHeaders } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/services/api/handleRequest.js';\nimport { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  }, '$Uy8jg6n7j3')\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = __nuxt_component_0\n  const _component_Icon = __nuxt_component_1\n  const _component_NuxtRating = __nuxt_component_2\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate((_unref(initialRating) ? 'Edit a Review' : 'Write a Review'))\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'profile_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close') }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"modal-body\"><form class=\"product-review-form\"><div class=\"product-wrapper\"><div class=\"product-image\"><img${\n    _ssrRenderAttr(\"src\", __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png')\n  } class=\"img-fluid\"${\n    _ssrRenderAttr(\"alt\", __props.product.name)\n  }></div><div class=\"product-content\"><h5 class=\"name\">${\n    _ssrInterpolate(__props.product.name)\n  }</h5><div class=\"product-review-rating\"><label>${\n    _ssrInterpolate(_ctx.$t('Rating'))\n  }</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0\n  }, null, _parent))\n  if (__props.product.rating_count) {\n    _push(`<h6 class=\"rating-number\">( ${_ssrInterpolate(__props.product.rating_count.toFixed(2) || 0)})</h6>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div></div></div></div><div class=\"review-box\"><div class=\"product-review-rating\"><label>${_ssrInterpolate(_ctx.$t('Rating'))}</label><div class=\"product-rating\">`)\n  _push(_ssrRenderComponent(_component_NuxtRating, {\n    \"read-only\": false,\n    ratingValue: _unref(initialRating) || 0,\n    onRatingSelected: getRetingValue\n  }, null, _parent))\n  _push(`</div><div class=\"invalid-feedback\">${\n    _ssrInterpolate(_ctx.$t('Rating is required'))\n  }</div></div></div><div class=\"review-box\"><label class=\"form-label\" for=\"content\">${\n    _ssrInterpolate(_ctx.$t('Review Content'))\n  }</label><textarea placeholder=\"Write Something...\" class=\"form-control\" formControlName=\"description\" rows=\"3\">${\n    _ssrInterpolate(_unref(discription))\n  }</textarea></div></form><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: $event => (_ctx.modal.dismiss('Cancel'))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Cancel'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn',\n    onOnClick: $event => (submit())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t('Submit'))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ReviewModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056342764,
      "end": 1716056342764,
      "order": "normal"
    }
  ]
}
