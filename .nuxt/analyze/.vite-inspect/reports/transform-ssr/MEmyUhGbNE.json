{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Account/Sidebar/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div class=\"dashboard-left-sidebar\">\n    <div class=\"close-button d-flex d-lg-none\">\n      <WidgetsButton :classes=\"'close-sidebar'\" :style=\"'button'\" :id=\"'close_sidebar_btn'\" @onClick=\"closeSidebar()\">\n        <Icon name=\"ri-close-fill\"></Icon>\n      </WidgetsButton>\n    </div>\n    <div class=\"profile-box\">\n      <div class=\"cover-image\">\n        <img src=\"/images/inner-page/cover-img.jpg\" class=\"img-fluid\" alt=\"cover-img\" />\n      </div>\n\n      <div class=\"profile-contain\">\n        <div class=\"profile-image\">\n          <div class=\"position-relative\">\n            <img :src=\"user?.profile_image?.original_url\" class=\"update_img\" alt=\"profile\"\n              v-if=\"user?.profile_image && user?.profile_image?.original_url\" />\n            <div class=\"user-round\" v-else>\n              <h4>{{ user?.name?.charAt(0)?.toString()?.toUpperCase() }}</h4>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"profile-name\">\n          <h3>{{ UserInfo.name }}</h3>\n          <h6 class=\"text-content\">{{ UserInfo.email }}</h6>\n        </div>\n      </div>\n    </div>\n    <AccountSidebarNavLink />\n  </div>\n</template>\n\n<script setup>\nlet props = defineProps({\n  user: Object,\n  UserInfo: Object,\n});\nlet emit = defineEmits([\"close\"])\nfunction closeSidebar() {\n  emit('close')\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056340558,
      "end": 1716056340938,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056340938,
      "end": 1716056340938,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056340938,
      "end": 1716056340939,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/inner-page/cover-img.jpg'\n\n\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  user: Object,\n  UserInfo: Object,\n},\n  emits: [\"close\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\nlet emit = __emit\nfunction closeSidebar() {\n  emit('close')\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_AccountSidebarNavLink = _resolveComponent(\"AccountSidebarNavLink\")\n\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"dashboard-left-sidebar\" }, _attrs))}><div class=\"close-button d-flex d-lg-none\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'close-sidebar',\n    style: 'button',\n    id: 'close_sidebar_btn',\n    onOnClick: $event => (closeSidebar())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-fill\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-fill\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"profile-box\"><div class=\"cover-image\"><img${_ssrRenderAttr(\"src\", _imports_0)} class=\"img-fluid\" alt=\"cover-img\"></div><div class=\"profile-contain\"><div class=\"profile-image\"><div class=\"position-relative\">`)\n  if (__props.user?.profile_image && __props.user?.profile_image?.original_url) {\n    _push(`<img${_ssrRenderAttr(\"src\", __props.user?.profile_image?.original_url)} class=\"update_img\" alt=\"profile\">`)\n  } else {\n    _push(`<div class=\"user-round\"><h4>${_ssrInterpolate(__props.user?.name?.charAt(0)?.toString()?.toUpperCase())}</h4></div>`)\n  }\n  _push(`</div></div><div class=\"profile-name\"><h3>${\n    _ssrInterpolate(__props.UserInfo.name)\n  }</h3><h6 class=\"text-content\">${\n    _ssrInterpolate(__props.UserInfo.email)\n  }</h6></div></div></div>`)\n  _push(_ssrRenderComponent(_component_AccountSidebarNavLink, null, null, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Sidebar/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056340939,
      "end": 1716056340939,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056340939,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056340940,
      "end": 1716056340940,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056340940,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056340940,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056340941,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056340941,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056340941,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056340941,
      "end": 1716056340941,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056340941,
      "end": 1716056340942,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Button/index.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt-icon/dist/runtime/Icon.vue\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Account/Sidebar/NavLink.vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/inner-page/cover-img.jpg'\n\n\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n  user: Object,\n  UserInfo: Object,\n},\n  emits: [\"close\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\nlet emit = __emit\nfunction closeSidebar() {\n  emit('close')\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = __nuxt_component_0\n  const _component_Icon = __nuxt_component_1\n  const _component_AccountSidebarNavLink = __nuxt_component_2\n\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"dashboard-left-sidebar\" }, _attrs))}><div class=\"close-button d-flex d-lg-none\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'close-sidebar',\n    style: 'button',\n    id: 'close_sidebar_btn',\n    onOnClick: $event => (closeSidebar())\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-fill\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-fill\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><div class=\"profile-box\"><div class=\"cover-image\"><img${_ssrRenderAttr(\"src\", _imports_0)} class=\"img-fluid\" alt=\"cover-img\"></div><div class=\"profile-contain\"><div class=\"profile-image\"><div class=\"position-relative\">`)\n  if (__props.user?.profile_image && __props.user?.profile_image?.original_url) {\n    _push(`<img${_ssrRenderAttr(\"src\", __props.user?.profile_image?.original_url)} class=\"update_img\" alt=\"profile\">`)\n  } else {\n    _push(`<div class=\"user-round\"><h4>${_ssrInterpolate(__props.user?.name?.charAt(0)?.toString()?.toUpperCase())}</h4></div>`)\n  }\n  _push(`</div></div><div class=\"profile-name\"><h3>${\n    _ssrInterpolate(__props.UserInfo.name)\n  }</h3><h6 class=\"text-content\">${\n    _ssrInterpolate(__props.UserInfo.email)\n  }</h6></div></div></div>`)\n  _push(_ssrRenderComponent(_component_AccountSidebarNavLink, null, null, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Account/Sidebar/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056340942,
      "end": 1716056340942,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056340942,
      "end": 1716056340942,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056340942,
      "end": 1716056340942,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056340942,
      "end": 1716056340942,
      "order": "normal"
    }
  ]
}
