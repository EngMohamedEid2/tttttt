{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/store/data.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineStore } from \"pinia\";\nimport { useCollectionStore } from \"./collection\";\nimport axios from \"axios\";\nimport { HandleRequest } from \"~~/composables/HandleRequest\";\nexport const useDataStore = defineStore(\"data-store\", () => {\n  let ThemeOptions = ref([]),\n    Products = ref([]),\n    Blogs = ref([]),\n    searchProducts = ref([]),\n    Categories = ref([]),\n    Currencies = ref([]),\n    SingleProducts = ref([]),\n    Settings = ref([]),\n    Notification = ref([]),\n    offCanvasMenu = ref(false),\n    queAns = ref(false),\n    SearchProductParams = ref({ search: \"\", page: 1, paginate: 12, status: 1 }),\n    ProductParams = {\n      page: 1, // Current page number\n      paginate: 40, // Display per page,\n      status: 1,\n      field: \"created_at\",\n      price: \"\",\n      category: \"\",\n      tag: \"\",\n      sort: \"\", // ASC, DSC\n      sortBy: \"asc\",\n      rating: \"\",\n      attribute: \"\",\n    };\n  // let selectedCategory = ref({});\n  let selectedCategoryProducts = ref([]);\n  // const fetchProducts = async (id) => {\n  //   await HandleRequest(\n  //     `https://zezo.anevex.com/app/shop-api/products?category_id=${id}`,\n  //     {\n  //       onResponse: ({ response }) => {\n  //         selectedCategory.value = Categories.find((cat) => cat.id === id);\n  //         selectedCategoryProducts.value = response.data;\n  //         console.log(\"done\");\n  //       },\n  //     }\n  //   );\n  // };\n\n  let preferedcats = useCollectionStore().filterObject.selectedCategories;\n\n  const GetAllThemeOptions = async () => {\n    HandleRequest(\"themeOptions\", {\n      key: \"getAllThemeOptionInStore\",\n      onResponse({ response }) {\n        ThemeOptions.value = response._data;\n      },\n    });\n  };\n\n  const GetAllProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsInStore\",\n      onResponse({ response }) {\n        Products.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSingleProduct = async () => {\n    HandleRequest(`product/slug/${useRoute().params.slug}`, {\n      key: \"getSingleProductsInStore\",\n      onResponse({ response }) {\n        SingleProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSearchProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsForSearchInStore\",\n      params: SearchProductParams.value,\n      onResponse({ response }) {\n        searchProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllBlogs = async () => {\n    HandleRequest(\"blog\", {\n      key: \"getAllBlogsInStore\",\n      onResponse({ response }) {\n        Blogs.value = response._data;\n      },\n    });\n  };\n\n  const GetAllCategory = async () => {\n    HandleRequest(\"https://zezo.anevex.com/app/shop-api/categories\", {\n      key: \"getAllCategoryInStore\",\n      onResponse({ response }) {\n        Categories.value = response._data.data;\n        // console.log(\"cat\", Categories.value);\n      },\n    });\n  };\n\n  const GetAllCurrency = async () => {\n    HandleRequest(\"currency\", {\n      key: \"getAllCurrencyStore\",\n      onResponse({ response }) {\n        Currencies.value = response._data;\n        // console.log(response);\n        // console.log(\"curr\", Currencies.value);\n      },\n    });\n  };\n\n  GetAllCurrency();\n\n  const GetAllNotification = async () => {\n    HandleRequest(\"notifications\", {\n      key: \"getAllNotificationsStore\",\n      onResponse({ response }) {\n        Notification.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSettings = async () => {\n    HandleRequest(\"settings\", {\n      key: \"getAllSettingStore\",\n      onResponse({ response }) {\n        Settings.value = response._data;\n      },\n    });\n  };\n  const GetAllQustionAnswer = async (value) => {\n    await HandleRequest(\"question-and-answer\", {\n      key: \"getQuestionAnswer\",\n      params: { product_id: value },\n      onResponse({ response }) {\n        queAns.value = response._data;\n      },\n    });\n  };\n  const GetThemeoption = async () => {\n    await GetAllThemeOptions();\n  };\n\n  const GetProduct = async () => {\n    await GetAllProduct();\n  };\n\n  const GetCategory = async () => {\n    await GetAllCategory();\n  };\n\n  const GetBlog = async () => {\n    await GetAllBlogs();\n  };\n\n  const GetCurrency = async () => {\n    await GetAllCurrency();\n  };\n\n  const GetSingleProduct = async () => {\n    await GetAllSingleProduct();\n  };\n\n  const GetSettings = async () => {\n    await GetAllSettings();\n  };\n  const GetSearch = async () => {\n    await GetAllSearchProduct();\n  };\n\n  const GetNotifications = async () => {\n    await GetAllNotification();\n  };\n\n  function setInitialParams(searchParams) {\n    SearchProductParams.value.search = searchParams;\n    GetAllSearchProduct();\n  }\n  return {\n    // selectedCategory,\n    selectedCategoryProducts,\n    offCanvasMenu,\n    ThemeOptions,\n    GetThemeoption,\n    Products,\n    GetProduct,\n    Categories,\n    GetCategory,\n    Currencies,\n    GetCurrency,\n    Blogs,\n    GetBlog,\n    SingleProducts,\n    GetAllSingleProduct,\n    GetSingleProduct,\n    ProductParams,\n    setInitialParams,\n    SearchProductParams,\n    GetSearch,\n    searchProducts,\n    Settings,\n    GetSettings,\n    GetNotifications,\n    Notification,\n    queAns,\n    GetAllQustionAnswer,\n  };\n});\n",
      "start": 1716056343242,
      "end": 1716056343395,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343395,
      "end": 1716056343395,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343395,
      "end": 1716056343395,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343395,
      "end": 1716056343395,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343395,
      "end": 1716056343395,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056343395,
      "end": 1716056343395,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056343395,
      "end": 1716056343396,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343396,
      "end": 1716056343396,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { useRoute } from '#app/composables/router';\nimport { defineStore } from \"pinia\";\nimport { useCollectionStore } from \"./collection\";\nimport axios from \"axios\";\nimport { HandleRequest } from \"~~/composables/HandleRequest\";\nexport const useDataStore = defineStore(\"data-store\", () => {\n  let ThemeOptions = ref([]),\n    Products = ref([]),\n    Blogs = ref([]),\n    searchProducts = ref([]),\n    Categories = ref([]),\n    Currencies = ref([]),\n    SingleProducts = ref([]),\n    Settings = ref([]),\n    Notification = ref([]),\n    offCanvasMenu = ref(false),\n    queAns = ref(false),\n    SearchProductParams = ref({ search: \"\", page: 1, paginate: 12, status: 1 }),\n    ProductParams = {\n      page: 1, // Current page number\n      paginate: 40, // Display per page,\n      status: 1,\n      field: \"created_at\",\n      price: \"\",\n      category: \"\",\n      tag: \"\",\n      sort: \"\", // ASC, DSC\n      sortBy: \"asc\",\n      rating: \"\",\n      attribute: \"\",\n    };\n  // let selectedCategory = ref({});\n  let selectedCategoryProducts = ref([]);\n  // const fetchProducts = async (id) => {\n  //   await HandleRequest(\n  //     `https://zezo.anevex.com/app/shop-api/products?category_id=${id}`,\n  //     {\n  //       onResponse: ({ response }) => {\n  //         selectedCategory.value = Categories.find((cat) => cat.id === id);\n  //         selectedCategoryProducts.value = response.data;\n  //         console.log(\"done\");\n  //       },\n  //     }\n  //   );\n  // };\n\n  let preferedcats = useCollectionStore().filterObject.selectedCategories;\n\n  const GetAllThemeOptions = async () => {\n    HandleRequest(\"themeOptions\", {\n      key: \"getAllThemeOptionInStore\",\n      onResponse({ response }) {\n        ThemeOptions.value = response._data;\n      },\n    });\n  };\n\n  const GetAllProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsInStore\",\n      onResponse({ response }) {\n        Products.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSingleProduct = async () => {\n    HandleRequest(`product/slug/${useRoute().params.slug}`, {\n      key: \"getSingleProductsInStore\",\n      onResponse({ response }) {\n        SingleProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSearchProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsForSearchInStore\",\n      params: SearchProductParams.value,\n      onResponse({ response }) {\n        searchProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllBlogs = async () => {\n    HandleRequest(\"blog\", {\n      key: \"getAllBlogsInStore\",\n      onResponse({ response }) {\n        Blogs.value = response._data;\n      },\n    });\n  };\n\n  const GetAllCategory = async () => {\n    HandleRequest(\"https://zezo.anevex.com/app/shop-api/categories\", {\n      key: \"getAllCategoryInStore\",\n      onResponse({ response }) {\n        Categories.value = response._data.data;\n        // console.log(\"cat\", Categories.value);\n      },\n    });\n  };\n\n  const GetAllCurrency = async () => {\n    HandleRequest(\"currency\", {\n      key: \"getAllCurrencyStore\",\n      onResponse({ response }) {\n        Currencies.value = response._data;\n        // console.log(response);\n        // console.log(\"curr\", Currencies.value);\n      },\n    });\n  };\n\n  GetAllCurrency();\n\n  const GetAllNotification = async () => {\n    HandleRequest(\"notifications\", {\n      key: \"getAllNotificationsStore\",\n      onResponse({ response }) {\n        Notification.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSettings = async () => {\n    HandleRequest(\"settings\", {\n      key: \"getAllSettingStore\",\n      onResponse({ response }) {\n        Settings.value = response._data;\n      },\n    });\n  };\n  const GetAllQustionAnswer = async (value) => {\n    await HandleRequest(\"question-and-answer\", {\n      key: \"getQuestionAnswer\",\n      params: { product_id: value },\n      onResponse({ response }) {\n        queAns.value = response._data;\n      },\n    });\n  };\n  const GetThemeoption = async () => {\n    await GetAllThemeOptions();\n  };\n\n  const GetProduct = async () => {\n    await GetAllProduct();\n  };\n\n  const GetCategory = async () => {\n    await GetAllCategory();\n  };\n\n  const GetBlog = async () => {\n    await GetAllBlogs();\n  };\n\n  const GetCurrency = async () => {\n    await GetAllCurrency();\n  };\n\n  const GetSingleProduct = async () => {\n    await GetAllSingleProduct();\n  };\n\n  const GetSettings = async () => {\n    await GetAllSettings();\n  };\n  const GetSearch = async () => {\n    await GetAllSearchProduct();\n  };\n\n  const GetNotifications = async () => {\n    await GetAllNotification();\n  };\n\n  function setInitialParams(searchParams) {\n    SearchProductParams.value.search = searchParams;\n    GetAllSearchProduct();\n  }\n  return {\n    // selectedCategory,\n    selectedCategoryProducts,\n    offCanvasMenu,\n    ThemeOptions,\n    GetThemeoption,\n    Products,\n    GetProduct,\n    Categories,\n    GetCategory,\n    Currencies,\n    GetCurrency,\n    Blogs,\n    GetBlog,\n    SingleProducts,\n    GetAllSingleProduct,\n    GetSingleProduct,\n    ProductParams,\n    setInitialParams,\n    SearchProductParams,\n    GetSearch,\n    searchProducts,\n    Settings,\n    GetSettings,\n    GetNotifications,\n    Notification,\n    queAns,\n    GetAllQustionAnswer,\n  };\n});\n",
      "start": 1716056343396,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { useRoute } from '#app/composables/router';\nimport { defineStore } from \"pinia\";\nimport { useCollectionStore } from \"./collection\";\nimport axios from \"axios\";\nimport { HandleRequest } from \"~~/composables/HandleRequest\";\nexport const useDataStore = defineStore(\"data-store\", () => {\n  let ThemeOptions = ref([]),\n    Products = ref([]),\n    Blogs = ref([]),\n    searchProducts = ref([]),\n    Categories = ref([]),\n    Currencies = ref([]),\n    SingleProducts = ref([]),\n    Settings = ref([]),\n    Notification = ref([]),\n    offCanvasMenu = ref(false),\n    queAns = ref(false),\n    SearchProductParams = ref({ search: \"\", page: 1, paginate: 12, status: 1 }),\n    ProductParams = {\n      page: 1, // Current page number\n      paginate: 40, // Display per page,\n      status: 1,\n      field: \"created_at\",\n      price: \"\",\n      category: \"\",\n      tag: \"\",\n      sort: \"\", // ASC, DSC\n      sortBy: \"asc\",\n      rating: \"\",\n      attribute: \"\",\n    };\n  // let selectedCategory = ref({});\n  let selectedCategoryProducts = ref([]);\n  // const fetchProducts = async (id) => {\n  //   await HandleRequest(\n  //     `https://zezo.anevex.com/app/shop-api/products?category_id=${id}`,\n  //     {\n  //       onResponse: ({ response }) => {\n  //         selectedCategory.value = Categories.find((cat) => cat.id === id);\n  //         selectedCategoryProducts.value = response.data;\n  //         console.log(\"done\");\n  //       },\n  //     }\n  //   );\n  // };\n\n  let preferedcats = useCollectionStore().filterObject.selectedCategories;\n\n  const GetAllThemeOptions = async () => {\n    HandleRequest(\"themeOptions\", {\n      key: \"getAllThemeOptionInStore\",\n      onResponse({ response }) {\n        ThemeOptions.value = response._data;\n      },\n    });\n  };\n\n  const GetAllProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsInStore\",\n      onResponse({ response }) {\n        Products.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSingleProduct = async () => {\n    HandleRequest(`product/slug/${useRoute().params.slug}`, {\n      key: \"getSingleProductsInStore\",\n      onResponse({ response }) {\n        SingleProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSearchProduct = async () => {\n    HandleRequest(\"product\", {\n      key: \"getAllProductsForSearchInStore\",\n      params: SearchProductParams.value,\n      onResponse({ response }) {\n        searchProducts.value = response._data;\n      },\n    });\n  };\n\n  const GetAllBlogs = async () => {\n    HandleRequest(\"blog\", {\n      key: \"getAllBlogsInStore\",\n      onResponse({ response }) {\n        Blogs.value = response._data;\n      },\n    });\n  };\n\n  const GetAllCategory = async () => {\n    HandleRequest(\"https://zezo.anevex.com/app/shop-api/categories\", {\n      key: \"getAllCategoryInStore\",\n      onResponse({ response }) {\n        Categories.value = response._data.data;\n        // console.log(\"cat\", Categories.value);\n      },\n    });\n  };\n\n  const GetAllCurrency = async () => {\n    HandleRequest(\"currency\", {\n      key: \"getAllCurrencyStore\",\n      onResponse({ response }) {\n        Currencies.value = response._data;\n        // console.log(response);\n        // console.log(\"curr\", Currencies.value);\n      },\n    });\n  };\n\n  GetAllCurrency();\n\n  const GetAllNotification = async () => {\n    HandleRequest(\"notifications\", {\n      key: \"getAllNotificationsStore\",\n      onResponse({ response }) {\n        Notification.value = response._data;\n      },\n    });\n  };\n\n  const GetAllSettings = async () => {\n    HandleRequest(\"settings\", {\n      key: \"getAllSettingStore\",\n      onResponse({ response }) {\n        Settings.value = response._data;\n      },\n    });\n  };\n  const GetAllQustionAnswer = async (value) => {\n    await HandleRequest(\"question-and-answer\", {\n      key: \"getQuestionAnswer\",\n      params: { product_id: value },\n      onResponse({ response }) {\n        queAns.value = response._data;\n      },\n    });\n  };\n  const GetThemeoption = async () => {\n    await GetAllThemeOptions();\n  };\n\n  const GetProduct = async () => {\n    await GetAllProduct();\n  };\n\n  const GetCategory = async () => {\n    await GetAllCategory();\n  };\n\n  const GetBlog = async () => {\n    await GetAllBlogs();\n  };\n\n  const GetCurrency = async () => {\n    await GetAllCurrency();\n  };\n\n  const GetSingleProduct = async () => {\n    await GetAllSingleProduct();\n  };\n\n  const GetSettings = async () => {\n    await GetAllSettings();\n  };\n  const GetSearch = async () => {\n    await GetAllSearchProduct();\n  };\n\n  const GetNotifications = async () => {\n    await GetAllNotification();\n  };\n\n  function setInitialParams(searchParams) {\n    SearchProductParams.value.search = searchParams;\n    GetAllSearchProduct();\n  }\n  return {\n    // selectedCategory,\n    selectedCategoryProducts,\n    offCanvasMenu,\n    ThemeOptions,\n    GetThemeoption,\n    Products,\n    GetProduct,\n    Categories,\n    GetCategory,\n    Currencies,\n    GetCurrency,\n    Blogs,\n    GetBlog,\n    SingleProducts,\n    GetAllSingleProduct,\n    GetSingleProduct,\n    ProductParams,\n    setInitialParams,\n    SearchProductParams,\n    GetSearch,\n    searchProducts,\n    Settings,\n    GetSettings,\n    GetNotifications,\n    Notification,\n    queAns,\n    GetAllQustionAnswer,\n  };\n});\n",
      "start": 1716056343396,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056343398,
      "end": 1716056343398,
      "order": "normal"
    }
  ]
}
