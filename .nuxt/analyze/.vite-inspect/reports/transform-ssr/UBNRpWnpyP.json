{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/UpdatePssword.vue?nuxt_component=async&nuxt_component_name=AuthUpdatePssword",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <section class=\"log-in-section background-image-2 section-b-space\">\n    <div class=\"container-fluid-lg w-100\">\n      <div class=\"row\">\n        <div class=\"col-xxl-6 col-xl-5 col-lg-6 d-lg-block d-none ms-auto\">\n          <div class=\"image-contain\">\n            <img src=\"/images/inner-page/log-in.png\" class=\"img-fluid\" alt=\"\" />\n          </div>\n        </div>\n        <div class=\"col-xxl-4 col-xl-5 col-lg-6 col-sm-8 mx-auto\">\n          <div class=\"log-in-box\">\n            <div class=\"log-in-title\">\n              <h3>{{ $t(\"Welcome to Fastkart\") }}</h3>\n              <h4>{{ $t(\"Reset your account password\") }}</h4>\n            </div>\n            <div class=\"input-box\">\n              <form class=\"row g-4\" @submit.prevent=\"submit()\">\n                <div class=\"col-12\">\n                  <div class=\"form-floating\">\n                    <WidgetsInputFieldsPasswordField errorMessage=\"Password is required\" :formSubmitted=\"formSubmitted\"\n                      v-model=\"input.password\" classes=\"form-control\" id=\"newPassword\" placeholder=\"password\" />\n                    <label for=\"newPassword\">{{ $t(\"New Password\") }}</label>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <div class=\"form-floating\">\n                    <WidgetsInputFieldsRePasswordField errorMessage=\"Confirm Password is required\"\n                      :formSubmitted=\"formSubmitted\" v-model=\"input.password_confirmation\" classes=\"form-control\"\n                      id=\"password_confirmation\" placeholder=\"Password Confirmation\"\n                      :passwordToCompere=\"input.password.data\" />\n                    <label for=\"confirmPassword\">{{\n                      $t(\"Confirm Password\")\n                    }}</label>\n                  </div>\n                </div>\n                <div class=\"col-12\">\n                  <WidgetsButton :id=\"'Update_btn'\">{{\n                    $t(\"Submit\")\n                  }}</WidgetsButton>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script setup>\nimport formValidator from \"@/utils/validators/formValidator\";\nlet input = ref({\n  password: { data: \"\" },\n  password_confirmation: { data: \"\" },\n});\nlet formSubmitted = ref(false);\nfunction submit() {\n  formSubmitted.value = true;\n  if (formValidator({ formData: input.value })) {\n    let { data, error } = useFetch(\"update-password\", {\n      baseURL: BaseUrl,\n      method: \"post\",\n      body: {\n        email: useCookie(\"fpemail\").value,\n        token: useCookie(\"vo\").value,\n        password: input.value.password.data,\n        password_confirmation: input.value.password_confirmation.data,\n      },\n    });\n    if (data?.value?.success) {\n      navigateTo(\"/auth/login\");\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056306249,
      "end": 1716056306368,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056306368,
      "end": 1716056306368,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/inner-page/log-in.png'\n\n\nimport formValidator from \"@/utils/validators/formValidator\";\n\nconst _sfc_main = {\n  __name: 'UpdatePssword',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet input = ref({\n  password: { data: \"\" },\n  password_confirmation: { data: \"\" },\n});\nlet formSubmitted = ref(false);\nfunction submit() {\n  formSubmitted.value = true;\n  if (formValidator({ formData: input.value })) {\n    let { data, error } = useFetch(\"update-password\", {\n      baseURL: BaseUrl,\n      method: \"post\",\n      body: {\n        email: useCookie(\"fpemail\").value,\n        token: useCookie(\"vo\").value,\n        password: input.value.password.data,\n        password_confirmation: input.value.password_confirmation.data,\n      },\n    });\n    if (data?.value?.success) {\n      navigateTo(\"/auth/login\");\n    }\n  }\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsInputFieldsPasswordField = _resolveComponent(\"WidgetsInputFieldsPasswordField\")\n  const _component_WidgetsInputFieldsRePasswordField = _resolveComponent(\"WidgetsInputFieldsRePasswordField\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  _push(`<section${\n    _ssrRenderAttrs(_mergeProps({ class: \"log-in-section background-image-2 section-b-space\" }, _attrs))\n  }><div class=\"container-fluid-lg w-100\"><div class=\"row\"><div class=\"col-xxl-6 col-xl-5 col-lg-6 d-lg-block d-none ms-auto\"><div class=\"image-contain\"><img${\n    _ssrRenderAttr(\"src\", _imports_0)\n  } class=\"img-fluid\" alt=\"\"></div></div><div class=\"col-xxl-4 col-xl-5 col-lg-6 col-sm-8 mx-auto\"><div class=\"log-in-box\"><div class=\"log-in-title\"><h3>${\n    _ssrInterpolate(_ctx.$t(\"Welcome to Fastkart\"))\n  }</h3><h4>${\n    _ssrInterpolate(_ctx.$t(\"Reset your account password\"))\n  }</h4></div><div class=\"input-box\"><form class=\"row g-4\"><div class=\"col-12\"><div class=\"form-floating\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsPasswordField, {\n    errorMessage: \"Password is required\",\n    formSubmitted: _unref(formSubmitted),\n    modelValue: _unref(input).password,\n    \"onUpdate:modelValue\": $event => ((_unref(input).password) = $event),\n    classes: \"form-control\",\n    id: \"newPassword\",\n    placeholder: \"password\"\n  }, null, _parent))\n  _push(`<label for=\"newPassword\">${_ssrInterpolate(_ctx.$t(\"New Password\"))}</label></div></div><div class=\"col-12\"><div class=\"form-floating\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsRePasswordField, {\n    errorMessage: \"Confirm Password is required\",\n    formSubmitted: _unref(formSubmitted),\n    modelValue: _unref(input).password_confirmation,\n    \"onUpdate:modelValue\": $event => ((_unref(input).password_confirmation) = $event),\n    classes: \"form-control\",\n    id: \"password_confirmation\",\n    placeholder: \"Password Confirmation\",\n    passwordToCompere: _unref(input).password.data\n  }, null, _parent))\n  _push(`<label for=\"confirmPassword\">${_ssrInterpolate(_ctx.$t(\"Confirm Password\"))}</label></div></div><div class=\"col-12\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, { id: 'Update_btn' }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t(\"Submit\"))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t(\"Submit\")), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></form></div></div></div></div></div></section>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Auth/UpdatePssword.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056306368,
      "end": 1716056306370,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056306370,
      "end": 1716056306370,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056306370,
      "end": 1716056306370,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056306370,
      "end": 1716056306370,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056306370,
      "end": 1716056306370,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056306370,
      "end": 1716056306370,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/UpdatePssword.vue\").then(r => r.default))",
      "start": 1716056306370,
      "end": 1716056306371,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056306371,
      "end": 1716056306371,
      "order": "normal"
    }
  ]
}
