{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ChnagePasswordModal/index.vue?nuxt_component=async&nuxt_component_name=WidgetsModalsChnagePasswordModal",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <div class=\"modal-header\">\n        <h3 class=\"fw-semibold\">{{ 'Change Password' }}</h3>\n        <WidgetsButton :classes=\"'btn btn-close'\" :id=\"'password_modal_close_btn'\" @onClick=\"() => { emit('close'); }\">\n            <Icon name=\"ri-close-line\"></Icon>\n        </WidgetsButton>\n    </div>\n    <form @submit.prevent=\"handleSubmit()\">\n        <div class=\"modal-body address-form\">\n            <div class=\"row g-4\">\n                <div class=\"col-xxl-12\">\n                    <div>\n                        <label for=\"cpass\" class=\"form-label\">{{ 'Current Password' }}</label>\n                        <WidgetsInputFieldsPasswordField errorMessage=\"Current Password is required\"\n                            :formSubmitted=\"formSubmitted\" v-model=\"input.current_password\" classes=\"form-control\"\n                            id=\"cpass\" placeholder=\"Ente  Current Password\" />\n\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div>\n                        <label class=\"form-label\" for=\"npass\">{{ 'New Password' }}</label>\n                        <WidgetsInputFieldsPasswordField errorMessage=\"New Password is required\"\n                            :formSubmitted=\"formSubmitted\" v-model=\"input.password\" classes=\"form-control\" id=\"npass\"\n                            placeholder=\"Enter New Password\" />\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div>\n                        <label class=\"form-label\" for=\"cnpass\">{{ 'Confirm Password' }}</label>\n                        <WidgetsInputFieldsRePasswordField errorMessage=\"Confirm Password is required\"\n                            :formSubmitted=\"formSubmitted\" v-model=\"input.password_confirmation\" classes='form-control'\n                            id=\"cnpass\" placeholder=\"Enter Confirm Password\" :passwordToCompere=\"input.password.data\" />\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"modal-footer\">\n                <WidgetsButton :classes=\"'btn btn-theme-outline btn-md fw-bold'\" :type=\"'button'\" :id=\"'cancel_profile_btn'\"\n                    @onClick=\"() => { emit('close'); }\">\n                    {{ 'Cancel' }}\n                </WidgetsButton>\n                <WidgetsButton :classes=\"'btn theme-bg-color btn-md fw-bold text-light'\" :id=\"'submit_profile_btn'\">\n                    {{ 'Submit' }}\n                </WidgetsButton>\n            </div>\n        </div>\n    </form>\n</div>\n</template>\n\n<script setup>\nimport isFormValid from \"@/utils/validators/formValidator\";\nlet input = ref({\n    current_password: { data: '' },\n    password: { data: '' },\n    password_confirmation: { data: '' }\n})\n\nlet emit = defineEmits(['close'])\nlet formSubmitted = ref(false)\nasync function handleSubmit() {\n    formSubmitted.value = true\n    let ObjTOSend = { data: {} }\n    if (isFormValid({ formData: input.value })) {\n        ObjTOSend.data = convertInputData({ data: input.value })\n        let { data, error } = await useFetch('updatePassword', {\n            baseURL: BaseUrl,\n            headers: GetHeaders(),\n            cache: false,\n            method: 'put',\n            body: ObjTOSend.data,\n            key: 'UpdateProfile'\n        })\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056339821,
      "end": 1716056339909,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056339909,
      "end": 1716056339909,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport isFormValid from \"@/utils/validators/formValidator\";\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet input = ref({\n    current_password: { data: '' },\n    password: { data: '' },\n    password_confirmation: { data: '' }\n})\n\nlet emit = __emit\nlet formSubmitted = ref(false)\nasync function handleSubmit() {\n    formSubmitted.value = true\n    let ObjTOSend = { data: {} }\n    if (isFormValid({ formData: input.value })) {\n        ObjTOSend.data = convertInputData({ data: input.value })\n        let { data, error } = await useFetch('updatePassword', {\n            baseURL: BaseUrl,\n            headers: GetHeaders(),\n            cache: false,\n            method: 'put',\n            body: ObjTOSend.data,\n            key: 'UpdateProfile'\n        })\n    }\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_WidgetsInputFieldsPasswordField = _resolveComponent(\"WidgetsInputFieldsPasswordField\")\n  const _component_WidgetsInputFieldsRePasswordField = _resolveComponent(\"WidgetsInputFieldsRePasswordField\")\n\n  _push(`<div${\n    _ssrRenderAttrs(_attrs)\n  }><div class=\"modal-header\"><h3 class=\"fw-semibold\">${\n    _ssrInterpolate('Change Password')\n  }</h3>`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-close',\n    id: 'password_modal_close_btn',\n    onOnClick: () => { _unref(emit)('close'); }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_Icon, { name: \"ri-close-line\" }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div><form><div class=\"modal-body address-form\"><div class=\"row g-4\"><div class=\"col-xxl-12\"><div><label for=\"cpass\" class=\"form-label\">${_ssrInterpolate('Current Password')}</label>`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsPasswordField, {\n    errorMessage: \"Current Password is required\",\n    formSubmitted: _unref(formSubmitted),\n    modelValue: _unref(input).current_password,\n    \"onUpdate:modelValue\": $event => ((_unref(input).current_password) = $event),\n    classes: \"form-control\",\n    id: \"cpass\",\n    placeholder: \"Ente  Current Password\"\n  }, null, _parent))\n  _push(`</div></div><div class=\"col-12\"><div><label class=\"form-label\" for=\"npass\">${_ssrInterpolate('New Password')}</label>`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsPasswordField, {\n    errorMessage: \"New Password is required\",\n    formSubmitted: _unref(formSubmitted),\n    modelValue: _unref(input).password,\n    \"onUpdate:modelValue\": $event => ((_unref(input).password) = $event),\n    classes: \"form-control\",\n    id: \"npass\",\n    placeholder: \"Enter New Password\"\n  }, null, _parent))\n  _push(`</div></div><div class=\"col-12\"><div><label class=\"form-label\" for=\"cnpass\">${_ssrInterpolate('Confirm Password')}</label>`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsRePasswordField, {\n    errorMessage: \"Confirm Password is required\",\n    formSubmitted: _unref(formSubmitted),\n    modelValue: _unref(input).password_confirmation,\n    \"onUpdate:modelValue\": $event => ((_unref(input).password_confirmation) = $event),\n    classes: \"form-control\",\n    id: \"cnpass\",\n    placeholder: \"Enter Confirm Password\",\n    passwordToCompere: _unref(input).password.data\n  }, null, _parent))\n  _push(`</div></div></div><div class=\"modal-footer\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn btn-theme-outline btn-md fw-bold',\n    type: 'button',\n    id: 'cancel_profile_btn',\n    onOnClick: () => { _unref(emit)('close'); }\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate('Cancel')}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString('Cancel'))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsButton, {\n    classes: 'btn theme-bg-color btn-md fw-bold text-light',\n    id: 'submit_profile_btn'\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate('Submit')}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString('Submit'))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></div></form></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Widgets/Modals/ChnagePasswordModal/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056339909,
      "end": 1716056339912,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ChnagePasswordModal/index.vue\").then(r => r.default))",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056339912,
      "end": 1716056339912,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056339912,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056339913,
      "end": 1716056339913,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056339913,
      "end": 1716056339914,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339914,
      "end": 1716056339914,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339914,
      "end": 1716056339915,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339914,
      "end": 1716056339915,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056339915,
      "end": 1716056339915,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056339915,
      "end": 1716056339915,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056339915,
      "end": 1716056339915,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056339915,
      "end": 1716056339915,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056339915,
      "end": 1716056339915,
      "order": "normal"
    }
  ]
}
