{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Checkout/address-block/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template> \n<div>\n<div class=\"empty-box\" v-if=\"!addresses?.length\">\n    <h2>{{ $t('No Address Found') }}</h2>\n</div>\n<div class=\"row g-3\">\n        <div class=\"col-xxl-6 col-lg-12 col-md-6\" v-for=\"(address,index) of addresses\" :key=\"index\">\n            <label :for=\"`adddress-${type}-${index}`\">\n                <div class=\"delivery-address-box\">\n                    <div>\n                        <div class=\"form-check\">\n                            <input\n                                class=\"form-check-input\"\n                                type=\"radio\"\n                                :value=\"address.id\"\n                                :name=\"`address-${type}`\"\n                                :id=\"`address-${type}-${address.id}`\"\n                                :checked=\"index == 0\"\n                                @change=\"useCheckoutStore().SetCheckoutAddress({ type, id: address.id })\">\n                        </div>\n                        <ul class=\"delivery-address-detail\">\n                            <li>\n                                <h4 class=\"fw-semibold\">{{ address?.title }}</h4>\n                            </li>\n                            <li>\n                                <p class=\"text-content\">\n                                    <span class=\"text-title\">{{ $t('Address') }}: </span>\n                                    {{ address?.street }}, {{ address?.city }}, {{ address?.state?.name }},\n                                    {{ address?.country?.name }}\n                                </p>\n                            </li>\n                            <li v-if=\"address?.pincode\">\n                                <h6 class=\"text-content\">\n                                    <span class=\"text-title\">{{ $t('Pin Code') }}:</span> {{ address?.pincode }}\n                                </h6>\n                            </li>\n                            <li v-if=\"address?.phone\">\n                                <h6 class=\"text-content mb-0\">\n                                    <span class=\"text-title\">{{ $t('Phone') }} :</span> +{{ address?.country_code }} {{ address?.phone }}\n                                </h6>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </label>\n        </div>\n</div>\n</div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '~~/store/user';\nimport { useCheckoutStore } from '~~/store/checkout';\nlet props = defineProps({\n    addresses:Object,\n    type: {\n        default: 'shipping',\n        type: String\n    },\n    modelValue: Object\n});\n\nconst selectedAddressId = ref(null);\n\nlet emit = defineEmits(['selectAddress'])\n\nlet { UserInfo } = storeToRefs(useUserStore()), AddressModal = ref({ show: false, type: props.type }), AddressForm = ref(null)\n\nwatch(() => props.addresses, (newAddresses) => {\n      if (newAddresses && newAddresses.length > 0) {\n        selectedAddressId.value = newAddresses[0].id;\n        emit('selectAddress', selectedAddressId.value);\n      }\n    });\n\n\nconst set = (event) => {\n      selectedAddressId.value = Number((event.target)?.value);\n      emit('selectAddress', selectedAddressId.value);\n };\n\nif (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\nonMounted(() => {\n  if (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n});\n\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "start": 1716056341395,
      "end": 1716056341583,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056341583,
      "end": 1716056341583,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { ssrRenderAttr as _ssrRenderAttr, ssrIncludeBooleanAttr as _ssrIncludeBooleanAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '~~/store/user';\nimport { useCheckoutStore } from '~~/store/checkout';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    addresses:Object,\n    type: {\n        default: 'shipping',\n        type: String\n    },\n    modelValue: Object\n},\n  emits: ['selectAddress'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\n\nconst selectedAddressId = ref(null);\n\nlet emit = __emit\n\nlet { UserInfo } = storeToRefs(useUserStore()), AddressModal = ref({ show: false, type: props.type }), AddressForm = ref(null)\n\nwatch(() => props.addresses, (newAddresses) => {\n      if (newAddresses && newAddresses.length > 0) {\n        selectedAddressId.value = newAddresses[0].id;\n        emit('selectAddress', selectedAddressId.value);\n      }\n    });\n\n\nconst set = (event) => {\n      selectedAddressId.value = Number((event.target)?.value);\n      emit('selectAddress', selectedAddressId.value);\n };\n\nif (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\nonMounted(() => {\n  if (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n});\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (!__props.addresses?.length) {\n    _push(`<div class=\"empty-box\"><h2>${_ssrInterpolate(_ctx.$t('No Address Found'))}</h2></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`<div class=\"row g-3\"><!--[-->`)\n  _ssrRenderList(__props.addresses, (address, index) => {\n    _push(`<div class=\"col-xxl-6 col-lg-12 col-md-6\"><label${\n      _ssrRenderAttr(\"for\", `adddress-${__props.type}-${index}`)\n    }><div class=\"delivery-address-box\"><div><div class=\"form-check\"><input class=\"form-check-input\" type=\"radio\"${\n      _ssrRenderAttr(\"value\", address.id)\n    }${\n      _ssrRenderAttr(\"name\", `address-${__props.type}`)\n    }${\n      _ssrRenderAttr(\"id\", `address-${__props.type}-${address.id}`)\n    }${\n      (_ssrIncludeBooleanAttr(index == 0)) ? \" checked\" : \"\"\n    }></div><ul class=\"delivery-address-detail\"><li><h4 class=\"fw-semibold\">${\n      _ssrInterpolate(address?.title)\n    }</h4></li><li><p class=\"text-content\"><span class=\"text-title\">${\n      _ssrInterpolate(_ctx.$t('Address'))\n    }: </span> ${\n      _ssrInterpolate(address?.street)\n    }, ${\n      _ssrInterpolate(address?.city)\n    }, ${\n      _ssrInterpolate(address?.state?.name)\n    }, ${\n      _ssrInterpolate(address?.country?.name)\n    }</p></li>`)\n    if (address?.pincode) {\n      _push(`<li><h6 class=\"text-content\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Pin Code'))\n      }:</span> ${\n        _ssrInterpolate(address?.pincode)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    if (address?.phone) {\n      _push(`<li><h6 class=\"text-content mb-0\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Phone'))\n      } :</span> +${\n        _ssrInterpolate(address?.country_code)\n      } ${\n        _ssrInterpolate(address?.phone)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</ul></div></div></label></div>`)\n  })\n  _push(`<!--]--></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/Checkout/address-block/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341583,
      "end": 1716056341584,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056341584,
      "end": 1716056341584,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056341584,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341585,
      "end": 1716056341585,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, watch, onMounted } from 'vue';\nimport { ssrRenderAttr as _ssrRenderAttr, ssrIncludeBooleanAttr as _ssrIncludeBooleanAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '~~/store/user';\nimport { useCheckoutStore } from '~~/store/checkout';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    addresses:Object,\n    type: {\n        default: 'shipping',\n        type: String\n    },\n    modelValue: Object\n},\n  emits: ['selectAddress'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\n\nconst selectedAddressId = ref(null);\n\nlet emit = __emit\n\nlet { UserInfo } = storeToRefs(useUserStore()), AddressModal = ref({ show: false, type: props.type }), AddressForm = ref(null)\n\nwatch(() => props.addresses, (newAddresses) => {\n      if (newAddresses && newAddresses.length > 0) {\n        selectedAddressId.value = newAddresses[0].id;\n        emit('selectAddress', selectedAddressId.value);\n      }\n    });\n\n\nconst set = (event) => {\n      selectedAddressId.value = Number((event.target)?.value);\n      emit('selectAddress', selectedAddressId.value);\n };\n\nif (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\nonMounted(() => {\n  if (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n});\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (!__props.addresses?.length) {\n    _push(`<div class=\"empty-box\"><h2>${_ssrInterpolate(_ctx.$t('No Address Found'))}</h2></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`<div class=\"row g-3\"><!--[-->`)\n  _ssrRenderList(__props.addresses, (address, index) => {\n    _push(`<div class=\"col-xxl-6 col-lg-12 col-md-6\"><label${\n      _ssrRenderAttr(\"for\", `adddress-${__props.type}-${index}`)\n    }><div class=\"delivery-address-box\"><div><div class=\"form-check\"><input class=\"form-check-input\" type=\"radio\"${\n      _ssrRenderAttr(\"value\", address.id)\n    }${\n      _ssrRenderAttr(\"name\", `address-${__props.type}`)\n    }${\n      _ssrRenderAttr(\"id\", `address-${__props.type}-${address.id}`)\n    }${\n      (_ssrIncludeBooleanAttr(index == 0)) ? \" checked\" : \"\"\n    }></div><ul class=\"delivery-address-detail\"><li><h4 class=\"fw-semibold\">${\n      _ssrInterpolate(address?.title)\n    }</h4></li><li><p class=\"text-content\"><span class=\"text-title\">${\n      _ssrInterpolate(_ctx.$t('Address'))\n    }: </span> ${\n      _ssrInterpolate(address?.street)\n    }, ${\n      _ssrInterpolate(address?.city)\n    }, ${\n      _ssrInterpolate(address?.state?.name)\n    }, ${\n      _ssrInterpolate(address?.country?.name)\n    }</p></li>`)\n    if (address?.pincode) {\n      _push(`<li><h6 class=\"text-content\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Pin Code'))\n      }:</span> ${\n        _ssrInterpolate(address?.pincode)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    if (address?.phone) {\n      _push(`<li><h6 class=\"text-content mb-0\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Phone'))\n      } :</span> +${\n        _ssrInterpolate(address?.country_code)\n      } ${\n        _ssrInterpolate(address?.phone)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</ul></div></div></label></div>`)\n  })\n  _push(`<!--]--></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/Checkout/address-block/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341585,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, watch, onMounted } from 'vue';\nimport { ssrRenderAttr as _ssrRenderAttr, ssrIncludeBooleanAttr as _ssrIncludeBooleanAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '~~/store/user';\nimport { useCheckoutStore } from '~~/store/checkout';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    addresses:Object,\n    type: {\n        default: 'shipping',\n        type: String\n    },\n    modelValue: Object\n},\n  emits: ['selectAddress'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\n\nconst selectedAddressId = ref(null);\n\nlet emit = __emit\n\nlet { UserInfo } = storeToRefs(useUserStore()), AddressModal = ref({ show: false, type: props.type }), AddressForm = ref(null)\n\nwatch(() => props.addresses, (newAddresses) => {\n      if (newAddresses && newAddresses.length > 0) {\n        selectedAddressId.value = newAddresses[0].id;\n        emit('selectAddress', selectedAddressId.value);\n      }\n    });\n\n\nconst set = (event) => {\n      selectedAddressId.value = Number((event.target)?.value);\n      emit('selectAddress', selectedAddressId.value);\n };\n\nif (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\nonMounted(() => {\n  if (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n});\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (!__props.addresses?.length) {\n    _push(`<div class=\"empty-box\"><h2>${_ssrInterpolate(_ctx.$t('No Address Found'))}</h2></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`<div class=\"row g-3\"><!--[-->`)\n  _ssrRenderList(__props.addresses, (address, index) => {\n    _push(`<div class=\"col-xxl-6 col-lg-12 col-md-6\"><label${\n      _ssrRenderAttr(\"for\", `adddress-${__props.type}-${index}`)\n    }><div class=\"delivery-address-box\"><div><div class=\"form-check\"><input class=\"form-check-input\" type=\"radio\"${\n      _ssrRenderAttr(\"value\", address.id)\n    }${\n      _ssrRenderAttr(\"name\", `address-${__props.type}`)\n    }${\n      _ssrRenderAttr(\"id\", `address-${__props.type}-${address.id}`)\n    }${\n      (_ssrIncludeBooleanAttr(index == 0)) ? \" checked\" : \"\"\n    }></div><ul class=\"delivery-address-detail\"><li><h4 class=\"fw-semibold\">${\n      _ssrInterpolate(address?.title)\n    }</h4></li><li><p class=\"text-content\"><span class=\"text-title\">${\n      _ssrInterpolate(_ctx.$t('Address'))\n    }: </span> ${\n      _ssrInterpolate(address?.street)\n    }, ${\n      _ssrInterpolate(address?.city)\n    }, ${\n      _ssrInterpolate(address?.state?.name)\n    }, ${\n      _ssrInterpolate(address?.country?.name)\n    }</p></li>`)\n    if (address?.pincode) {\n      _push(`<li><h6 class=\"text-content\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Pin Code'))\n      }:</span> ${\n        _ssrInterpolate(address?.pincode)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    if (address?.phone) {\n      _push(`<li><h6 class=\"text-content mb-0\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Phone'))\n      } :</span> +${\n        _ssrInterpolate(address?.country_code)\n      } ${\n        _ssrInterpolate(address?.phone)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</ul></div></div></label></div>`)\n  })\n  _push(`<!--]--></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/Checkout/address-block/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341585,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056341587,
      "end": 1716056341587,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { ref, watch, onMounted } from 'vue';\nimport { ssrRenderAttr as _ssrRenderAttr, ssrIncludeBooleanAttr as _ssrIncludeBooleanAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '~~/store/user';\nimport { useCheckoutStore } from '~~/store/checkout';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  props: {\n    addresses:Object,\n    type: {\n        default: 'shipping',\n        type: String\n    },\n    modelValue: Object\n},\n  emits: ['selectAddress'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props;\n\nconst selectedAddressId = ref(null);\n\nlet emit = __emit\n\nlet { UserInfo } = storeToRefs(useUserStore()), AddressModal = ref({ show: false, type: props.type }), AddressForm = ref(null)\n\nwatch(() => props.addresses, (newAddresses) => {\n      if (newAddresses && newAddresses.length > 0) {\n        selectedAddressId.value = newAddresses[0].id;\n        emit('selectAddress', selectedAddressId.value);\n      }\n    });\n\n\nconst set = (event) => {\n      selectedAddressId.value = Number((event.target)?.value);\n      emit('selectAddress', selectedAddressId.value);\n };\n\nif (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n false && /*@__PURE__*/ onMounted(() => {\n  if (props.addresses && props.addresses.length > 0) {\n    selectedAddressId.value = props.addresses[0].id;\n    useCheckoutStore().SetCheckoutAddress({ type:props.type, id: selectedAddressId.value })\n    emit('selectAddress', selectedAddressId.value);\n\n  }\n});\n\n\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (!__props.addresses?.length) {\n    _push(`<div class=\"empty-box\"><h2>${_ssrInterpolate(_ctx.$t('No Address Found'))}</h2></div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`<div class=\"row g-3\"><!--[-->`)\n  _ssrRenderList(__props.addresses, (address, index) => {\n    _push(`<div class=\"col-xxl-6 col-lg-12 col-md-6\"><label${\n      _ssrRenderAttr(\"for\", `adddress-${__props.type}-${index}`)\n    }><div class=\"delivery-address-box\"><div><div class=\"form-check\"><input class=\"form-check-input\" type=\"radio\"${\n      _ssrRenderAttr(\"value\", address.id)\n    }${\n      _ssrRenderAttr(\"name\", `address-${__props.type}`)\n    }${\n      _ssrRenderAttr(\"id\", `address-${__props.type}-${address.id}`)\n    }${\n      (_ssrIncludeBooleanAttr(index == 0)) ? \" checked\" : \"\"\n    }></div><ul class=\"delivery-address-detail\"><li><h4 class=\"fw-semibold\">${\n      _ssrInterpolate(address?.title)\n    }</h4></li><li><p class=\"text-content\"><span class=\"text-title\">${\n      _ssrInterpolate(_ctx.$t('Address'))\n    }: </span> ${\n      _ssrInterpolate(address?.street)\n    }, ${\n      _ssrInterpolate(address?.city)\n    }, ${\n      _ssrInterpolate(address?.state?.name)\n    }, ${\n      _ssrInterpolate(address?.country?.name)\n    }</p></li>`)\n    if (address?.pincode) {\n      _push(`<li><h6 class=\"text-content\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Pin Code'))\n      }:</span> ${\n        _ssrInterpolate(address?.pincode)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    if (address?.phone) {\n      _push(`<li><h6 class=\"text-content mb-0\"><span class=\"text-title\">${\n        _ssrInterpolate(_ctx.$t('Phone'))\n      } :</span> +${\n        _ssrInterpolate(address?.country_code)\n      } ${\n        _ssrInterpolate(address?.phone)\n      }</h6></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</ul></div></div></label></div>`)\n  })\n  _push(`<!--]--></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/Checkout/address-block/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341587,
      "end": 1716056341588,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056341588,
      "end": 1716056341588,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056341588,
      "end": 1716056341588,
      "order": "normal"
    }
  ]
}
