{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/CommonForm/RegisterForm.vue?nuxt_component=async&nuxt_component_name=AuthCommonFormRegisterForm",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <form class=\"row g-4\" @submit.prevent=\"handleRegister()\">\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsNonEmptyField classes=\"form-control\" :formSubmitted=\"formSubmitted\" v-model=\"input.name\"\n          id=\"name\" placeholder=\"name\" />\n        <label for=\"name\">{{ $t(\"Full Name\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsEmailField classes=\"form-control\" :formSubmitted=\"formSubmitted\" v-model=\"input.email\"\n          id=\"email\" placeholder=\"Email Address\" />\n        <label for=\"email\">{{ $t(\"Email Address\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12 phone-field\">\n      <div class=\"form-floating log-in-form\">\n        <div class=\"d-flex row\">\n          <span class=\"col-4 pe-0 adshjahkjsdh\">\n            <WidgetsInputFieldsSearchDropdown :formSubmitted=\"formSubmitted\" :select-first=\"true\" getValueKey=\"id\"\n              display-key=\"name\" v-model=\"input.country_code\" :form-submitted=\"formSubmitted\"\n              :options=\"AllCountryCode\" />\n          </span>\n          <span class=\"col-8 ps-0\">\n            <div class=\"form-floating\">\n              <WidgetsInputFieldsNumberField type=\"number\" :formSubmitted=\"formSubmitted\" classes=\"form-control\"\n                errorMessage=\"phone number is required.\" v-model=\"input.phone\" id=\"phone\" placeholder=\"phone\" />\n              <label for=\"phone\">{{ $t(\"Phone Number\") }}</label>\n            </div>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsPasswordField classes=\"form-control\" :formSubmitted=\"formSubmitted\" v-model=\"input.password\"\n          id=\"password\" placeholder=\"password\" />\n        <label for=\"password\">{{ $t(\"Password\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsRePasswordField errorMessage=\"Confirm Password is required\" :formSubmitted=\"formSubmitted\"\n          v-model=\"input.password_confirmation\" classes=\"form-control\" id=\"password_confirmation\"\n          placeholder=\"password_confirmation\" :passwordToCompere=\"input.password.data\" />\n        <label for=\"password_confirmation\">{{ $t(\"Password Confirmation\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"forgot-box\">\n        <div class=\"form-check ps-0 m-0 remember-box\">\n          <input class=\"checkbox_animated check-box\" type=\"checkbox\" id=\"flexCheckDefault\" />\n          <label class=\"form-check-label\" for=\"flexCheckDefault\">{{ $t(\"I agree with\") }} <span>{{ $t(\"Terms\") }}</span>\n            {{ $t(\"and\") }} <span>{{ $t(\"Privacy\") }}</span></label>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <WidgetsButton :id=\"'sign_up'\">{{ $t(\"Sign Up\") }}</WidgetsButton>\n    </div>\n  </form>\n</template>\n\n<script setup>\nimport { AllCountryCode } from \"@/data/country_code\";\nlet props = defineProps({ input: Object, formSubmitted: Boolean })\nlet emit = defineEmits([\"handleRegister\"])\nfunction handleRegister() {\n  emit('handleRegister')\n}\n</script>\n<style lang=\"scss\" scoped></style>",
      "start": 1716056306219,
      "end": 1716056306340,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056306340,
      "end": 1716056306340,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { AllCountryCode } from \"@/data/country_code\";\n\nconst _sfc_main = {\n  __name: 'RegisterForm',\n  __ssrInlineRender: true,\n  props: { input: Object, formSubmitted: Boolean },\n  emits: [\"handleRegister\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\nlet emit = __emit\nfunction handleRegister() {\n  emit('handleRegister')\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsInputFieldsNonEmptyField = _resolveComponent(\"WidgetsInputFieldsNonEmptyField\")\n  const _component_WidgetsInputFieldsEmailField = _resolveComponent(\"WidgetsInputFieldsEmailField\")\n  const _component_WidgetsInputFieldsSearchDropdown = _resolveComponent(\"WidgetsInputFieldsSearchDropdown\")\n  const _component_WidgetsInputFieldsNumberField = _resolveComponent(\"WidgetsInputFieldsNumberField\")\n  const _component_WidgetsInputFieldsPasswordField = _resolveComponent(\"WidgetsInputFieldsPasswordField\")\n  const _component_WidgetsInputFieldsRePasswordField = _resolveComponent(\"WidgetsInputFieldsRePasswordField\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  _push(`<form${_ssrRenderAttrs(_mergeProps({ class: \"row g-4\" }, _attrs))}><div class=\"col-12\"><div class=\"form-floating log-in-form\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsNonEmptyField, {\n    classes: \"form-control\",\n    formSubmitted: __props.formSubmitted,\n    modelValue: __props.input.name,\n    \"onUpdate:modelValue\": $event => ((__props.input.name) = $event),\n    id: \"name\",\n    placeholder: \"name\"\n  }, null, _parent))\n  _push(`<label for=\"name\">${_ssrInterpolate(_ctx.$t(\"Full Name\"))}</label></div></div><div class=\"col-12\"><div class=\"form-floating log-in-form\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsEmailField, {\n    classes: \"form-control\",\n    formSubmitted: __props.formSubmitted,\n    modelValue: __props.input.email,\n    \"onUpdate:modelValue\": $event => ((__props.input.email) = $event),\n    id: \"email\",\n    placeholder: \"Email Address\"\n  }, null, _parent))\n  _push(`<label for=\"email\">${_ssrInterpolate(_ctx.$t(\"Email Address\"))}</label></div></div><div class=\"col-12 phone-field\"><div class=\"form-floating log-in-form\"><div class=\"d-flex row\"><span class=\"col-4 pe-0 adshjahkjsdh\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsSearchDropdown, {\n    formSubmitted: __props.formSubmitted,\n    \"select-first\": true,\n    getValueKey: \"id\",\n    \"display-key\": \"name\",\n    modelValue: __props.input.country_code,\n    \"onUpdate:modelValue\": $event => ((__props.input.country_code) = $event),\n    \"form-submitted\": __props.formSubmitted,\n    options: _unref(AllCountryCode)\n  }, null, _parent))\n  _push(`</span><span class=\"col-8 ps-0\"><div class=\"form-floating\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsNumberField, {\n    type: \"number\",\n    formSubmitted: __props.formSubmitted,\n    classes: \"form-control\",\n    errorMessage: \"phone number is required.\",\n    modelValue: __props.input.phone,\n    \"onUpdate:modelValue\": $event => ((__props.input.phone) = $event),\n    id: \"phone\",\n    placeholder: \"phone\"\n  }, null, _parent))\n  _push(`<label for=\"phone\">${_ssrInterpolate(_ctx.$t(\"Phone Number\"))}</label></div></span></div></div></div><div class=\"col-12\"><div class=\"form-floating log-in-form\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsPasswordField, {\n    classes: \"form-control\",\n    formSubmitted: __props.formSubmitted,\n    modelValue: __props.input.password,\n    \"onUpdate:modelValue\": $event => ((__props.input.password) = $event),\n    id: \"password\",\n    placeholder: \"password\"\n  }, null, _parent))\n  _push(`<label for=\"password\">${_ssrInterpolate(_ctx.$t(\"Password\"))}</label></div></div><div class=\"col-12\"><div class=\"form-floating log-in-form\">`)\n  _push(_ssrRenderComponent(_component_WidgetsInputFieldsRePasswordField, {\n    errorMessage: \"Confirm Password is required\",\n    formSubmitted: __props.formSubmitted,\n    modelValue: __props.input.password_confirmation,\n    \"onUpdate:modelValue\": $event => ((__props.input.password_confirmation) = $event),\n    classes: \"form-control\",\n    id: \"password_confirmation\",\n    placeholder: \"password_confirmation\",\n    passwordToCompere: __props.input.password.data\n  }, null, _parent))\n  _push(`<label for=\"password_confirmation\">${\n    _ssrInterpolate(_ctx.$t(\"Password Confirmation\"))\n  }</label></div></div><div class=\"col-12\"><div class=\"forgot-box\"><div class=\"form-check ps-0 m-0 remember-box\"><input class=\"checkbox_animated check-box\" type=\"checkbox\" id=\"flexCheckDefault\"><label class=\"form-check-label\" for=\"flexCheckDefault\">${\n    _ssrInterpolate(_ctx.$t(\"I agree with\"))\n  } <span>${\n    _ssrInterpolate(_ctx.$t(\"Terms\"))\n  }</span> ${\n    _ssrInterpolate(_ctx.$t(\"and\"))\n  } <span>${\n    _ssrInterpolate(_ctx.$t(\"Privacy\"))\n  }</span></label></div></div></div><div class=\"col-12\">`)\n  _push(_ssrRenderComponent(_component_WidgetsButton, { id: 'sign_up' }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(`${_ssrInterpolate(_ctx.$t(\"Sign Up\"))}`)\n      } else {\n        return [\n          _createTextVNode(_toDisplayString(_ctx.$t(\"Sign Up\")), 1)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div></form>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Auth/CommonForm/RegisterForm.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056306340,
      "end": 1716056306343,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/CommonForm/RegisterForm.vue\").then(r => r.default))",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056306343,
      "end": 1716056306343,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056306343,
      "end": 1716056306344,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056306344,
      "end": 1716056306344,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056306344,
      "end": 1716056306344,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056306344,
      "end": 1716056306344,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056306344,
      "end": 1716056306344,
      "order": "normal"
    }
  ]
}
