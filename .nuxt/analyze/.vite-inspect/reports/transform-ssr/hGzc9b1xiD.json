{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/pages/seller/stores/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <WidgetsBreadcrumb  :breadcrumbs=\"breadcrumbs\"/>\n    <section class=\"seller-grid-section section-b-space\">\n        <ShopSellerStoreBasic :stores=\"store?.data\" :skeletonItems=\"skeletonItems\" :skeletonLoader=\"skeletonLoader\"\n            v-if=\"layout === 'basic_store'\"></ShopSellerStoreBasic>\n        <ShopSellerStoreClassic :stores=\"store?.data\" :skeletonItems=\"skeletonItems\" :skeletonLoader=\"skeletonLoader\"\n            v-if=\"layout === 'classic_store'\"></ShopSellerStoreClassic>\n    </section>\n    <div class=\"custome-pagination section-b-space\" v-if=\"store?.data?.length\">\n        <WidgetsPagination :Data=\"store\" @change-page=\"(toPage) => ChangePage({ toPage })\" />\n    </div>\n</div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = await HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false });\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056343059,
      "end": 1716056343142,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerStoreBasic = _resolveComponent(\"ShopSellerStoreBasic\")\n  const _component_ShopSellerStoreClassic = _resolveComponent(\"ShopSellerStoreClassic\")\n  const _component_WidgetsPagination = _resolveComponent(\"WidgetsPagination\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  _push(`<section class=\"seller-grid-section section-b-space\">`)\n  if (_unref(layout) === 'basic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreBasic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) === 'classic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreClassic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</section>`)\n  if (_unref(store)?.data?.length) {\n    _push(`<div class=\"custome-pagination section-b-space\">`)\n    _push(_ssrRenderComponent(_component_WidgetsPagination, {\n      Data: _unref(store),\n      onChangePage: (toPage) => ChangePage({ toPage })\n    }, null, _parent))\n    _push(`</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/stores/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056343142,
      "end": 1716056343142,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343143,
      "end": 1716056343143,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, watch, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerStoreBasic = _resolveComponent(\"ShopSellerStoreBasic\")\n  const _component_ShopSellerStoreClassic = _resolveComponent(\"ShopSellerStoreClassic\")\n  const _component_WidgetsPagination = _resolveComponent(\"WidgetsPagination\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  _push(`<section class=\"seller-grid-section section-b-space\">`)\n  if (_unref(layout) === 'basic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreBasic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) === 'classic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreClassic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</section>`)\n  if (_unref(store)?.data?.length) {\n    _push(`<div class=\"custome-pagination section-b-space\">`)\n    _push(_ssrRenderComponent(_component_WidgetsPagination, {\n      Data: _unref(store),\n      onChangePage: (toPage) => ChangePage({ toPage })\n    }, null, _parent))\n    _push(`</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/stores/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343143,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, watch, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerStoreBasic = _resolveComponent(\"ShopSellerStoreBasic\")\n  const _component_ShopSellerStoreClassic = _resolveComponent(\"ShopSellerStoreClassic\")\n  const _component_WidgetsPagination = _resolveComponent(\"WidgetsPagination\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  _push(`<section class=\"seller-grid-section section-b-space\">`)\n  if (_unref(layout) === 'basic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreBasic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) === 'classic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreClassic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</section>`)\n  if (_unref(store)?.data?.length) {\n    _push(`<div class=\"custome-pagination section-b-space\">`)\n    _push(_ssrRenderComponent(_component_WidgetsPagination, {\n      Data: _unref(store),\n      onChangePage: (toPage) => ChangePage({ toPage })\n    }, null, _parent))\n    _push(`</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/stores/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343143,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Breadcrumb/index.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Seller/Store/Basic/index.vue\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Seller/Store/Classic/index.vue\";\nimport { default as __nuxt_component_3 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Pagination/index.vue\";\nimport { useRoute } from '#app/composables/router';\nimport { ref, watch, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = __nuxt_component_0\n  const _component_ShopSellerStoreBasic = __nuxt_component_1\n  const _component_ShopSellerStoreClassic = __nuxt_component_2\n  const _component_WidgetsPagination = __nuxt_component_3\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  _push(`<section class=\"seller-grid-section section-b-space\">`)\n  if (_unref(layout) === 'basic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreBasic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) === 'classic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreClassic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</section>`)\n  if (_unref(store)?.data?.length) {\n    _push(`<div class=\"custome-pagination section-b-space\">`)\n    _push(_ssrRenderComponent(_component_WidgetsPagination, {\n      Data: _unref(store),\n      onChangePage: (toPage) => ChangePage({ toPage })\n    }, null, _parent))\n    _push(`</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/stores/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343144,
      "end": 1716056343144,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Breadcrumb/index.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Seller/Store/Basic/index.vue\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Seller/Store/Classic/index.vue\";\nimport { default as __nuxt_component_3 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Pagination/index.vue\";\nimport { useRoute } from '#app/composables/router';\nimport { ref, watch, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\n false && /*@__PURE__*/ onMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsBreadcrumb = __nuxt_component_0\n  const _component_ShopSellerStoreBasic = __nuxt_component_1\n  const _component_ShopSellerStoreClassic = __nuxt_component_2\n  const _component_WidgetsPagination = __nuxt_component_3\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, _parent))\n  _push(`<section class=\"seller-grid-section section-b-space\">`)\n  if (_unref(layout) === 'basic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreBasic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (_unref(layout) === 'classic_store') {\n    _push(_ssrRenderComponent(_component_ShopSellerStoreClassic, {\n      stores: _unref(store)?.data,\n      skeletonItems: _unref(skeletonItems),\n      skeletonLoader: _unref(skeletonLoader)\n    }, null, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</section>`)\n  if (_unref(store)?.data?.length) {\n    _push(`<div class=\"custome-pagination section-b-space\">`)\n    _push(_ssrRenderComponent(_component_WidgetsPagination, {\n      Data: _unref(store),\n      onChangePage: (toPage) => ChangePage({ toPage })\n    }, null, _parent))\n    _push(`</div>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"pages/seller/stores/index.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343144,
      "end": 1716056343145,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056343145,
      "end": 1716056343145,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056343145,
      "end": 1716056343145,
      "order": "normal"
    }
  ]
}
