{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Logo.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <nuxt-link to=\"/theme/osaka\" class=\"web-logo nav-logo\">\n    <div v-if=\"headerLogo\">\n      <img :src=\"headerLogo\" class=\"img-fluid\" alt=\"\" />\n    </div>\n    <div v-else>\n      <h2 :class=\"textClass\">\n        {{\n          SiteSettings?.values?.general?.site_title\n            ? SiteSettings?.values?.general?.site_title\n            : \"Logo\"\n        }}\n      </h2>\n    </div>\n  </nuxt-link>\n</template>\n\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\nlet props = defineProps({\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n});\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056341120,
      "end": 1716056341333,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341333,
      "end": 1716056341333,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341333,
      "end": 1716056341333,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341333,
      "end": 1716056341333,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341333,
      "end": 1716056341333,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056341333,
      "end": 1716056341333,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  __ssrInlineRender: true,\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  _push(_ssrRenderComponent(_component_nuxt_link, _mergeProps({\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        if (_unref(headerLogo)) {\n          _push(`<div${\n            _scopeId\n          }><img${\n            _ssrRenderAttr(\"src\", _unref(headerLogo))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }></div>`)\n        } else {\n          _push(`<div${\n            _scopeId\n          }><h2 class=\"${\n            _ssrRenderClass(__props.textClass)\n          }\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\")\n          }</h2></div>`)\n        }\n      } else {\n        return [\n          (_unref(headerLogo))\n            ? (_openBlock(), _createBlock(\"div\", { key: 0 }, [\n                _createVNode(\"img\", {\n                  src: _unref(headerLogo),\n                  class: \"img-fluid\",\n                  alt: \"\"\n                }, null, 8, [\"src\"])\n              ]))\n            : (_openBlock(), _createBlock(\"div\", { key: 1 }, [\n                _createVNode(\"h2\", { class: __props.textClass }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n              ]))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Logo.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341334,
      "end": 1716056341334,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056341334,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056341335,
      "end": 1716056341335,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341335,
      "end": 1716056341336,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341335,
      "end": 1716056341336,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from '#app/composables/router';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  __ssrInlineRender: true,\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  _push(_ssrRenderComponent(_component_nuxt_link, _mergeProps({\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        if (_unref(headerLogo)) {\n          _push(`<div${\n            _scopeId\n          }><img${\n            _ssrRenderAttr(\"src\", _unref(headerLogo))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }></div>`)\n        } else {\n          _push(`<div${\n            _scopeId\n          }><h2 class=\"${\n            _ssrRenderClass(__props.textClass)\n          }\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\")\n          }</h2></div>`)\n        }\n      } else {\n        return [\n          (_unref(headerLogo))\n            ? (_openBlock(), _createBlock(\"div\", { key: 0 }, [\n                _createVNode(\"img\", {\n                  src: _unref(headerLogo),\n                  class: \"img-fluid\",\n                  alt: \"\"\n                }, null, 8, [\"src\"])\n              ]))\n            : (_openBlock(), _createBlock(\"div\", { key: 1 }, [\n                _createVNode(\"h2\", { class: __props.textClass }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n              ]))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Logo.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341336,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from '#app/composables/router';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  __ssrInlineRender: true,\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  _push(_ssrRenderComponent(_component_nuxt_link, _mergeProps({\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        if (_unref(headerLogo)) {\n          _push(`<div${\n            _scopeId\n          }><img${\n            _ssrRenderAttr(\"src\", _unref(headerLogo))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }></div>`)\n        } else {\n          _push(`<div${\n            _scopeId\n          }><h2 class=\"${\n            _ssrRenderClass(__props.textClass)\n          }\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\")\n          }</h2></div>`)\n        }\n      } else {\n        return [\n          (_unref(headerLogo))\n            ? (_openBlock(), _createBlock(\"div\", { key: 0 }, [\n                _createVNode(\"img\", {\n                  src: _unref(headerLogo),\n                  class: \"img-fluid\",\n                  alt: \"\"\n                }, null, 8, [\"src\"])\n              ]))\n            : (_openBlock(), _createBlock(\"div\", { key: 1 }, [\n                _createVNode(\"h2\", { class: __props.textClass }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n              ]))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Logo.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341336,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341337,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341337,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341337,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341337,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056341337,
      "end": 1716056341337,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from '#app/composables/router';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  __ssrInlineRender: true,\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = __nuxt_component_0\n\n  _push(_ssrRenderComponent(_component_nuxt_link, _mergeProps({\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        if (_unref(headerLogo)) {\n          _push(`<div${\n            _scopeId\n          }><img${\n            _ssrRenderAttr(\"src\", _unref(headerLogo))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }></div>`)\n        } else {\n          _push(`<div${\n            _scopeId\n          }><h2 class=\"${\n            _ssrRenderClass(__props.textClass)\n          }\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\")\n          }</h2></div>`)\n        }\n      } else {\n        return [\n          (_unref(headerLogo))\n            ? (_openBlock(), _createBlock(\"div\", { key: 0 }, [\n                _createVNode(\"img\", {\n                  src: _unref(headerLogo),\n                  class: \"img-fluid\",\n                  alt: \"\"\n                }, null, 8, [\"src\"])\n              ]))\n            : (_openBlock(), _createBlock(\"div\", { key: 1 }, [\n                _createVNode(\"h2\", { class: __props.textClass }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n              ]))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Logo.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341337,
      "end": 1716056341338,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from '#app/composables/router';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  __ssrInlineRender: true,\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\n false && /*@__PURE__*/ onMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = __nuxt_component_0\n\n  _push(_ssrRenderComponent(_component_nuxt_link, _mergeProps({\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, _attrs), {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        if (_unref(headerLogo)) {\n          _push(`<div${\n            _scopeId\n          }><img${\n            _ssrRenderAttr(\"src\", _unref(headerLogo))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }></div>`)\n        } else {\n          _push(`<div${\n            _scopeId\n          }><h2 class=\"${\n            _ssrRenderClass(__props.textClass)\n          }\"${\n            _scopeId\n          }>${\n            _ssrInterpolate(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\")\n          }</h2></div>`)\n        }\n      } else {\n        return [\n          (_unref(headerLogo))\n            ? (_openBlock(), _createBlock(\"div\", { key: 0 }, [\n                _createVNode(\"img\", {\n                  src: _unref(headerLogo),\n                  class: \"img-fluid\",\n                  alt: \"\"\n                }, null, 8, [\"src\"])\n              ]))\n            : (_openBlock(), _createBlock(\"div\", { key: 1 }, [\n                _createVNode(\"h2\", { class: __props.textClass }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n              ]))\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Logo.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341338,
      "end": 1716056341338,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056341338,
      "end": 1716056341339,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056341339,
      "end": 1716056341339,
      "order": "normal"
    }
  ]
}
