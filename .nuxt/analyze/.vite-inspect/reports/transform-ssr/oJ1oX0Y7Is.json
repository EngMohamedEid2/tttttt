{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/TodayDeal.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <!-- Deal Basic Style -->\n    <button class=\"btn deal-button\" @click=\"(data) => { toggleModal({ data }) }\" v-if=\"style == 'basic'\">\n        <Icon name=\"ri:flashlight-line\"></Icon>\n        <span>{{ $t('Deal Today') }}</span>\n    </button>\n    <!-- Deal Standard Style -->\n    <a class=\"btn theme-bg-color ms-3 fire-button\" @click=\"(data) => { toggleModal({ data }) }\" v-if=\"style == 'standard'\">\n        <div class=\"fire\">\n            <img src=\"/images/icon/hot-sale.png\" class=\"img-fluid\" alt=\"\">\n        </div>\n        <span>{{ $t('Hot Deals') }}</span>\n    </a>\n    <!-- Deal Modal -->\n    <WidgetsModalsCommon modalClass=\"deal-modal\" :showModal=\"todaysDeals\" @close=\"toggleModal({ state: false })\">\n        <HeaderElementsDeals :todayDeal=\"ModalData\" @close=\"toggleModal({ state: false })\" />\n    </WidgetsModalsCommon>\n</div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '~/store/data';\nconst props = defineProps({\n    style: { type: [String,Object], default: 'basic' },\n})\n\nlet todaysDeals = ref(false)\nlet ModalData = ref()\nlet { ThemeOptions } = storeToRefs(useDataStore())\n\nfunction toggleModal({ state = true, }) {\n    ModalData.value = ThemeOptions?.value?.options?.header?.today_deals\n    todaysDeals.value = state\n}\n</script>\n",
      "start": 1716056341172,
      "end": 1716056341373,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056341373,
      "end": 1716056341373,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/icon/hot-sale.png'\n\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '~/store/data';\n\nconst _sfc_main = {\n  __name: 'TodayDeal',\n  __ssrInlineRender: true,\n  props: {\n    style: { type: [String,Object], default: 'basic' },\n},\n  setup(__props) {\n\nconst props = __props\n\nlet todaysDeals = ref(false)\nlet ModalData = ref()\nlet { ThemeOptions } = storeToRefs(useDataStore())\n\nfunction toggleModal({ state = true, }) {\n    ModalData.value = ThemeOptions?.value?.options?.header?.today_deals\n    todaysDeals.value = state\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_WidgetsModalsCommon = _resolveComponent(\"WidgetsModalsCommon\")\n  const _component_HeaderElementsDeals = _resolveComponent(\"HeaderElementsDeals\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (__props.style == 'basic') {\n    _push(`<button class=\"btn deal-button\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:flashlight-line\" }, null, _parent))\n    _push(`<span>${_ssrInterpolate(_ctx.$t('Deal Today'))}</span></button>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.style == 'standard') {\n    _push(`<a class=\"btn theme-bg-color ms-3 fire-button\"><div class=\"fire\"><img${\n      _ssrRenderAttr(\"src\", _imports_0)\n    } class=\"img-fluid\" alt=\"\"></div><span>${\n      _ssrInterpolate(_ctx.$t('Hot Deals'))\n    }</span></a>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(_ssrRenderComponent(_component_WidgetsModalsCommon, {\n    modalClass: \"deal-modal\",\n    showModal: _unref(todaysDeals),\n    onClose: $event => (toggleModal({ state: false }))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_HeaderElementsDeals, {\n          todayDeal: _unref(ModalData),\n          onClose: $event => (toggleModal({ state: false }))\n        }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_HeaderElementsDeals, {\n            todayDeal: _unref(ModalData),\n            onClose: $event => (toggleModal({ state: false }))\n          }, null, 8, [\"todayDeal\", \"onClose\"])\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/TodayDeal.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341373,
      "end": 1716056341374,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056341374,
      "end": 1716056341374,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056341374,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056341375,
      "end": 1716056341375,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/icon/hot-sale.png'\n\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '~/store/data';\n\nconst _sfc_main = {\n  __name: 'TodayDeal',\n  __ssrInlineRender: true,\n  props: {\n    style: { type: [String,Object], default: 'basic' },\n},\n  setup(__props) {\n\nconst props = __props\n\nlet todaysDeals = ref(false)\nlet ModalData = ref()\nlet { ThemeOptions } = storeToRefs(useDataStore())\n\nfunction toggleModal({ state = true, }) {\n    ModalData.value = ThemeOptions?.value?.options?.header?.today_deals\n    todaysDeals.value = state\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_WidgetsModalsCommon = _resolveComponent(\"WidgetsModalsCommon\")\n  const _component_HeaderElementsDeals = _resolveComponent(\"HeaderElementsDeals\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (__props.style == 'basic') {\n    _push(`<button class=\"btn deal-button\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:flashlight-line\" }, null, _parent))\n    _push(`<span>${_ssrInterpolate(_ctx.$t('Deal Today'))}</span></button>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.style == 'standard') {\n    _push(`<a class=\"btn theme-bg-color ms-3 fire-button\"><div class=\"fire\"><img${\n      _ssrRenderAttr(\"src\", _imports_0)\n    } class=\"img-fluid\" alt=\"\"></div><span>${\n      _ssrInterpolate(_ctx.$t('Hot Deals'))\n    }</span></a>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(_ssrRenderComponent(_component_WidgetsModalsCommon, {\n    modalClass: \"deal-modal\",\n    showModal: _unref(todaysDeals),\n    onClose: $event => (toggleModal({ state: false }))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_HeaderElementsDeals, {\n          todayDeal: _unref(ModalData),\n          onClose: $event => (toggleModal({ state: false }))\n        }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_HeaderElementsDeals, {\n            todayDeal: _unref(ModalData),\n            onClose: $event => (toggleModal({ state: false }))\n          }, null, 8, [\"todayDeal\", \"onClose\"])\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/TodayDeal.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341375,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref } from 'vue';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/icon/hot-sale.png'\n\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '~/store/data';\n\nconst _sfc_main = {\n  __name: 'TodayDeal',\n  __ssrInlineRender: true,\n  props: {\n    style: { type: [String,Object], default: 'basic' },\n},\n  setup(__props) {\n\nconst props = __props\n\nlet todaysDeals = ref(false)\nlet ModalData = ref()\nlet { ThemeOptions } = storeToRefs(useDataStore())\n\nfunction toggleModal({ state = true, }) {\n    ModalData.value = ThemeOptions?.value?.options?.header?.today_deals\n    todaysDeals.value = state\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_WidgetsModalsCommon = _resolveComponent(\"WidgetsModalsCommon\")\n  const _component_HeaderElementsDeals = _resolveComponent(\"HeaderElementsDeals\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (__props.style == 'basic') {\n    _push(`<button class=\"btn deal-button\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:flashlight-line\" }, null, _parent))\n    _push(`<span>${_ssrInterpolate(_ctx.$t('Deal Today'))}</span></button>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.style == 'standard') {\n    _push(`<a class=\"btn theme-bg-color ms-3 fire-button\"><div class=\"fire\"><img${\n      _ssrRenderAttr(\"src\", _imports_0)\n    } class=\"img-fluid\" alt=\"\"></div><span>${\n      _ssrInterpolate(_ctx.$t('Hot Deals'))\n    }</span></a>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(_ssrRenderComponent(_component_WidgetsModalsCommon, {\n    modalClass: \"deal-modal\",\n    showModal: _unref(todaysDeals),\n    onClose: $event => (toggleModal({ state: false }))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_HeaderElementsDeals, {\n          todayDeal: _unref(ModalData),\n          onClose: $event => (toggleModal({ state: false }))\n        }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_HeaderElementsDeals, {\n            todayDeal: _unref(ModalData),\n            onClose: $event => (toggleModal({ state: false }))\n          }, null, 8, [\"todayDeal\", \"onClose\"])\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/TodayDeal.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341375,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt-icon/dist/runtime/Icon.vue\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/Common/index.vue\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Deals/index.vue\";\nimport { ref } from 'vue';\nimport { resolveComponent as _resolveComponent, unref as _unref, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttr as _ssrRenderAttr, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate } from \"vue/server-renderer\"\nimport _imports_0 from '/images/icon/hot-sale.png'\n\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '~/store/data';\n\nconst _sfc_main = {\n  __name: 'TodayDeal',\n  __ssrInlineRender: true,\n  props: {\n    style: { type: [String,Object], default: 'basic' },\n},\n  setup(__props) {\n\nconst props = __props\n\nlet todaysDeals = ref(false)\nlet ModalData = ref()\nlet { ThemeOptions } = storeToRefs(useDataStore())\n\nfunction toggleModal({ state = true, }) {\n    ModalData.value = ThemeOptions?.value?.options?.header?.today_deals\n    todaysDeals.value = state\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_Icon = __nuxt_component_0\n  const _component_WidgetsModalsCommon = __nuxt_component_1\n  const _component_HeaderElementsDeals = __nuxt_component_2\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (__props.style == 'basic') {\n    _push(`<button class=\"btn deal-button\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:flashlight-line\" }, null, _parent))\n    _push(`<span>${_ssrInterpolate(_ctx.$t('Deal Today'))}</span></button>`)\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.style == 'standard') {\n    _push(`<a class=\"btn theme-bg-color ms-3 fire-button\"><div class=\"fire\"><img${\n      _ssrRenderAttr(\"src\", _imports_0)\n    } class=\"img-fluid\" alt=\"\"></div><span>${\n      _ssrInterpolate(_ctx.$t('Hot Deals'))\n    }</span></a>`)\n  } else {\n    _push(`<!---->`)\n  }\n  _push(_ssrRenderComponent(_component_WidgetsModalsCommon, {\n    modalClass: \"deal-modal\",\n    showModal: _unref(todaysDeals),\n    onClose: $event => (toggleModal({ state: false }))\n  }, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_HeaderElementsDeals, {\n          todayDeal: _unref(ModalData),\n          onClose: $event => (toggleModal({ state: false }))\n        }, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_HeaderElementsDeals, {\n            todayDeal: _unref(ModalData),\n            onClose: $event => (toggleModal({ state: false }))\n          }, null, 8, [\"todayDeal\", \"onClose\"])\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/TodayDeal.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056341376,
      "end": 1716056341376,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056341377,
      "end": 1716056341377,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056341377,
      "end": 1716056341377,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056341377,
      "end": 1716056341377,
      "order": "normal"
    }
  ]
}
