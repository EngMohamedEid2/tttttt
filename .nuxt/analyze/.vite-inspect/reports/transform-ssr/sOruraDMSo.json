{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Language.vue?nuxt_component=async&nuxt_component_name=HeaderElementsLanguage",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div>\n    <!-- Language Basic Style -->\n    <OnClickOutside\n      class=\"modal-content\"\n      @trigger=\"active = false\"\n      v-if=\"style == 'basic'\"\n    >\n      <WidgetsButton\n        :classes=\"'btn dropdown-toggle'\"\n        :type=\"'button'\"\n        :id=\"'open_dropdown_basic_btn'\"\n        @onClick=\"openDropDown()\"\n      >\n        <div class=\"iti-flag\" :class=\"selectedLanguage.icon\"></div>\n        <span> {{ selectedLanguage.language }}</span>\n      </WidgetsButton>\n      <ul\n        class=\"dropdown-menu dropdown-menu-end language-dropdown\"\n        :class=\"{ show: active }\"\n      >\n        <li v-for=\"language in languages\" :key=\"language\">\n          <button class=\"dropdown-item\" @click=\"selectLanguage(language)\">\n            <div class=\"iti-flag\" :class=\"language.icon\"></div>\n            <span>{{ language.language }}</span>\n          </button>\n        </li>\n      </ul>\n    </OnClickOutside>\n\n    <!-- Language Standard Style -->\n    <OnClickOutside\n      class=\"modal-content\"\n      @trigger=\"active = false\"\n      v-if=\"style == 'standard'\"\n    >\n      <WidgetsButton\n        :classes=\"'btn dropdown-toggle'\"\n        :type=\"'button'\"\n        :id=\"'open_dropdown_standard_btn'\"\n        @onClick=\"openDropDown()\"\n      >\n        <div class=\"iti-flag {{ selectedLanguage.icon }}\"></div>\n        <span>\n          {{ selectedLanguage.language }}\n        </span>\n        <Icon name=\"ri-arrow-{{ active ? 'up' : 'down' }}-s-line\"></Icon>\n      </WidgetsButton>\n      <ul class=\"dropdown-menu\" :class=\"{ show: active }\">\n        <li v-for=\"language in languages\" :key=\"language\">\n          <a\n            class=\"dropdown-item\"\n            href=\"javascript:void(0)\"\n            @click=\"selectLanguage(language)\"\n          >\n            <div class=\"iti-flag\" :class=\"language.icon\"></div>\n            <span>{{ language.language }}</span>\n          </a>\n        </li>\n      </ul>\n    </OnClickOutside>\n  </div>\n</template>\n<script setup>\nimport { OnClickOutside } from \"@vueuse/components\";\nimport { useI18n } from \"vue-i18n\";\nconst i18n = useI18n();\nlet props = defineProps({\n  style: { type: [String, Object], default: \"basic\" },\n});\n\nlet active = ref(false);\nlet languages = ref([\n  {\n    language: \"English\",\n    code: \"en\",\n    icon: \"us\",\n  },\n  {\n    language: \"Arabic\",\n    code: \"ar\",\n    icon: \"sa\",\n  },\n]);\n\nlet selectedLanguage = ref({\n  language: \"English\",\n  code: \"en\",\n  icon: \"us\",\n});\n\nfunction updateLang(language) {\n  i18n.locale.value = language.code;\n  selectedLanguage.value = language;\n  if (language.code === \"ar\") {\n    if (process.client) {\n      document.body.classList.add(\"rtl\");\n      document.documentElement.dir = \"rtl\";\n    }\n  } else {\n    if (process.client) {\n      document.body.classList.remove(\"rtl\");\n      document.documentElement.dir = \"ltr\";\n    }\n  }\n}\n\nfunction selectLanguage(language) {\n  active.value = false;\n  localStorage.setItem(\"lang\", JSON.stringify(language));\n  updateLang(language);\n}\n\nfunction openDropDown() {\n  active.value = !active.value;\n}\n\nonMounted(() => {\n  if (localStorage.getItem(\"lang\")) {\n    updateLang(JSON.parse(localStorage.getItem(\"lang\")));\n  }\n});\n</script>\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056313577,
      "end": 1716056339238,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339238,
      "end": 1716056339238,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339238,
      "end": 1716056339238,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339238,
      "end": 1716056339239,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339238,
      "end": 1716056339239,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056339239,
      "end": 1716056339239,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, isRef as _isRef } from \"vue\"\nimport { ssrRenderClass as _ssrRenderClass, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { OnClickOutside } from \"@vueuse/components\";\nimport { useI18n } from \"vue-i18n\";\n\nconst _sfc_main = {\n  __name: 'Language',\n  __ssrInlineRender: true,\n  props: {\n  style: { type: [String, Object], default: \"basic\" },\n},\n  setup(__props) {\n\nconst i18n = useI18n();\nlet props = __props;\n\nlet active = ref(false);\nlet languages = ref([\n  {\n    language: \"English\",\n    code: \"en\",\n    icon: \"us\",\n  },\n  {\n    language: \"Arabic\",\n    code: \"ar\",\n    icon: \"sa\",\n  },\n]);\n\nlet selectedLanguage = ref({\n  language: \"English\",\n  code: \"en\",\n  icon: \"us\",\n});\n\nfunction updateLang(language) {\n  i18n.locale.value = language.code;\n  selectedLanguage.value = language;\n  if (language.code === \"ar\") {\n    if (process.client) {\n      document.body.classList.add(\"rtl\");\n      document.documentElement.dir = \"rtl\";\n    }\n  } else {\n    if (process.client) {\n      document.body.classList.remove(\"rtl\");\n      document.documentElement.dir = \"ltr\";\n    }\n  }\n}\n\nfunction selectLanguage(language) {\n  active.value = false;\n  localStorage.setItem(\"lang\", JSON.stringify(language));\n  updateLang(language);\n}\n\nfunction openDropDown() {\n  active.value = !active.value;\n}\n\nonMounted(() => {\n  if (localStorage.getItem(\"lang\")) {\n    updateLang(JSON.parse(localStorage.getItem(\"lang\")));\n  }\n});\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  if (__props.style == 'basic') {\n    _push(_ssrRenderComponent(_unref(OnClickOutside), {\n      class: \"modal-content\",\n      onTrigger: $event => (_isRef(active) ? active.value = false : active = false)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(_component_WidgetsButton, {\n            classes: 'btn dropdown-toggle',\n            type: 'button',\n            id: 'open_dropdown_basic_btn',\n            onOnClick: $event => (openDropDown())\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`<div class=\"${\n                  _ssrRenderClass([_unref(selectedLanguage).icon, \"iti-flag\"])\n                }\"${\n                  _scopeId\n                }></div><span${\n                  _scopeId\n                }>${\n                  _ssrInterpolate(_unref(selectedLanguage).language)\n                }</span>`)\n              } else {\n                return [\n                  _createVNode(\"div\", {\n                    class: [\"iti-flag\", _unref(selectedLanguage).icon]\n                  }, null, 2),\n                  _createVNode(\"span\", null, _toDisplayString(_unref(selectedLanguage).language), 1)\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<ul class=\"${\n            _ssrRenderClass([{ show: _unref(active) }, \"dropdown-menu dropdown-menu-end language-dropdown\"])\n          }\"${\n            _scopeId\n          }><!--[-->`)\n          _ssrRenderList(_unref(languages), (language) => {\n            _push(`<li${\n              _scopeId\n            }><button class=\"dropdown-item\"${\n              _scopeId\n            }><div class=\"${\n              _ssrRenderClass([language.icon, \"iti-flag\"])\n            }\"${\n              _scopeId\n            }></div><span${\n              _scopeId\n            }>${\n              _ssrInterpolate(language.language)\n            }</span></button></li>`)\n          })\n          _push(`<!--]--></ul>`)\n        } else {\n          return [\n            _createVNode(_component_WidgetsButton, {\n              classes: 'btn dropdown-toggle',\n              type: 'button',\n              id: 'open_dropdown_basic_btn',\n              onOnClick: $event => (openDropDown())\n            }, {\n              default: _withCtx(() => [\n                _createVNode(\"div\", {\n                  class: [\"iti-flag\", _unref(selectedLanguage).icon]\n                }, null, 2),\n                _createVNode(\"span\", null, _toDisplayString(_unref(selectedLanguage).language), 1)\n              ]),\n              _: 1\n            }, 8, [\"onOnClick\"]),\n            _createVNode(\"ul\", {\n              class: [\"dropdown-menu dropdown-menu-end language-dropdown\", { show: _unref(active) }]\n            }, [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_unref(languages), (language) => {\n                return (_openBlock(), _createBlock(\"li\", { key: language }, [\n                  _createVNode(\"button\", {\n                    class: \"dropdown-item\",\n                    onClick: $event => (selectLanguage(language))\n                  }, [\n                    _createVNode(\"div\", {\n                      class: [\"iti-flag\", language.icon]\n                    }, null, 2),\n                    _createVNode(\"span\", null, _toDisplayString(language.language), 1)\n                  ], 8, [\"onClick\"])\n                ]))\n              }), 128))\n            ], 2)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  if (__props.style == 'standard') {\n    _push(_ssrRenderComponent(_unref(OnClickOutside), {\n      class: \"modal-content\",\n      onTrigger: $event => (_isRef(active) ? active.value = false : active = false)\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(_ssrRenderComponent(_component_WidgetsButton, {\n            classes: 'btn dropdown-toggle',\n            type: 'button',\n            id: 'open_dropdown_standard_btn',\n            onOnClick: $event => (openDropDown())\n          }, {\n            default: _withCtx((_, _push, _parent, _scopeId) => {\n              if (_push) {\n                _push(`<div class=\"iti-flag {{ selectedLanguage.icon }}\"${\n                  _scopeId\n                }></div><span${\n                  _scopeId\n                }>${\n                  _ssrInterpolate(_unref(selectedLanguage).language)\n                }</span>`)\n                _push(_ssrRenderComponent(_component_Icon, { name: \"ri-arrow-{{ active ? 'up' : 'down' }}-s-line\" }, null, _parent, _scopeId))\n              } else {\n                return [\n                  _createVNode(\"div\", { class: \"iti-flag {{ selectedLanguage.icon }}\" }),\n                  _createVNode(\"span\", null, _toDisplayString(_unref(selectedLanguage).language), 1),\n                  _createVNode(_component_Icon, { name: \"ri-arrow-{{ active ? 'up' : 'down' }}-s-line\" })\n                ]\n              }\n            }),\n            _: 1\n          }, _parent, _scopeId))\n          _push(`<ul class=\"${\n            _ssrRenderClass([{ show: _unref(active) }, \"dropdown-menu\"])\n          }\"${\n            _scopeId\n          }><!--[-->`)\n          _ssrRenderList(_unref(languages), (language) => {\n            _push(`<li${\n              _scopeId\n            }><a class=\"dropdown-item\" href=\"javascript:void(0)\"${\n              _scopeId\n            }><div class=\"${\n              _ssrRenderClass([language.icon, \"iti-flag\"])\n            }\"${\n              _scopeId\n            }></div><span${\n              _scopeId\n            }>${\n              _ssrInterpolate(language.language)\n            }</span></a></li>`)\n          })\n          _push(`<!--]--></ul>`)\n        } else {\n          return [\n            _createVNode(_component_WidgetsButton, {\n              classes: 'btn dropdown-toggle',\n              type: 'button',\n              id: 'open_dropdown_standard_btn',\n              onOnClick: $event => (openDropDown())\n            }, {\n              default: _withCtx(() => [\n                _createVNode(\"div\", { class: \"iti-flag {{ selectedLanguage.icon }}\" }),\n                _createVNode(\"span\", null, _toDisplayString(_unref(selectedLanguage).language), 1),\n                _createVNode(_component_Icon, { name: \"ri-arrow-{{ active ? 'up' : 'down' }}-s-line\" })\n              ]),\n              _: 1\n            }, 8, [\"onOnClick\"]),\n            _createVNode(\"ul\", {\n              class: [\"dropdown-menu\", { show: _unref(active) }]\n            }, [\n              (_openBlock(true), _createBlock(_Fragment, null, _renderList(_unref(languages), (language) => {\n                return (_openBlock(), _createBlock(\"li\", { key: language }, [\n                  _createVNode(\"a\", {\n                    class: \"dropdown-item\",\n                    href: \"javascript:void(0)\",\n                    onClick: $event => (selectLanguage(language))\n                  }, [\n                    _createVNode(\"div\", {\n                      class: [\"iti-flag\", language.icon]\n                    }, null, 2),\n                    _createVNode(\"span\", null, _toDisplayString(language.language), 1)\n                  ], 8, [\"onClick\"])\n                ]))\n              }), 128))\n            ], 2)\n          ]\n        }\n      }),\n      _: 1\n    }, _parent))\n  } else {\n    _push(`<!---->`)\n  }\n  _push(`</div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Header/Elements/Language.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056339239,
      "end": 1716056339248,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Language.vue\").then(r => r.default))",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056339248,
      "end": 1716056339248,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339248,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339248,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056339249,
      "end": 1716056339249,
      "order": "normal"
    }
  ]
}
