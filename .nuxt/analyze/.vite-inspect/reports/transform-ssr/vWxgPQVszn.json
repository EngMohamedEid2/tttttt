{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script :src=\"code.jquery.com / jquery - x.x.x.min.js\"></script>\n\n<template>\n  <div>\n    <NuxtLayout>\n      <NuxtPage />\n    </NuxtLayout>\n    <WidgetsModalsProductModal\n      :Data=\"modals.quickView\"\n      @close=\"\n        () => {\n          useCartStore().ToggleModal({ value: false });\n        }\n      \"\n    />\n  </div>\n</template>\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nlet { modals, cart } = storeToRefs(useCartStore());\nlet { Settings, ThemeOptions } = storeToRefs(useDataStore());\nlet { data, error, pending } = await HandleRequest(\"settings\", {\n  key: \"getSettingsInApp\",\n});\n\n// let meta = useMeta()\n\nconst favIcon = ref(null);\nconst isTabInFocus = ref(true);\nconst timeoutId = ref(null);\nconst currentMessageIndex = ref(0);\nconst messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\nconst currentMessage = ref(\"\");\nconst delay = ref(1000); // Delay between messages in milliseconds\n\nwatch(\n  () => ThemeOptions.value.options,\n  (theme) => {\n    if (theme?.general?.mode === \"dark\") {\n      if (process.client) {\n        document.documentElement.classList.add(\n          theme?.general && theme?.general?.mode\n        );\n      }\n    } else {\n      if (process.client) {\n        document.documentElement.classList.remove(\"dark\");\n      }\n    }\n\n    // Set Direction\n    if (theme?.general?.language_direction === \"rtl\") {\n      if (process.client) {\n        document.documentElement.setAttribute(\"dir\", \"rtl\");\n        document.body.classList.add(\"rtl\");\n      }\n    } else {\n      if (process.client) {\n        document.documentElement.removeAttribute(\"dir\");\n        document.body.classList.remove(\"rtl\");\n      }\n    }\n\n    if (process.client) {\n      favIcon.value = document.querySelector(\"#appIcon\");\n      if (favIcon.value) {\n        favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n      }\n    }\n  }\n);\n\nuseHead({\n  link: [\n    {\n      rel: \"icon\",\n      id: \"appIcon\",\n      type: \"image/png\",\n      href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:title\",\n      content: ThemeOptions?.value?.options?.seo?.og_title,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:description\",\n      content: ThemeOptions?.value.options?.seo?.og_description,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:image\",\n      content: ThemeOptions?.value?.options?.seo?.og_image?.original_url,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:title\",\n      content: ThemeOptions?.value?.options?.seo?.og_title,\n    },\n  ],\n  meta: [\n    {\n      property: \"description\",\n      content: ThemeOptions?.value?.options?.seo?.meta_description,\n    },\n  ],\n  meta: [\n    {\n      property: \"keywords\",\n      content: ThemeOptions?.value?.options?.seo?.meta_tags,\n    },\n  ],\n});\n\nfunction updateTitle(theme) {\n  const title =\n    theme?.general?.site_title && theme?.general?.site_tagline\n      ? `${theme.general.site_title} | ${theme.general.site_tagline}`\n      : \"FastKart Marketplace: Where Vendors Shine Together\";\n  document.title = title;\n}\n\nfunction updateMessage() {\n  clearTimeout(timeoutId.value);\n\n  currentMessage.value = messages.value[currentMessageIndex.value];\n  document.title = currentMessage.value;\n\n  currentMessageIndex.value =\n    (currentMessageIndex.value + 1) % messages.value.length;\n\n  timeoutId.value = setTimeout(updateMessage, delay.value);\n}\n\nonMounted(async () => {\n  document.addEventListener(\"visibilitychange\", () => {\n    isTabInFocus.value = !document.hidden;\n    if (isTabInFocus.value) {\n      clearTimeout(timeoutId.value);\n      updateTitle(ThemeOptions.value.options);\n    } else {\n      updateMessage();\n    }\n  });\n\n  window.addEventListener(\"beforeunload\", (event) => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n  });\n  let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n  if (localCart?.length) {\n    useCartStore().SetCart({ Cart: localCart });\n  }\n});\n\nonUnmounted(() => {\n  clearTimeout(timeoutId.value);\n});\n\nif (!error.value) {\n  useSiteStore().SetSiteSettings({ settings: data.value });\n}\n</script>\n<style lang=\"scss\">\n.page-enter-active,\n.page-leave-active {\n  transition: all 0.2s;\n}\n\n.page-enter-from,\n.page-leave-to {\n  opacity: 0;\n  filter: blur(1rem);\n}\n\n.layout-enter-active,\n.layout-leave-active {\n  transition: all 0.2s;\n}\n\n.layout-enter-from,\n.layout-leave-to {\n  filter: grayscale(1);\n}\n</style>\n",
      "start": 1716056343132,
      "end": 1716056343221,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056343221,
      "end": 1716056343221,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\"\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\n\nconst _sfc_main = {\n  __name: 'app',\n  __ssrInlineRender: true,\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { modals, cart } = storeToRefs(useCartStore());\nlet { Settings, ThemeOptions } = storeToRefs(useDataStore());\nlet { data, error, pending } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n  key: \"getSettingsInApp\",\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\n// let meta = useMeta()\n\nconst favIcon = ref(null);\nconst isTabInFocus = ref(true);\nconst timeoutId = ref(null);\nconst currentMessageIndex = ref(0);\nconst messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\nconst currentMessage = ref(\"\");\nconst delay = ref(1000); // Delay between messages in milliseconds\n\nwatch(\n  () => ThemeOptions.value.options,\n  (theme) => {\n    if (theme?.general?.mode === \"dark\") {\n      if (process.client) {\n        document.documentElement.classList.add(\n          theme?.general && theme?.general?.mode\n        );\n      }\n    } else {\n      if (process.client) {\n        document.documentElement.classList.remove(\"dark\");\n      }\n    }\n\n    // Set Direction\n    if (theme?.general?.language_direction === \"rtl\") {\n      if (process.client) {\n        document.documentElement.setAttribute(\"dir\", \"rtl\");\n        document.body.classList.add(\"rtl\");\n      }\n    } else {\n      if (process.client) {\n        document.documentElement.removeAttribute(\"dir\");\n        document.body.classList.remove(\"rtl\");\n      }\n    }\n\n    if (process.client) {\n      favIcon.value = document.querySelector(\"#appIcon\");\n      if (favIcon.value) {\n        favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n      }\n    }\n  }\n);\n\nuseHead({\n  link: [\n    {\n      rel: \"icon\",\n      id: \"appIcon\",\n      type: \"image/png\",\n      href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:title\",\n      content: ThemeOptions?.value?.options?.seo?.og_title,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:description\",\n      content: ThemeOptions?.value.options?.seo?.og_description,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:image\",\n      content: ThemeOptions?.value?.options?.seo?.og_image?.original_url,\n    },\n  ],\n  meta: [\n    {\n      property: \"og:title\",\n      content: ThemeOptions?.value?.options?.seo?.og_title,\n    },\n  ],\n  meta: [\n    {\n      property: \"description\",\n      content: ThemeOptions?.value?.options?.seo?.meta_description,\n    },\n  ],\n  meta: [\n    {\n      property: \"keywords\",\n      content: ThemeOptions?.value?.options?.seo?.meta_tags,\n    },\n  ],\n});\n\nfunction updateTitle(theme) {\n  const title =\n    theme?.general?.site_title && theme?.general?.site_tagline\n      ? `${theme.general.site_title} | ${theme.general.site_tagline}`\n      : \"FastKart Marketplace: Where Vendors Shine Together\";\n  document.title = title;\n}\n\nfunction updateMessage() {\n  clearTimeout(timeoutId.value);\n\n  currentMessage.value = messages.value[currentMessageIndex.value];\n  document.title = currentMessage.value;\n\n  currentMessageIndex.value =\n    (currentMessageIndex.value + 1) % messages.value.length;\n\n  timeoutId.value = setTimeout(updateMessage, delay.value);\n}\n\nonMounted(async () => {\n  document.addEventListener(\"visibilitychange\", () => {\n    isTabInFocus.value = !document.hidden;\n    if (isTabInFocus.value) {\n      clearTimeout(timeoutId.value);\n      updateTitle(ThemeOptions.value.options);\n    } else {\n      updateMessage();\n    }\n  });\n\n  window.addEventListener(\"beforeunload\", (event) => {\n    localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n  });\n  let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n  if (localCart?.length) {\n    useCartStore().SetCart({ Cart: localCart });\n  }\n});\n\nonUnmounted(() => {\n  clearTimeout(timeoutId.value);\n});\n\nif (!error.value) {\n  useSiteStore().SetSiteSettings({ settings: data.value });\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\")\n  const _component_NuxtPage = _resolveComponent(\"NuxtPage\")\n  const _component_WidgetsModalsProductModal = _resolveComponent(\"WidgetsModalsProductModal\")\n\n  _push(`<div${_ssrRenderAttrs(_attrs)}>`)\n  _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n    default: _withCtx((_, _push, _parent, _scopeId) => {\n      if (_push) {\n        _push(_ssrRenderComponent(_component_NuxtPage, null, null, _parent, _scopeId))\n      } else {\n        return [\n          _createVNode(_component_NuxtPage)\n        ]\n      }\n    }),\n    _: 1\n  }, _parent))\n  _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n    Data: _unref(modals).quickView,\n    onClose: \n        () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      \n  }, null, _parent))\n  _push(`</div>`)\n}\n}\n\n}\n\n\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\"\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"app.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056343221,
      "end": 1716056343223,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056343223,
      "end": 1716056343223,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343223,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343223,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343224,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056343224,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056343224,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056343224,
      "end": 1716056343224,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056343224,
      "end": 1716056343225,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { withAsyncContext as _withAsyncContext } from \"vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nconst _sfc_main = {\n  __name: \"app\",\n  __ssrInlineRender: true,\n  async setup(__props) {\n    let __temp, __restore;\n    let { modals, cart } = storeToRefs(useCartStore());\n    let { Settings, ThemeOptions } = storeToRefs(useDataStore());\n    let { data, error, pending } = ([__temp, __restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n      key: \"getSettingsInApp\"\n    })), __temp = await __temp, __restore(), __temp);\n    const favIcon = ref(null);\n    const isTabInFocus = ref(true);\n    const timeoutId = ref(null);\n    const currentMessageIndex = ref(0);\n    const messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\n    const currentMessage = ref(\"\");\n    const delay = ref(1e3);\n    watch(\n      () => ThemeOptions.value.options,\n      (theme) => {\n        if (theme?.general?.mode === \"dark\") {\n          if (false) {\n            (void 0).documentElement.classList.add(\n              theme?.general && theme?.general?.mode\n            );\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.classList.remove(\"dark\");\n          }\n        }\n        if (theme?.general?.language_direction === \"rtl\") {\n          if (false) {\n            (void 0).documentElement.setAttribute(\"dir\", \"rtl\");\n            (void 0).body.classList.add(\"rtl\");\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.removeAttribute(\"dir\");\n            (void 0).body.classList.remove(\"rtl\");\n          }\n        }\n        if (false) {\n          favIcon.value = (void 0).querySelector(\"#appIcon\");\n          if (favIcon.value) {\n            favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n          }\n        }\n      }\n    );\n    useHead({\n      link: [\n        {\n          rel: \"icon\",\n          id: \"appIcon\",\n          type: \"image/png\",\n          href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"og:description\",\n          content: ThemeOptions?.value.options?.seo?.og_description\n        }\n      ],\n      meta: [\n        {\n          property: \"og:image\",\n          content: ThemeOptions?.value?.options?.seo?.og_image?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"description\",\n          content: ThemeOptions?.value?.options?.seo?.meta_description\n        }\n      ],\n      meta: [\n        {\n          property: \"keywords\",\n          content: ThemeOptions?.value?.options?.seo?.meta_tags\n        }\n      ]\n    });\n    function updateTitle(theme) {\n      const title = theme?.general?.site_title && theme?.general?.site_tagline ? `${theme.general.site_title} | ${theme.general.site_tagline}` : \"FastKart Marketplace: Where Vendors Shine Together\";\n      (void 0).title = title;\n    }\n    function updateMessage() {\n      clearTimeout(timeoutId.value);\n      currentMessage.value = messages.value[currentMessageIndex.value];\n      (void 0).title = currentMessage.value;\n      currentMessageIndex.value = (currentMessageIndex.value + 1) % messages.value.length;\n      timeoutId.value = setTimeout(updateMessage, delay.value);\n    }\n    onMounted(async () => {\n      (void 0).addEventListener(\"visibilitychange\", () => {\n        isTabInFocus.value = !(void 0).hidden;\n        if (isTabInFocus.value) {\n          clearTimeout(timeoutId.value);\n          updateTitle(ThemeOptions.value.options);\n        } else {\n          updateMessage();\n        }\n      });\n      (void 0).addEventListener(\"beforeunload\", (event) => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      });\n      let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n      if (localCart?.length) {\n        useCartStore().SetCart({ Cart: localCart });\n      }\n    });\n    onUnmounted(() => {\n      clearTimeout(timeoutId.value);\n    });\n    if (!error.value) {\n      useSiteStore().SetSiteSettings({ settings: data.value });\n    }\n    return (_ctx, _push, _parent, _attrs) => {\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      const _component_NuxtPage = _resolveComponent(\"NuxtPage\");\n      const _component_WidgetsModalsProductModal = _resolveComponent(\"WidgetsModalsProductModal\");\n      _push(`<div${_ssrRenderAttrs(_attrs)}>`);\n      _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n        default: _withCtx((_, _push2, _parent2, _scopeId) => {\n          if (_push2) {\n            _push2(_ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));\n          } else {\n            return [\n              _createVNode(_component_NuxtPage)\n            ];\n          }\n        }),\n        _: 1\n      }, _parent));\n      _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n        Data: _unref(modals).quickView,\n        onClose: () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      }, null, _parent));\n      _push(`</div>`);\n    };\n  }\n};\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"app.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1716056343225,
      "end": 1716056343272,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1716056343272,
      "end": 1716056343272,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056343272,
      "end": 1716056343272,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056343272,
      "end": 1716056343272,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056343272,
      "end": 1716056343272,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056343273,
      "end": 1716056343273,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056343273,
      "end": 1716056343273,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056343273,
      "end": 1716056343273,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343274,
      "end": 1716056343274,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056343274,
      "end": 1716056343274,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { ref, watch, onMounted, onUnmounted } from 'vue';\nimport { useHead } from '@unhead/vue';\nimport { withAsyncContext as _withAsyncContext } from \"vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nconst _sfc_main = {\n  __name: \"app\",\n  __ssrInlineRender: true,\n  async setup(__props) {\n    let __temp, __restore;\n    let { modals, cart } = storeToRefs(useCartStore());\n    let { Settings, ThemeOptions } = storeToRefs(useDataStore());\n    let { data, error, pending } = ([__temp, __restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n      key: \"getSettingsInApp\"\n    })), __temp = await __temp, __restore(), __temp);\n    const favIcon = ref(null);\n    const isTabInFocus = ref(true);\n    const timeoutId = ref(null);\n    const currentMessageIndex = ref(0);\n    const messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\n    const currentMessage = ref(\"\");\n    const delay = ref(1e3);\n    watch(\n      () => ThemeOptions.value.options,\n      (theme) => {\n        if (theme?.general?.mode === \"dark\") {\n          if (false) {\n            (void 0).documentElement.classList.add(\n              theme?.general && theme?.general?.mode\n            );\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.classList.remove(\"dark\");\n          }\n        }\n        if (theme?.general?.language_direction === \"rtl\") {\n          if (false) {\n            (void 0).documentElement.setAttribute(\"dir\", \"rtl\");\n            (void 0).body.classList.add(\"rtl\");\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.removeAttribute(\"dir\");\n            (void 0).body.classList.remove(\"rtl\");\n          }\n        }\n        if (false) {\n          favIcon.value = (void 0).querySelector(\"#appIcon\");\n          if (favIcon.value) {\n            favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n          }\n        }\n      }\n    );\n    useHead({\n      link: [\n        {\n          rel: \"icon\",\n          id: \"appIcon\",\n          type: \"image/png\",\n          href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"og:description\",\n          content: ThemeOptions?.value.options?.seo?.og_description\n        }\n      ],\n      meta: [\n        {\n          property: \"og:image\",\n          content: ThemeOptions?.value?.options?.seo?.og_image?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"description\",\n          content: ThemeOptions?.value?.options?.seo?.meta_description\n        }\n      ],\n      meta: [\n        {\n          property: \"keywords\",\n          content: ThemeOptions?.value?.options?.seo?.meta_tags\n        }\n      ]\n    });\n    function updateTitle(theme) {\n      const title = theme?.general?.site_title && theme?.general?.site_tagline ? `${theme.general.site_title} | ${theme.general.site_tagline}` : \"FastKart Marketplace: Where Vendors Shine Together\";\n      (void 0).title = title;\n    }\n    function updateMessage() {\n      clearTimeout(timeoutId.value);\n      currentMessage.value = messages.value[currentMessageIndex.value];\n      (void 0).title = currentMessage.value;\n      currentMessageIndex.value = (currentMessageIndex.value + 1) % messages.value.length;\n      timeoutId.value = setTimeout(updateMessage, delay.value);\n    }\n    onMounted(async () => {\n      (void 0).addEventListener(\"visibilitychange\", () => {\n        isTabInFocus.value = !(void 0).hidden;\n        if (isTabInFocus.value) {\n          clearTimeout(timeoutId.value);\n          updateTitle(ThemeOptions.value.options);\n        } else {\n          updateMessage();\n        }\n      });\n      (void 0).addEventListener(\"beforeunload\", (event) => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      });\n      let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n      if (localCart?.length) {\n        useCartStore().SetCart({ Cart: localCart });\n      }\n    });\n    onUnmounted(() => {\n      clearTimeout(timeoutId.value);\n    });\n    if (!error.value) {\n      useSiteStore().SetSiteSettings({ settings: data.value });\n    }\n    return (_ctx, _push, _parent, _attrs) => {\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      const _component_NuxtPage = _resolveComponent(\"NuxtPage\");\n      const _component_WidgetsModalsProductModal = _resolveComponent(\"WidgetsModalsProductModal\");\n      _push(`<div${_ssrRenderAttrs(_attrs)}>`);\n      _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n        default: _withCtx((_, _push2, _parent2, _scopeId) => {\n          if (_push2) {\n            _push2(_ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));\n          } else {\n            return [\n              _createVNode(_component_NuxtPage)\n            ];\n          }\n        }),\n        _: 1\n      }, _parent));\n      _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n        Data: _unref(modals).quickView,\n        onClose: () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      }, null, _parent));\n      _push(`</div>`);\n    };\n  }\n};\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"app.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1716056343274,
      "end": 1716056343278,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { ref, watch, onMounted, onUnmounted } from 'vue';\nimport { useHead } from '@unhead/vue';\nimport { withAsyncContext as _withAsyncContext } from \"vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nconst _sfc_main = {\n  __name: \"app\",\n  __ssrInlineRender: true,\n  async setup(__props) {\n    let __temp, __restore;\n    let { modals, cart } = storeToRefs(useCartStore());\n    let { Settings, ThemeOptions } = storeToRefs(useDataStore());\n    let { data, error, pending } = ([__temp, __restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n      key: \"getSettingsInApp\"\n    })), __temp = await __temp, __restore(), __temp);\n    const favIcon = ref(null);\n    const isTabInFocus = ref(true);\n    const timeoutId = ref(null);\n    const currentMessageIndex = ref(0);\n    const messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\n    const currentMessage = ref(\"\");\n    const delay = ref(1e3);\n    watch(\n      () => ThemeOptions.value.options,\n      (theme) => {\n        if (theme?.general?.mode === \"dark\") {\n          if (false) {\n            (void 0).documentElement.classList.add(\n              theme?.general && theme?.general?.mode\n            );\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.classList.remove(\"dark\");\n          }\n        }\n        if (theme?.general?.language_direction === \"rtl\") {\n          if (false) {\n            (void 0).documentElement.setAttribute(\"dir\", \"rtl\");\n            (void 0).body.classList.add(\"rtl\");\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.removeAttribute(\"dir\");\n            (void 0).body.classList.remove(\"rtl\");\n          }\n        }\n        if (false) {\n          favIcon.value = (void 0).querySelector(\"#appIcon\");\n          if (favIcon.value) {\n            favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n          }\n        }\n      }\n    );\n    useHead({\n      link: [\n        {\n          rel: \"icon\",\n          id: \"appIcon\",\n          type: \"image/png\",\n          href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"og:description\",\n          content: ThemeOptions?.value.options?.seo?.og_description\n        }\n      ],\n      meta: [\n        {\n          property: \"og:image\",\n          content: ThemeOptions?.value?.options?.seo?.og_image?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"description\",\n          content: ThemeOptions?.value?.options?.seo?.meta_description\n        }\n      ],\n      meta: [\n        {\n          property: \"keywords\",\n          content: ThemeOptions?.value?.options?.seo?.meta_tags\n        }\n      ]\n    });\n    function updateTitle(theme) {\n      const title = theme?.general?.site_title && theme?.general?.site_tagline ? `${theme.general.site_title} | ${theme.general.site_tagline}` : \"FastKart Marketplace: Where Vendors Shine Together\";\n      (void 0).title = title;\n    }\n    function updateMessage() {\n      clearTimeout(timeoutId.value);\n      currentMessage.value = messages.value[currentMessageIndex.value];\n      (void 0).title = currentMessage.value;\n      currentMessageIndex.value = (currentMessageIndex.value + 1) % messages.value.length;\n      timeoutId.value = setTimeout(updateMessage, delay.value);\n    }\n    onMounted(async () => {\n      (void 0).addEventListener(\"visibilitychange\", () => {\n        isTabInFocus.value = !(void 0).hidden;\n        if (isTabInFocus.value) {\n          clearTimeout(timeoutId.value);\n          updateTitle(ThemeOptions.value.options);\n        } else {\n          updateMessage();\n        }\n      });\n      (void 0).addEventListener(\"beforeunload\", (event) => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      });\n      let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n      if (localCart?.length) {\n        useCartStore().SetCart({ Cart: localCart });\n      }\n    });\n    onUnmounted(() => {\n      clearTimeout(timeoutId.value);\n    });\n    if (!error.value) {\n      useSiteStore().SetSiteSettings({ settings: data.value });\n    }\n    return (_ctx, _push, _parent, _attrs) => {\n      const _component_NuxtLayout = _resolveComponent(\"NuxtLayout\");\n      const _component_NuxtPage = _resolveComponent(\"NuxtPage\");\n      const _component_WidgetsModalsProductModal = _resolveComponent(\"WidgetsModalsProductModal\");\n      _push(`<div${_ssrRenderAttrs(_attrs)}>`);\n      _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n        default: _withCtx((_, _push2, _parent2, _scopeId) => {\n          if (_push2) {\n            _push2(_ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));\n          } else {\n            return [\n              _createVNode(_component_NuxtPage)\n            ];\n          }\n        }),\n        _: 1\n      }, _parent));\n      _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n        Data: _unref(modals).quickView,\n        onClose: () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      }, null, _parent));\n      _push(`</div>`);\n    };\n  }\n};\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"app.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1716056343274,
      "end": 1716056343278,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343279,
      "end": 1716056343279,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056343279,
      "end": 1716056343279,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343279,
      "end": 1716056343279,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056343279,
      "end": 1716056343279,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056343279,
      "end": 1716056343279,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-layout\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/pages/runtime/page\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ProductModal/index.vue\";\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { ref, watch, onMounted, onUnmounted } from 'vue';\nimport { useHead } from '@unhead/vue';\nimport { withAsyncContext as _withAsyncContext } from \"vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nconst _sfc_main = {\n  __name: \"app\",\n  __ssrInlineRender: true,\n  async setup(__props) {\n    let __temp, __restore;\n    let { modals, cart } = storeToRefs(useCartStore());\n    let { Settings, ThemeOptions } = storeToRefs(useDataStore());\n    let { data, error, pending } = ([__temp, __restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n      key: \"getSettingsInApp\"\n    })), __temp = await __temp, __restore(), __temp);\n    const favIcon = ref(null);\n    const isTabInFocus = ref(true);\n    const timeoutId = ref(null);\n    const currentMessageIndex = ref(0);\n    const messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\n    const currentMessage = ref(\"\");\n    const delay = ref(1e3);\n    watch(\n      () => ThemeOptions.value.options,\n      (theme) => {\n        if (theme?.general?.mode === \"dark\") {\n          if (false) {\n            (void 0).documentElement.classList.add(\n              theme?.general && theme?.general?.mode\n            );\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.classList.remove(\"dark\");\n          }\n        }\n        if (theme?.general?.language_direction === \"rtl\") {\n          if (false) {\n            (void 0).documentElement.setAttribute(\"dir\", \"rtl\");\n            (void 0).body.classList.add(\"rtl\");\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.removeAttribute(\"dir\");\n            (void 0).body.classList.remove(\"rtl\");\n          }\n        }\n        if (false) {\n          favIcon.value = (void 0).querySelector(\"#appIcon\");\n          if (favIcon.value) {\n            favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n          }\n        }\n      }\n    );\n    useHead({\n      link: [\n        {\n          rel: \"icon\",\n          id: \"appIcon\",\n          type: \"image/png\",\n          href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"og:description\",\n          content: ThemeOptions?.value.options?.seo?.og_description\n        }\n      ],\n      meta: [\n        {\n          property: \"og:image\",\n          content: ThemeOptions?.value?.options?.seo?.og_image?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"description\",\n          content: ThemeOptions?.value?.options?.seo?.meta_description\n        }\n      ],\n      meta: [\n        {\n          property: \"keywords\",\n          content: ThemeOptions?.value?.options?.seo?.meta_tags\n        }\n      ]\n    });\n    function updateTitle(theme) {\n      const title = theme?.general?.site_title && theme?.general?.site_tagline ? `${theme.general.site_title} | ${theme.general.site_tagline}` : \"FastKart Marketplace: Where Vendors Shine Together\";\n      (void 0).title = title;\n    }\n    function updateMessage() {\n      clearTimeout(timeoutId.value);\n      currentMessage.value = messages.value[currentMessageIndex.value];\n      (void 0).title = currentMessage.value;\n      currentMessageIndex.value = (currentMessageIndex.value + 1) % messages.value.length;\n      timeoutId.value = setTimeout(updateMessage, delay.value);\n    }\n    onMounted(async () => {\n      (void 0).addEventListener(\"visibilitychange\", () => {\n        isTabInFocus.value = !(void 0).hidden;\n        if (isTabInFocus.value) {\n          clearTimeout(timeoutId.value);\n          updateTitle(ThemeOptions.value.options);\n        } else {\n          updateMessage();\n        }\n      });\n      (void 0).addEventListener(\"beforeunload\", (event) => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      });\n      let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n      if (localCart?.length) {\n        useCartStore().SetCart({ Cart: localCart });\n      }\n    });\n    onUnmounted(() => {\n      clearTimeout(timeoutId.value);\n    });\n    if (!error.value) {\n      useSiteStore().SetSiteSettings({ settings: data.value });\n    }\n    return (_ctx, _push, _parent, _attrs) => {\n      const _component_NuxtLayout = __nuxt_component_0;\n      const _component_NuxtPage = __nuxt_component_1;\n      const _component_WidgetsModalsProductModal = __nuxt_component_2;\n      _push(`<div${_ssrRenderAttrs(_attrs)}>`);\n      _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n        default: _withCtx((_, _push2, _parent2, _scopeId) => {\n          if (_push2) {\n            _push2(_ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));\n          } else {\n            return [\n              _createVNode(_component_NuxtPage)\n            ];\n          }\n        }),\n        _: 1\n      }, _parent));\n      _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n        Data: _unref(modals).quickView,\n        onClose: () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      }, null, _parent));\n      _push(`</div>`);\n    };\n  }\n};\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"app.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1716056343279,
      "end": 1716056343280,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-layout\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/pages/runtime/page\";\nimport { default as __nuxt_component_2 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ProductModal/index.vue\";\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { ref, watch, onMounted, onUnmounted } from 'vue';\nimport { useHead } from '@unhead/vue';\nimport { withAsyncContext as _withAsyncContext } from \"vue\";\nimport { resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref } from \"vue\";\nimport { ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs } from \"vue/server-renderer\";\nimport { storeToRefs } from \"pinia\";\nimport { useCartStore } from \"./store/cart\";\nimport { useSiteStore } from \"./store/site\";\nimport { useDataStore } from \"./store/data\";\nconst _sfc_main = {\n  __name: \"app\",\n  __ssrInlineRender: true,\n  async setup(__props) {\n    let __temp, __restore;\n    let { modals, cart } = storeToRefs(useCartStore());\n    let { Settings, ThemeOptions } = storeToRefs(useDataStore());\n    let { data, error, pending } = ([__temp, __restore] = _withAsyncContext(() => HandleRequest(\"settings\", {\n      key: \"getSettingsInApp\"\n    })), __temp = await __temp, __restore(), __temp);\n    const favIcon = ref(null);\n    const isTabInFocus = ref(true);\n    const timeoutId = ref(null);\n    const currentMessageIndex = ref(0);\n    const messages = ref([\"âš¡ Come Back !!\", \"ðŸŽ‰ Offers for you...\"]);\n    const currentMessage = ref(\"\");\n    const delay = ref(1e3);\n    watch(\n      () => ThemeOptions.value.options,\n      (theme) => {\n        if (theme?.general?.mode === \"dark\") {\n          if (false) {\n            (void 0).documentElement.classList.add(\n              theme?.general && theme?.general?.mode\n            );\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.classList.remove(\"dark\");\n          }\n        }\n        if (theme?.general?.language_direction === \"rtl\") {\n          if (false) {\n            (void 0).documentElement.setAttribute(\"dir\", \"rtl\");\n            (void 0).body.classList.add(\"rtl\");\n          }\n        } else {\n          if (false) {\n            (void 0).documentElement.removeAttribute(\"dir\");\n            (void 0).body.classList.remove(\"rtl\");\n          }\n        }\n        if (false) {\n          favIcon.value = (void 0).querySelector(\"#appIcon\");\n          if (favIcon.value) {\n            favIcon.value.href = theme?.logo?.favicon_icon?.original_url;\n          }\n        }\n      }\n    );\n    useHead({\n      link: [\n        {\n          rel: \"icon\",\n          id: \"appIcon\",\n          type: \"image/png\",\n          href: ThemeOptions?.value?.options?.logo?.favicon_icon?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"og:description\",\n          content: ThemeOptions?.value.options?.seo?.og_description\n        }\n      ],\n      meta: [\n        {\n          property: \"og:image\",\n          content: ThemeOptions?.value?.options?.seo?.og_image?.original_url\n        }\n      ],\n      meta: [\n        {\n          property: \"og:title\",\n          content: ThemeOptions?.value?.options?.seo?.og_title\n        }\n      ],\n      meta: [\n        {\n          property: \"description\",\n          content: ThemeOptions?.value?.options?.seo?.meta_description\n        }\n      ],\n      meta: [\n        {\n          property: \"keywords\",\n          content: ThemeOptions?.value?.options?.seo?.meta_tags\n        }\n      ]\n    });\n    function updateTitle(theme) {\n      const title = theme?.general?.site_title && theme?.general?.site_tagline ? `${theme.general.site_title} | ${theme.general.site_tagline}` : \"FastKart Marketplace: Where Vendors Shine Together\";\n      (void 0).title = title;\n    }\n    function updateMessage() {\n      clearTimeout(timeoutId.value);\n      currentMessage.value = messages.value[currentMessageIndex.value];\n      (void 0).title = currentMessage.value;\n      currentMessageIndex.value = (currentMessageIndex.value + 1) % messages.value.length;\n      timeoutId.value = setTimeout(updateMessage, delay.value);\n    }\n     false && /*@__PURE__*/ onMounted(async () => {\n      (void 0).addEventListener(\"visibilitychange\", () => {\n        isTabInFocus.value = !(void 0).hidden;\n        if (isTabInFocus.value) {\n          clearTimeout(timeoutId.value);\n          updateTitle(ThemeOptions.value.options);\n        } else {\n          updateMessage();\n        }\n      });\n      (void 0).addEventListener(\"beforeunload\", (event) => {\n        localStorage.setItem(\"cart\", JSON.stringify(cart.value));\n      });\n      let localCart = JSON.parse(localStorage.getItem(\"cart\"));\n      if (localCart?.length) {\n        useCartStore().SetCart({ Cart: localCart });\n      }\n    });\n    onUnmounted(() => {\n      clearTimeout(timeoutId.value);\n    });\n    if (!error.value) {\n      useSiteStore().SetSiteSettings({ settings: data.value });\n    }\n    return (_ctx, _push, _parent, _attrs) => {\n      const _component_NuxtLayout = __nuxt_component_0;\n      const _component_NuxtPage = __nuxt_component_1;\n      const _component_WidgetsModalsProductModal = __nuxt_component_2;\n      _push(`<div${_ssrRenderAttrs(_attrs)}>`);\n      _push(_ssrRenderComponent(_component_NuxtLayout, null, {\n        default: _withCtx((_, _push2, _parent2, _scopeId) => {\n          if (_push2) {\n            _push2(_ssrRenderComponent(_component_NuxtPage, null, null, _parent2, _scopeId));\n          } else {\n            return [\n              _createVNode(_component_NuxtPage)\n            ];\n          }\n        }),\n        _: 1\n      }, _parent));\n      _push(_ssrRenderComponent(_component_WidgetsModalsProductModal, {\n        Data: _unref(modals).quickView,\n        onClose: () => {\n          _unref(useCartStore)().ToggleModal({ value: false });\n        }\n      }, null, _parent));\n      _push(`</div>`);\n    };\n  }\n};\nimport \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/app.vue?vue&type=style&index=0&lang.scss\";\nimport { useSSRContext as __vite_useSSRContext } from \"vue\";\nconst _sfc_setup = _sfc_main.setup;\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext();\n  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add(\"app.vue\");\n  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;\n};\nexport default _sfc_main;\n",
      "start": 1716056343280,
      "end": 1716056343280,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056343282,
      "end": 1716056343282,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056343282,
      "end": 1716056343282,
      "order": "normal"
    }
  ]
}
