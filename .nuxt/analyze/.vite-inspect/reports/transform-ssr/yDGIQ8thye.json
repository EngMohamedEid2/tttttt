{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Cart/Products.vue?nuxt_component=async&nuxt_component_name=ShopCartProducts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n    <div class=\"cart-table\">\n        <div class=\"table-responsive-xl\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"product-box-contain\" v-for=\"item in cart\" :key=\"`cartItem${item.product?.name}`\">\n                        <td class=\"product-detail\">\n                            <div class=\"product border-0\">\n                                <nuxt-link :to=\"`/product/${item.product.slug}`\" class=\"product-image\">\n                                    <img :src=\"ProductImage({ product: item.product })\" class=\"img-fluid\" alt=\"\">\n                                </nuxt-link>\n                                <div class=\"product-detail\">\n                                    <ul>\n                                        <li class=\"name\">\n                                            <nuxt-link :to=\"`/product/${item.product.slug}`\">{{ item.variation ?\n                                                item.variation.name : item.product?.name\n                                            }}</nuxt-link>\n                                        </li>\n                                        <li class=\"text-content\"><span class=\"text-title\">\n                                                {{ (\"Sold By:\") }}</span>{{ (\"Fastkart\") }}</li>\n                                        <li class=\"text-content\" v-if=\"item.product && item.product?.unit\"><span\n                                                class=\"text-title\">{{ (\"Unit: \") }}</span>{{ item.product?.unit }}</li>\n                                        <li>\n                                            <h5 class=\"text-content d-inline-block\">{{ (\"Price :\") }}</h5><span>{{\n                                                store.currency.symbol }} {{\n        Number(store.convertCurrency(item?.variation ? item.variation.sale_price :\n            item.product?.sale_price)).toFixed(2) }}</span>\n                                            <span class=\"text-content\" v-if=\"item.product?.discount\">{{\n                                                store.currency.symbol }} {{\n        Number(store.convertCurrency(item.variation ? item.variation.price :\n            item.product?.price)).toFixed(2) }}</span>\n                                        </li>\n\n                                        <li v-if=\"item.product?.discount\">\n                                            <h5 class=\"saving theme-color\">{{ (\"Saving :\") }} {{ Number((item.variation ?\n                                                item.variation.price : item.product?.price) - (item.variation ?\n                                                    item.variation.sale_price : item.product?.sale_price)).toFixed(2) }}</h5>\n                                        </li>\n\n                                        <li class=\"quantity-price-box\">\n                                            <div class=\"cart_qty\">\n                                                <div class=\"input-group\">\n                                                    <button type=\"button\" class=\"btn qty-left-minus\" data-type=\"minus\"\n                                                        data-field=\"\"\n                                                        @click.prevent=\"useCartStore().ChangeQuantity({ CartItem: item, quantity: -1 })\">\n                                                        <Icon name=\"ri:subtract-line\"></Icon>\n                                                    </button>\n                                                    <input class=\"form-control input-number qty-input\" type=\"text\"\n                                                        name=\"quantity\" :value=\"item.quantity\">\n                                                    <button type=\"button\" class=\"btn qty-right-plus\" data-type=\"plus\"\n                                                        data-field=\"\"\n                                                        @click.prevent=\"useCartStore().ChangeQuantity({ CartItem: item })\">\n                                                        <Icon name=\"ri:add-line\" class=\"ms-0\"></Icon>\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </li>\n\n                                        <li>\n                                            <h5>{{ (\"Total:\") }} {{ Number(item.variation ? item.variation.sale_price :\n                                                item.product?.sale_price * item.quantity).toFixed(2) }}</h5>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </td>\n\n                        <td class=\"price\">\n                            <h4 class=\"table-title text-content\">{{ (\"Price\") }}</h4>\n                            <h5>{{ store.currency.symbol }} {{ Number(store.convertCurrency(item?.variation ?\n                                item.variation.sale_price :\n                                item.product?.sale_price)).toFixed(2) }} <del class=\"text-content\"\n                                    v-if=\"item.product?.discount\"> {{ store.currency.symbol }} {{\n                                        Number(store.convertCurrency(item.variation ? item.variation.price :\n                                            item.product?.price)).toFixed(2) }} </del></h5>\n                            <h6 class=\"theme-color\" v-if=\"item.product?.discount\">{{ (\"You Save :\") }} {{\n                                store.currency.symbol }} {{ Number(store.convertCurrency(item.variation ?\n        item.variation.price : item.product?.price) - (item.variation ? item.variation.sale_price :\n            item.product?.sale_price)).toFixed(2) }} </h6>\n                        </td>\n\n                        <td class=\"quantity\">\n                            <h4 class=\"table-title text-content\">{{ (\"Quantity\") }}</h4>\n                            <div class=\"quantity-price\">\n                                <div class=\"cart_qty\">\n                                    <div class=\"input-group\">\n                                        <button type=\"button\" class=\"btn qty-left-minus\" data-type=\"minus\" data-field=\"\"\n                                            @click.prevent=\"useCartStore().ChangeQuantity({ CartItem: item, quantity: -1, qty: quantity - 1 })\">\n                                            <Icon name=\"ri:subtract-line\"></Icon>\n                                        </button>\n                                        <input class=\"form-control input-number qty-input\" type=\"text\" name=\"quantity\"\n                                            :value=\"item.quantity\">\n\n                                        <button type=\"button\" class=\"btn qty-right-plus\" data-type=\"plus\" data-field=\"\"\n                                            @click.prevent=\"useCartStore().ChangeQuantity({ CartItem: item })\">\n                                            <Icon name=\"ri:add-line\" class=\"ms-0\"></Icon>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </td>\n\n                        <td class=\"subtotal\">\n                            <h4 class=\"table-title text-content\">{{ (\"Total\") }}</h4>\n                            <h5>{{ store.currency.symbol }} {{ Number(store.convertCurrency(item.variation ?\n                                item.variation.sale_price : item.product?.sale_price) *\n                                item.quantity).toFixed(2) }}</h5>\n                        </td>\n\n                        <td class=\"save-remove\">\n                            <h4 class=\"table-title text-content\">{{ (\"Action\") }}</h4>\n                            <nuxt-link to=\"javascript:void(0)\" class=\"save close_button \"\n                                @click.prevent=\"cartAction(item)\">{{ (\"Save for later\") }}</nuxt-link><br>\n                            <nuxt-link to=\"javascript:void(0)\" class=\"remove close_button\"\n                                @click.prevent=\"useCartStore().RemoveFromCart({ CartItem: item })\">{{ (\"Remove\")\n                                }}</nuxt-link>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</template>\n<script setup>\nimport { useCurrencyStore } from '@/store/currency'\nimport { useCartStore } from \"@/store/cart\"\nimport { useWishlistStore } from \"@/store/wishlist\";\nimport { storeToRefs } from \"pinia\";\nimport { useApiCartStore } from \"~~/store/CartWithApi\";\nlet { cart, CartTotal } = storeToRefs(useCartStore())\nlet { ApiCart } = storeToRefs(useApiCartStore())\nif (useCookie('uat').value) { useCartStore().GetCartDataFromApi() }\nlet ProductImage = ({ product }) => {\n    return product?.selectedVariant?.variation_image?.original_url || product?.product_thumbnail?.original_url || PlaceholderImage\n}\nconst productObjects = cart.value.map((product) => product);\nlet CartItem = computed(() => {\n    return IsProductInCart({ product: productObjects });\n});\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\nfunction cartAction(item) {\n    useWishlistStore().AddToWishlist( {product:item.product} );\n    useCartStore().RemoveFromCart({ CartItem: item })\n}\n</script>",
      "start": 1716056339297,
      "end": 1716056339379,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056339379,
      "end": 1716056339379,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, mergeProps as _mergeProps } from \"vue\"\nimport { ssrRenderAttr as _ssrRenderAttr, ssrRenderComponent as _ssrRenderComponent, ssrRenderAttrs as _ssrRenderAttrs, ssrInterpolate as _ssrInterpolate, ssrRenderList as _ssrRenderList } from \"vue/server-renderer\"\n\nimport { useCurrencyStore } from '@/store/currency'\nimport { useCartStore } from \"@/store/cart\"\nimport { useWishlistStore } from \"@/store/wishlist\";\nimport { storeToRefs } from \"pinia\";\nimport { useApiCartStore } from \"~~/store/CartWithApi\";\n\nconst _sfc_main = {\n  __name: 'Products',\n  __ssrInlineRender: true,\n  setup(__props) {\n\nlet { cart, CartTotal } = storeToRefs(useCartStore())\nlet { ApiCart } = storeToRefs(useApiCartStore())\nif (useCookie('uat').value) { useCartStore().GetCartDataFromApi() }\nlet ProductImage = ({ product }) => {\n    return product?.selectedVariant?.variation_image?.original_url || product?.product_thumbnail?.original_url || PlaceholderImage\n}\nconst productObjects = cart.value.map((product) => product);\nlet CartItem = computed(() => {\n    return IsProductInCart({ product: productObjects });\n});\n\nlet store = useCurrencyStore();\nstore.allCurrency();\n\nfunction cartAction(item) {\n    useWishlistStore().AddToWishlist( {product:item.product} );\n    useCartStore().RemoveFromCart({ CartItem: item })\n}\n\nreturn (_ctx, _push, _parent, _attrs) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n\n  _push(`<div${_ssrRenderAttrs(_mergeProps({ class: \"cart-table\" }, _attrs))}><div class=\"table-responsive-xl\"><table class=\"table\"><tbody><!--[-->`)\n  _ssrRenderList(_unref(cart), (item) => {\n    _push(`<tr class=\"product-box-contain\"><td class=\"product-detail\"><div class=\"product border-0\">`)\n    _push(_ssrRenderComponent(_component_nuxt_link, {\n      to: `/product/${item.product.slug}`,\n      class: \"product-image\"\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`<img${\n            _ssrRenderAttr(\"src\", _unref(ProductImage)({ product: item.product }))\n          } class=\"img-fluid\" alt=\"\"${\n            _scopeId\n          }>`)\n        } else {\n          return [\n            _createVNode(\"img\", {\n              src: _unref(ProductImage)({ product: item.product }),\n              class: \"img-fluid\",\n              alt: \"\"\n            }, null, 8, [\"src\"])\n          ]\n        }\n      }),\n      _: 2\n    }, _parent))\n    _push(`<div class=\"product-detail\"><ul><li class=\"name\">`)\n    _push(_ssrRenderComponent(_component_nuxt_link, {\n      to: `/product/${item.product.slug}`\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate(item.variation ?\n                                                item.variation.name : item.product?.name)}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString(item.variation ?\n                                                item.variation.name : item.product?.name), 1)\n          ]\n        }\n      }),\n      _: 2\n    }, _parent))\n    _push(`</li><li class=\"text-content\"><span class=\"text-title\">${\n      _ssrInterpolate((\"Sold By:\"))\n    }</span>${\n      _ssrInterpolate((\"Fastkart\"))\n    }</li>`)\n    if (item.product && item.product?.unit) {\n      _push(`<li class=\"text-content\"><span class=\"text-title\">${\n        _ssrInterpolate((\"Unit: \"))\n      }</span>${\n        _ssrInterpolate(item.product?.unit)\n      }</li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`<li><h5 class=\"text-content d-inline-block\">${\n      _ssrInterpolate((\"Price :\"))\n    }</h5><span>${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(item?.variation ? item.variation.sale_price :\n            item.product?.sale_price)).toFixed(2))\n    }</span>`)\n    if (item.product?.discount) {\n      _push(`<span class=\"text-content\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(item.variation ? item.variation.price :\n            item.product?.price)).toFixed(2))\n      }</span>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</li>`)\n    if (item.product?.discount) {\n      _push(`<li><h5 class=\"saving theme-color\">${\n        _ssrInterpolate((\"Saving :\"))\n      } ${\n        _ssrInterpolate(Number((item.variation ?\n                                                item.variation.price : item.product?.price) - (item.variation ?\n                                                    item.variation.sale_price : item.product?.sale_price)).toFixed(2))\n      }</h5></li>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`<li class=\"quantity-price-box\"><div class=\"cart_qty\"><div class=\"input-group\"><button type=\"button\" class=\"btn qty-left-minus\" data-type=\"minus\" data-field=\"\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:subtract-line\" }, null, _parent))\n    _push(`</button><input class=\"form-control input-number qty-input\" type=\"text\" name=\"quantity\"${_ssrRenderAttr(\"value\", item.quantity)}><button type=\"button\" class=\"btn qty-right-plus\" data-type=\"plus\" data-field=\"\">`)\n    _push(_ssrRenderComponent(_component_Icon, {\n      name: \"ri:add-line\",\n      class: \"ms-0\"\n    }, null, _parent))\n    _push(`</button></div></div></li><li><h5>${\n      _ssrInterpolate((\"Total:\"))\n    } ${\n      _ssrInterpolate(Number(item.variation ? item.variation.sale_price :\n                                                item.product?.sale_price * item.quantity).toFixed(2))\n    }</h5></li></ul></div></div></td><td class=\"price\"><h4 class=\"table-title text-content\">${\n      _ssrInterpolate((\"Price\"))\n    }</h4><h5>${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(item?.variation ?\n                                item.variation.sale_price :\n                                item.product?.sale_price)).toFixed(2))\n    } `)\n    if (item.product?.discount) {\n      _push(`<del class=\"text-content\">${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(item.variation ? item.variation.price :\n                                            item.product?.price)).toFixed(2))\n      }</del>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</h5>`)\n    if (item.product?.discount) {\n      _push(`<h6 class=\"theme-color\">${\n        _ssrInterpolate((\"You Save :\"))\n      } ${\n        _ssrInterpolate(_unref(store).currency.symbol)\n      } ${\n        _ssrInterpolate(Number(_unref(store).convertCurrency(item.variation ?\n        item.variation.price : item.product?.price) - (item.variation ? item.variation.sale_price :\n            item.product?.sale_price)).toFixed(2))\n      }</h6>`)\n    } else {\n      _push(`<!---->`)\n    }\n    _push(`</td><td class=\"quantity\"><h4 class=\"table-title text-content\">${_ssrInterpolate((\"Quantity\"))}</h4><div class=\"quantity-price\"><div class=\"cart_qty\"><div class=\"input-group\"><button type=\"button\" class=\"btn qty-left-minus\" data-type=\"minus\" data-field=\"\">`)\n    _push(_ssrRenderComponent(_component_Icon, { name: \"ri:subtract-line\" }, null, _parent))\n    _push(`</button><input class=\"form-control input-number qty-input\" type=\"text\" name=\"quantity\"${_ssrRenderAttr(\"value\", item.quantity)}><button type=\"button\" class=\"btn qty-right-plus\" data-type=\"plus\" data-field=\"\">`)\n    _push(_ssrRenderComponent(_component_Icon, {\n      name: \"ri:add-line\",\n      class: \"ms-0\"\n    }, null, _parent))\n    _push(`</button></div></div></div></td><td class=\"subtotal\"><h4 class=\"table-title text-content\">${\n      _ssrInterpolate((\"Total\"))\n    }</h4><h5>${\n      _ssrInterpolate(_unref(store).currency.symbol)\n    } ${\n      _ssrInterpolate(Number(_unref(store).convertCurrency(item.variation ?\n                                item.variation.sale_price : item.product?.sale_price) *\n                                item.quantity).toFixed(2))\n    }</h5></td><td class=\"save-remove\"><h4 class=\"table-title text-content\">${\n      _ssrInterpolate((\"Action\"))\n    }</h4>`)\n    _push(_ssrRenderComponent(_component_nuxt_link, {\n      to: \"javascript:void(0)\",\n      class: \"save close_button\",\n      onClick: $event => (cartAction(item))\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate((\"Save for later\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString((\"Save for later\")))\n          ]\n        }\n      }),\n      _: 2\n    }, _parent))\n    _push(`<br>`)\n    _push(_ssrRenderComponent(_component_nuxt_link, {\n      to: \"javascript:void(0)\",\n      class: \"remove close_button\",\n      onClick: $event => (_unref(useCartStore)().RemoveFromCart({ CartItem: item }))\n    }, {\n      default: _withCtx((_, _push, _parent, _scopeId) => {\n        if (_push) {\n          _push(`${_ssrInterpolate((\"Remove\"))}`)\n        } else {\n          return [\n            _createTextVNode(_toDisplayString((\"Remove\")))\n          ]\n        }\n      }),\n      _: 2\n    }, _parent))\n    _push(`</td></tr>`)\n  })\n  _push(`<!--]--></tbody></table></div></div>`)\n}\n}\n\n}\n\n\n\nimport { useSSRContext as __vite_useSSRContext } from 'vue'\nconst _sfc_setup = _sfc_main.setup\n_sfc_main.setup = (props, ctx) => {\n  const ssrContext = __vite_useSSRContext()\n  ;(ssrContext.modules || (ssrContext.modules = new Set())).add(\"components/Shop/Cart/Products.vue\")\n  return _sfc_setup ? _sfc_setup(props, ctx) : undefined\n}\nexport default _sfc_main",
      "start": 1716056339379,
      "end": 1716056339384,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Shop/Cart/Products.vue\").then(r => r.default))",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056339384,
      "end": 1716056339384,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056339384,
      "end": 1716056339385,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056339385,
      "end": 1716056339385,
      "order": "normal"
    }
  ]
}
