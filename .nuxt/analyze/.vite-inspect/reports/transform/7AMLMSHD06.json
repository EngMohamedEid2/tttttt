{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ReviewModal/index.vue?nuxt_component=async&nuxt_component_name=WidgetsModalsReviewModal",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n  <div class=\"modal-header\">\n    <h3 class=\"fw-semibold\">{{ (initialRating ? 'Edit a Review' : 'Write a Review') }}</h3>\n    <WidgetsButton :classes=\"'btn btn-close'\" :id=\"'profile_modal_close_btn'\" @onClick=\"() => { emit('close') }\">\n      <Icon name=\"ri-close-line\"></Icon>\n    </WidgetsButton>\n  </div>\n\n  <div class=\"modal-body\">\n    <form class=\"product-review-form\">\n      <div class=\"product-wrapper\">\n        <div class=\"product-image\">\n          <img :src=\"product.product_thumbnail ? product.product_thumbnail.original_url : '/images/product.png'\"\n            class=\"img-fluid\" :alt=\"product.name\">\n        </div>\n        <div class=\"product-content\">\n          <h5 class=\"name\">{{ product.name }}</h5>\n          <div class=\"product-review-rating\">\n            <label>{{ $t('Rating') }}</label>\n            <div class=\"product-rating\">\n              <NuxtRating :read-only=\"false\" :ratingValue=\"initialRating || 0\" />\n              <h6 class=\"rating-number\" v-if=\"product.rating_count\">( {{ product.rating_count.toFixed(2) || 0 }})</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"review-box\">\n        <div class=\"product-review-rating\">\n          <label>{{ $t('Rating') }}</label>\n          <div class=\"product-rating\">\n            <NuxtRating :read-only=\"false\" :ratingValue=\"initialRating || 0\" @rating-selected=\"getRetingValue\" />\n          </div>\n          <div class=\"invalid-feedback\">\n            {{ $t('Rating is required') }}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"review-box\">\n        <label class=\"form-label\" for=\"content\">{{ $t('Review Content') }}</label>\n        <textarea placeholder=\"Write Something...\" class=\"form-control\" v-model=\"discription\"\n          formControlName=\"description\" rows=\"3\"></textarea>\n      </div>\n    </form>\n\n    <div class=\"modal-footer\">\n      <WidgetsButton :classes=\"'btn btn-theme-outline btn-md fw-bold'\" :type=\"'button'\" :id=\"'cancel_profile_btn'\"\n        @onClick=\"modal.dismiss('Cancel')\">{{ $t('Cancel') }}</WidgetsButton>\n      <WidgetsButton :classes=\"'btn theme-bg-color btn-md fw-bold text-light'\" :id=\"'submit_profile_btn'\"\n        @onClick=\"submit()\">\n        {{ $t('Submit') }}\n      </WidgetsButton>\n    </div>\n  </div>\n</div>\n</template>\n\n<script setup>\nimport { useDataStore } from '~~/store/data';\nlet props = defineProps({\n  product: Object,\n  reviews: Object\n})\n\nlet emit = defineEmits(['close'])\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  })\n  useDataStore().GetSingleProduct()\n}\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056285208,
      "end": 1716056285370,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056285370,
      "end": 1716056285370,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, isRef as _isRef, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"modal-header\" }\nconst _hoisted_2 = { class: \"fw-semibold\" }\nconst _hoisted_3 = { class: \"modal-body\" }\nconst _hoisted_4 = { class: \"product-review-form\" }\nconst _hoisted_5 = { class: \"product-wrapper\" }\nconst _hoisted_6 = { class: \"product-image\" }\nconst _hoisted_7 = [\"src\", \"alt\"]\nconst _hoisted_8 = { class: \"product-content\" }\nconst _hoisted_9 = { class: \"name\" }\nconst _hoisted_10 = { class: \"product-review-rating\" }\nconst _hoisted_11 = { class: \"product-rating\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"rating-number\"\n}\nconst _hoisted_13 = { class: \"review-box\" }\nconst _hoisted_14 = { class: \"product-review-rating\" }\nconst _hoisted_15 = { class: \"product-rating\" }\nconst _hoisted_16 = { class: \"invalid-feedback\" }\nconst _hoisted_17 = { class: \"review-box\" }\nconst _hoisted_18 = {\n  class: \"form-label\",\n  for: \"content\"\n}\nconst _hoisted_19 = { class: \"modal-footer\" }\n\nimport { useDataStore } from '~~/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  props: {\n  product: Object,\n  reviews: Object\n},\n  emits: ['close'],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\n\nlet emit = __emit\nlet initialRating = ref(props.product?.rating_count)\nlet ratingValue = ref(0)\nlet discription = ref(props.reviews[0]?.description)\nfunction getRetingValue(event) {\n  ratingValue.value = event\n}\nasync function submit() {\n  await useFetch('/review/' + props.reviews[0].id, {\n    baseURL: BaseUrl,\n    method: 'put',\n    headers: GetHeaders(),\n    body: {\n      rating: ratingValue.value,\n      review_image_id: null,\n      description: discription.value\n    }\n  })\n  useDataStore().GetSingleProduct()\n}\n\nreturn (_ctx, _cache) => {\n  const _component_Icon = _resolveComponent(\"Icon\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n  const _component_NuxtRating = _resolveComponent(\"NuxtRating\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"h3\", _hoisted_2, _toDisplayString((_unref(initialRating) ? 'Edit a Review' : 'Write a Review')), 1),\n      _createVNode(_component_WidgetsButton, {\n        classes: 'btn btn-close',\n        id: 'profile_modal_close_btn',\n        onOnClick: _cache[0] || (_cache[0] = () => { _unref(emit)('close') })\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ]),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"form\", _hoisted_4, [\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"div\", _hoisted_6, [\n            _createElementVNode(\"img\", {\n              src: __props.product.product_thumbnail ? __props.product.product_thumbnail.original_url : '/images/product.png',\n              class: \"img-fluid\",\n              alt: __props.product.name\n            }, null, 8, _hoisted_7)\n          ]),\n          _createElementVNode(\"div\", _hoisted_8, [\n            _createElementVNode(\"h5\", _hoisted_9, _toDisplayString(__props.product.name), 1),\n            _createElementVNode(\"div\", _hoisted_10, [\n              _createElementVNode(\"label\", null, _toDisplayString(_ctx.$t('Rating')), 1),\n              _createElementVNode(\"div\", _hoisted_11, [\n                _createVNode(_component_NuxtRating, {\n                  \"read-only\": false,\n                  ratingValue: _unref(initialRating) || 0\n                }, null, 8, [\"ratingValue\"]),\n                (__props.product.rating_count)\n                  ? (_openBlock(), _createElementBlock(\"h6\", _hoisted_12, \"( \" + _toDisplayString(__props.product.rating_count.toFixed(2) || 0) + \")\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_13, [\n          _createElementVNode(\"div\", _hoisted_14, [\n            _createElementVNode(\"label\", null, _toDisplayString(_ctx.$t('Rating')), 1),\n            _createElementVNode(\"div\", _hoisted_15, [\n              _createVNode(_component_NuxtRating, {\n                \"read-only\": false,\n                ratingValue: _unref(initialRating) || 0,\n                onRatingSelected: getRetingValue\n              }, null, 8, [\"ratingValue\"])\n            ]),\n            _createElementVNode(\"div\", _hoisted_16, _toDisplayString(_ctx.$t('Rating is required')), 1)\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_17, [\n          _createElementVNode(\"label\", _hoisted_18, _toDisplayString(_ctx.$t('Review Content')), 1),\n          _withDirectives(_createElementVNode(\"textarea\", {\n            placeholder: \"Write Something...\",\n            class: \"form-control\",\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_isRef(discription) ? (discription).value = $event : discription = $event)),\n            formControlName: \"description\",\n            rows: \"3\"\n          }, null, 512), [\n            [_vModelText, _unref(discription)]\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_19, [\n        _createVNode(_component_WidgetsButton, {\n          classes: 'btn btn-theme-outline btn-md fw-bold',\n          type: 'button',\n          id: 'cancel_profile_btn',\n          onOnClick: _cache[2] || (_cache[2] = $event => (_ctx.modal.dismiss('Cancel')))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t('Cancel')), 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_WidgetsButton, {\n          classes: 'btn theme-bg-color btn-md fw-bold text-light',\n          id: 'submit_profile_btn',\n          onOnClick: _cache[3] || (_cache[3] = $event => (submit()))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t('Submit')), 1)\n          ]),\n          _: 1\n        })\n      ])\n    ])\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056285370,
      "end": 1716056285373,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ReviewModal/index.vue\").then(r => r.default))",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056285373,
      "end": 1716056285373,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056285373,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/Modals/ReviewModal/index.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056285374,
      "end": 1716056285374,
      "order": "normal"
    }
  ]
}
