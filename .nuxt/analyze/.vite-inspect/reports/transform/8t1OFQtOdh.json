{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Search.vue?nuxt_component=async&nuxt_component_name=HeaderElementsSearch",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <!-- Search Basic Style -->\n    <div class=\"input-group\" v-if=\"style == 'basic'\">\n        <input type=\"search\" class=\"form-control\" placeholder=\"Search Hear...\" v-model=\"term\">\n        <button class=\"btn\" type=\"button\" id=\"button-addon2\" @click=\"redirectToSearch()\">\n            <Icon name=\"ri:search-line\"></Icon>\n        </button>\n    </div>\n\n    <!-- Search Basic Style -->\n    <div class=\"input-group\" v-if=\"style == 'berlin'\">\n        <a href=\"javascript:void(0)\" class=\"btn\" @click=\"toggleSearchBox()\">\n            <Icon name=\"ri:search-line\"></Icon>\n        </a>\n    </div>\n\n    <!-- Search Classic Style -->\n    <div class=\"searchbar-box-2 input-group d-xl-flex d-none\" v-if=\"style == 'classic'\">\n        <button class=\"btn search-icon\" type=\"button\" @click=\"redirectToCollection()\">\n            <Icon name=\"ri:search-line\"></Icon>\n        </button>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search for products, styles,brands...\" v-model=\"term\">\n        <button class=\"btn search-button\" type=\"button\" @click=\"redirectToCollection()\">Search</button>\n    </div>\n\n    <!-- Search Standard Style -->\n    <div v-if=\"style == 'standard'\">\n        <input type=\"search\" class=\"form-control\" placeholder=\"search for product, delivered to your door...\">\n        <button class=\"btn search-button\" @click=\"redirectToCollection()\">\n            <Icon name=\"ri:search-line\"></Icon>\n        </button>\n    </div>\n\n    <!-- Search Full -->\n    <div class=\"search-full\" :class=\"{ open: show }\">\n        <div class=\"input-group\">\n            <span class=\"input-group-text\">\n                <Icon name=\"fe:search\" class=\"font-light\"></Icon>\n            </span>\n            <input type=\"text\" class=\"form-control search-type\" placeholder=\"Search here..\">\n            <span class=\"input-group-text close-search\" @click=\"toggleSearchBox()\">\n               <Icon name=\"ri-close-line\"/>\n            </span>\n        </div>\n    </div>\n</div>\n</template>\n<script setup>\nlet props = defineProps({\n    style: { type: [String,Object], default: 'basic' }\n})\n\nlet term = ref('');\nlet show = ref(false);\nlet router = useRouter()\n\nfunction redirectToSearch() {\n    const queryParams = {};\n    if (term.value) {\n        queryParams.search = term.value;\n    }\n\n    router.push({\n        path: '/search',\n        query: {\n            ...queryParams,\n        },\n    });\n}\n\nfunction toggleSearchBox() {\n    show.value = !show.value\n}\n</script>\n",
      "start": 1716056270715,
      "end": 1716056270820,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056270820,
      "end": 1716056270820,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, isRef as _isRef, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"input-group\"\n}\nconst _hoisted_2 = {\n  key: 1,\n  class: \"input-group\"\n}\nconst _hoisted_3 = {\n  key: 2,\n  class: \"searchbar-box-2 input-group d-xl-flex d-none\"\n}\nconst _hoisted_4 = { key: 3 }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"search\",\n  class: \"form-control\",\n  placeholder: \"search for product, delivered to your door...\"\n}, null, -1)\nconst _hoisted_6 = { class: \"input-group\" }\nconst _hoisted_7 = { class: \"input-group-text\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"text\",\n  class: \"form-control search-type\",\n  placeholder: \"Search here..\"\n}, null, -1)\n\n\nconst _sfc_main = {\n  __name: 'Search',\n  props: {\n    style: { type: [String,Object], default: 'basic' }\n},\n  setup(__props) {\n\nlet props = __props\n\nlet term = ref('');\nlet show = ref(false);\nlet router = useRouter()\n\nfunction redirectToSearch() {\n    const queryParams = {};\n    if (term.value) {\n        queryParams.search = term.value;\n    }\n\n    router.push({\n        path: '/search',\n        query: {\n            ...queryParams,\n        },\n    });\n}\n\nfunction toggleSearchBox() {\n    show.value = !show.value\n}\n\nreturn (_ctx, _cache) => {\n  const _component_Icon = _resolveComponent(\"Icon\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (__props.style == 'basic')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"search\",\n            class: \"form-control\",\n            placeholder: \"Search Hear...\",\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => (_isRef(term) ? (term).value = $event : term = $event))\n          }, null, 512), [\n            [_vModelText, _unref(term)]\n          ]),\n          _createElementVNode(\"button\", {\n            class: \"btn\",\n            type: \"button\",\n            id: \"button-addon2\",\n            onClick: _cache[1] || (_cache[1] = $event => (redirectToSearch()))\n          }, [\n            _createVNode(_component_Icon, { name: \"ri:search-line\" })\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (__props.style == 'berlin')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createElementVNode(\"a\", {\n            href: \"javascript:void(0)\",\n            class: \"btn\",\n            onClick: _cache[2] || (_cache[2] = $event => (toggleSearchBox()))\n          }, [\n            _createVNode(_component_Icon, { name: \"ri:search-line\" })\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (__props.style == 'classic')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            class: \"btn search-icon\",\n            type: \"button\",\n            onClick: _cache[3] || (_cache[3] = $event => (_ctx.redirectToCollection()))\n          }, [\n            _createVNode(_component_Icon, { name: \"ri:search-line\" })\n          ]),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            class: \"form-control\",\n            placeholder: \"Search for products, styles,brands...\",\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => (_isRef(term) ? (term).value = $event : term = $event))\n          }, null, 512), [\n            [_vModelText, _unref(term)]\n          ]),\n          _createElementVNode(\"button\", {\n            class: \"btn search-button\",\n            type: \"button\",\n            onClick: _cache[5] || (_cache[5] = $event => (_ctx.redirectToCollection()))\n          }, \"Search\")\n        ]))\n      : _createCommentVNode(\"\", true),\n    (__props.style == 'standard')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [\n          _hoisted_5,\n          _createElementVNode(\"button\", {\n            class: \"btn search-button\",\n            onClick: _cache[6] || (_cache[6] = $event => (_ctx.redirectToCollection()))\n          }, [\n            _createVNode(_component_Icon, { name: \"ri:search-line\" })\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass([\"search-full\", { open: _unref(show) }])\n    }, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"span\", _hoisted_7, [\n          _createVNode(_component_Icon, {\n            name: \"fe:search\",\n            class: \"font-light\"\n          })\n        ]),\n        _hoisted_8,\n        _createElementVNode(\"span\", {\n          class: \"input-group-text close-search\",\n          onClick: _cache[7] || (_cache[7] = $event => (toggleSearchBox()))\n        }, [\n          _createVNode(_component_Icon, { name: \"ri-close-line\" })\n        ])\n      ])\n    ], 2)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056270820,
      "end": 1716056270823,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Search.vue\").then(r => r.default))",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Search.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056270823,
      "end": 1716056270823,
      "order": "normal"
    }
  ]
}
