{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/RecentlyPurchasePoppup/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div\n    class=\"media recently-purchase\"\n    :class=\"{ show: popup_enable ? show : popup_enable }\"\n    v-if=\"product\"\n  >\n    <img\n      :src=\"\n        product.product_thumbnail\n          ? product.product_thumbnail.original_url\n          : '/images/product.png'\n      \"\n      class=\"media-height\"\n      alt=\"product\"\n    />\n    <div class=\"media-body\">\n      <div>\n        <div class=\"title d-block mb-0\">\n          {{ $t(\"Someone Recently Purchased\") }}\n        </div>\n        <nuxt-link :to=\"`/product/${product.slug}`\">\n          <span class=\"product-name\">\n            {{ product.name }}\n          </span>\n        </nuxt-link>\n\n        <small class=\"timeAgo\">{{ min }} {{ $t(\"Minutes Ago\") }}</small>\n      </div>\n    </div>\n    <a href=\"javascript:void(0)\" @click=\"closePopup()\" class=\"close-popup\">\n      <Icon name=\"ri:close-fill\"></Icon>\n    </a>\n  </div>\n</template>\n\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\n\nuseDataStore().GetProduct();\nlet { Products } = storeToRefs(useDataStore());\n\nlet product = ref();\n// let relatesProduct = ref();\nlet show = ref(false);\nlet min = ref(10);\nlet popup_enable = ref(true);\nlet { data, error } = await HandleRequest(`product`, {\n  key: \"getProductTopToSave\",\n});\n\nconst randomlySelectProduct = () => {\n  if (!Products?.value?.data?.length) {\n    relatesProducts();\n  } else {\n    const randomIndex = Math.floor(Math.random() * Products.value.data.length);\n    product.value = Products.value.data[randomIndex];\n  }\n};\n\n// const relatesProducts = () => {\n//   let relatedProductsArrays = Products?.value?.data.map(\n//     (product) => product?.related_products || []\n//   );\n//   let products = Products?.value?.data?.filter((product) =>\n//     relatedProductsArrays?.includes(product.id)\n//   );\n//   let randomIndex = Math.floor(Math.random() * products?.length);\n//   product.value = products[randomIndex];\n// };\n\nfunction closePopup() {\n  popup_enable.value = false;\n}\n\nonMounted(() => {\n  // randomlySelectProduct();\n  if (popup_enable.value) {\n    const timer = setInterval(() => {\n      show.value = true;\n      min.value = Math.floor(Math.random() * 60) + 1;\n      randomlySelectProduct();\n      setTimeout(() => {\n        show.value = false;\n      }, 3000);\n    }, 20000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056289047,
      "end": 1716056289139,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056289139,
      "end": 1716056289139,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"media-body\" }\nconst _hoisted_3 = { class: \"title d-block mb-0\" }\nconst _hoisted_4 = { class: \"product-name\" }\nconst _hoisted_5 = { class: \"timeAgo\" }\n\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\n\n\nconst _sfc_main = {\n  __name: 'index',\n  async setup(__props) {\n\nlet __temp, __restore\n\nuseDataStore().GetProduct();\nlet { Products } = storeToRefs(useDataStore());\n\nlet product = ref();\n// let relatesProduct = ref();\nlet show = ref(false);\nlet min = ref(10);\nlet popup_enable = ref(true);\nlet { data, error } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest(`product`, {\n  key: \"getProductTopToSave\",\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nconst randomlySelectProduct = () => {\n  if (!Products?.value?.data?.length) {\n    relatesProducts();\n  } else {\n    const randomIndex = Math.floor(Math.random() * Products.value.data.length);\n    product.value = Products.value.data[randomIndex];\n  }\n};\n\n// const relatesProducts = () => {\n//   let relatedProductsArrays = Products?.value?.data.map(\n//     (product) => product?.related_products || []\n//   );\n//   let products = Products?.value?.data?.filter((product) =>\n//     relatedProductsArrays?.includes(product.id)\n//   );\n//   let randomIndex = Math.floor(Math.random() * products?.length);\n//   product.value = products[randomIndex];\n// };\n\nfunction closePopup() {\n  popup_enable.value = false;\n}\n\nonMounted(() => {\n  // randomlySelectProduct();\n  if (popup_enable.value) {\n    const timer = setInterval(() => {\n      show.value = true;\n      min.value = Math.floor(Math.random() * 60) + 1;\n      randomlySelectProduct();\n      setTimeout(() => {\n        show.value = false;\n      }, 3000);\n    }, 20000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n\n  return (_unref(product))\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"media recently-purchase\", { show: _unref(popup_enable) ? _unref(show) : _unref(popup_enable) }])\n      }, [\n        _createElementVNode(\"img\", {\n          src: \n        _unref(product).product_thumbnail\n          ? _unref(product).product_thumbnail.original_url\n          : '/images/product.png'\n      ,\n          class: \"media-height\",\n          alt: \"product\"\n        }, null, 8, _hoisted_1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", null, [\n            _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t(\"Someone Recently Purchased\")), 1),\n            _createVNode(_component_nuxt_link, {\n              to: `/product/${_unref(product).slug}`\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(product).name), 1)\n              ]),\n              _: 1\n            }, 8, [\"to\"]),\n            _createElementVNode(\"small\", _hoisted_5, _toDisplayString(_unref(min)) + \" \" + _toDisplayString(_ctx.$t(\"Minutes Ago\")), 1)\n          ])\n        ]),\n        _createElementVNode(\"a\", {\n          href: \"javascript:void(0)\",\n          onClick: _cache[0] || (_cache[0] = $event => (closePopup())),\n          class: \"close-popup\"\n        }, [\n          _createVNode(_component_Icon, { name: \"ri:close-fill\" })\n        ])\n      ], 2))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056289139,
      "end": 1716056289140,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056289140,
      "end": 1716056289140,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { setInterval } from '#app/compat/interval';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"media-body\" }\nconst _hoisted_3 = { class: \"title d-block mb-0\" }\nconst _hoisted_4 = { class: \"product-name\" }\nconst _hoisted_5 = { class: \"timeAgo\" }\n\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\n\n\nconst _sfc_main = {\n  __name: 'index',\n  async setup(__props) {\n\nlet __temp, __restore\n\nuseDataStore().GetProduct();\nlet { Products } = storeToRefs(useDataStore());\n\nlet product = ref();\n// let relatesProduct = ref();\nlet show = ref(false);\nlet min = ref(10);\nlet popup_enable = ref(true);\nlet { data, error } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest(`product`, {\n  key: \"getProductTopToSave\",\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nconst randomlySelectProduct = () => {\n  if (!Products?.value?.data?.length) {\n    relatesProducts();\n  } else {\n    const randomIndex = Math.floor(Math.random() * Products.value.data.length);\n    product.value = Products.value.data[randomIndex];\n  }\n};\n\n// const relatesProducts = () => {\n//   let relatedProductsArrays = Products?.value?.data.map(\n//     (product) => product?.related_products || []\n//   );\n//   let products = Products?.value?.data?.filter((product) =>\n//     relatedProductsArrays?.includes(product.id)\n//   );\n//   let randomIndex = Math.floor(Math.random() * products?.length);\n//   product.value = products[randomIndex];\n// };\n\nfunction closePopup() {\n  popup_enable.value = false;\n}\n\nonMounted(() => {\n  // randomlySelectProduct();\n  if (popup_enable.value) {\n    const timer = setInterval(() => {\n      show.value = true;\n      min.value = Math.floor(Math.random() * 60) + 1;\n      randomlySelectProduct();\n      setTimeout(() => {\n        show.value = false;\n      }, 3000);\n    }, 20000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_Icon = _resolveComponent(\"Icon\")\n\n  return (_unref(product))\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"media recently-purchase\", { show: _unref(popup_enable) ? _unref(show) : _unref(popup_enable) }])\n      }, [\n        _createElementVNode(\"img\", {\n          src: \n        _unref(product).product_thumbnail\n          ? _unref(product).product_thumbnail.original_url\n          : '/images/product.png'\n      ,\n          class: \"media-height\",\n          alt: \"product\"\n        }, null, 8, _hoisted_1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", null, [\n            _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t(\"Someone Recently Purchased\")), 1),\n            _createVNode(_component_nuxt_link, {\n              to: `/product/${_unref(product).slug}`\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(product).name), 1)\n              ]),\n              _: 1\n            }, 8, [\"to\"]),\n            _createElementVNode(\"small\", _hoisted_5, _toDisplayString(_unref(min)) + \" \" + _toDisplayString(_ctx.$t(\"Minutes Ago\")), 1)\n          ])\n        ]),\n        _createElementVNode(\"a\", {\n          href: \"javascript:void(0)\",\n          onClick: _cache[0] || (_cache[0] = $event => (closePopup())),\n          class: \"close-popup\"\n        }, [\n          _createVNode(_component_Icon, { name: \"ri:close-fill\" })\n        ])\n      ], 2))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056289140,
      "end": 1716056289143,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056289143,
      "end": 1716056289143,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056289143,
      "end": 1716056289143,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056289143,
      "end": 1716056289144,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056289144,
      "end": 1716056289144,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/components/nuxt-link\";\nimport { default as __nuxt_component_1 } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt-icon/dist/runtime/Icon.vue\";\nimport { ref, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { setInterval } from '#app/compat/interval';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"media-body\" }\nconst _hoisted_3 = { class: \"title d-block mb-0\" }\nconst _hoisted_4 = { class: \"product-name\" }\nconst _hoisted_5 = { class: \"timeAgo\" }\n\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\n\n\nconst _sfc_main = {\n  __name: 'index',\n  async setup(__props) {\n\nlet __temp, __restore\n\nuseDataStore().GetProduct();\nlet { Products } = storeToRefs(useDataStore());\n\nlet product = ref();\n// let relatesProduct = ref();\nlet show = ref(false);\nlet min = ref(10);\nlet popup_enable = ref(true);\nlet { data, error } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest(`product`, {\n  key: \"getProductTopToSave\",\n}))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nconst randomlySelectProduct = () => {\n  if (!Products?.value?.data?.length) {\n    relatesProducts();\n  } else {\n    const randomIndex = Math.floor(Math.random() * Products.value.data.length);\n    product.value = Products.value.data[randomIndex];\n  }\n};\n\n// const relatesProducts = () => {\n//   let relatedProductsArrays = Products?.value?.data.map(\n//     (product) => product?.related_products || []\n//   );\n//   let products = Products?.value?.data?.filter((product) =>\n//     relatedProductsArrays?.includes(product.id)\n//   );\n//   let randomIndex = Math.floor(Math.random() * products?.length);\n//   product.value = products[randomIndex];\n// };\n\nfunction closePopup() {\n  popup_enable.value = false;\n}\n\nonMounted(() => {\n  // randomlySelectProduct();\n  if (popup_enable.value) {\n    const timer = setInterval(() => {\n      show.value = true;\n      min.value = Math.floor(Math.random() * 60) + 1;\n      randomlySelectProduct();\n      setTimeout(() => {\n        show.value = false;\n      }, 3000);\n    }, 20000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = __nuxt_component_0\n  const _component_Icon = __nuxt_component_1\n\n  return (_unref(product))\n    ? (_openBlock(), _createElementBlock(\"div\", {\n        key: 0,\n        class: _normalizeClass([\"media recently-purchase\", { show: _unref(popup_enable) ? _unref(show) : _unref(popup_enable) }])\n      }, [\n        _createElementVNode(\"img\", {\n          src: \n        _unref(product).product_thumbnail\n          ? _unref(product).product_thumbnail.original_url\n          : '/images/product.png'\n      ,\n          class: \"media-height\",\n          alt: \"product\"\n        }, null, 8, _hoisted_1),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createElementVNode(\"div\", null, [\n            _createElementVNode(\"div\", _hoisted_3, _toDisplayString(_ctx.$t(\"Someone Recently Purchased\")), 1),\n            _createVNode(_component_nuxt_link, {\n              to: `/product/${_unref(product).slug}`\n            }, {\n              default: _withCtx(() => [\n                _createElementVNode(\"span\", _hoisted_4, _toDisplayString(_unref(product).name), 1)\n              ]),\n              _: 1\n            }, 8, [\"to\"]),\n            _createElementVNode(\"small\", _hoisted_5, _toDisplayString(_unref(min)) + \" \" + _toDisplayString(_ctx.$t(\"Minutes Ago\")), 1)\n          ])\n        ]),\n        _createElementVNode(\"a\", {\n          href: \"javascript:void(0)\",\n          onClick: _cache[0] || (_cache[0] = $event => (closePopup())),\n          class: \"close-popup\"\n        }, [\n          _createVNode(_component_Icon, { name: \"ri:close-fill\" })\n        ])\n      ], 2))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056289144,
      "end": 1716056289144,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056289144,
      "end": 1716056289144,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056289144,
      "end": 1716056289144,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056289144,
      "end": 1716056289144,
      "order": "normal"
    }
  ]
}
