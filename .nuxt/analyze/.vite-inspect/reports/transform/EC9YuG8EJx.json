{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/CommonForm/LoginForm.vue?nuxt_component=async&nuxt_component_name=AuthCommonFormLoginForm",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <form class=\"row g-4\" @submit.prevent=\"HandleLogin()\">\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsEmailField classes=\"form-control\" v-model=\"input.email\" :formSubmitted=\"formSubmitted\"\n          id=\"email\" placeholder=\"Email Address\" />\n        <label for=\"email\">{{ $t(\"Email Address\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"form-floating log-in-form\">\n        <WidgetsInputFieldsPasswordField classes=\"form-control\" v-model=\"input.password\" :formSubmitted=\"formSubmitted\"\n          id=\"password\" placeholder=\"Password\" />\n        <label for=\"password\">{{ $t(\"Password\") }}</label>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <div class=\"forgot-box\">\n        <div class=\"form-check ps-0 m-0 remember-box\">\n          <input class=\"checkbox_animated check-box\" type=\"checkbox\" id=\"remeberme\" />\n          <label class=\"form-check-label\" for=\"remeberme\">{{\n            $t(\"Remember me\")\n          }}</label>\n        </div>\n        <nuxt-link to=\"/auth/forgot-password\" class=\"forgot-password\">{{ $t(\"Forgot Password ?\") }}</nuxt-link>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <WidgetsButton :id=\"'login_btn'\">{{ $t(\"Log In\") }}</WidgetsButton>\n    </div>\n  </form>\n</template>\n\n<script setup>\nimport { useCartStore } from \"~~/store/cart\";\nimport { useUserStore } from \"~~/store/user\";\nlet input = ref({\n  email: { data: \"john.customer@example.com\" },\n  password: { data: \"123456789\" },\n});\nlet formSubmitted = ref(false);\nvar breadcrumbs = { page: \"Log In\", links: [{ name: \"Log In\" }] };\n\nconst HandleLogin = async () => {\n  formSubmitted = true;\n  if (input.value.email.data != \"\" && input.value.password.data != \"\") {\n\n    let login = {\n      email: input.value.email.data,\n      password: input.value.password.data,\n      access_token: \"950|ymQRD5qdiWikHpWyio5NN1Zw1ot5bTYnUxgGrXJCf980d31d\"\n    }\n    let userData = {\n      isLoggedIn: true,\n      email: input?.value?.email?.data,\n      uat: login?.access_token,\n    };\n\n    localStorage.setItem(\"usersAccount\", JSON.stringify(userData));\n    useCookie(\"uat\").value = login?.access_token;\n\n    useUserStore().GetUserInfo();\n    useUserStore().SetUser({\n      isLoggedIn: true,\n      email: input.value.email.data,\n      uat: login?.access_token,\n    });\n    useCartStore().GetCartDataFromApi();\n    navigateTo(NavigationLinks.user_Dashboard);\n  }\n};\n</script>\n<style lang=\"scss\" scoped></style>",
      "start": 1716056262055,
      "end": 1716056270632,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056270632,
      "end": 1716056270632,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056270632,
      "end": 1716056270632,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056270632,
      "end": 1716056270632,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056270632,
      "end": 1716056270632,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056270633,
      "end": 1716056270633,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056270633,
      "end": 1716056270633,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056270633,
      "end": 1716056270633,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"col-12\" }\nconst _hoisted_2 = { class: \"form-floating log-in-form\" }\nconst _hoisted_3 = { for: \"email\" }\nconst _hoisted_4 = { class: \"col-12\" }\nconst _hoisted_5 = { class: \"form-floating log-in-form\" }\nconst _hoisted_6 = { for: \"password\" }\nconst _hoisted_7 = { class: \"col-12\" }\nconst _hoisted_8 = { class: \"forgot-box\" }\nconst _hoisted_9 = { class: \"form-check ps-0 m-0 remember-box\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"checkbox_animated check-box\",\n  type: \"checkbox\",\n  id: \"remeberme\"\n}, null, -1)\nconst _hoisted_11 = {\n  class: \"form-check-label\",\n  for: \"remeberme\"\n}\nconst _hoisted_12 = { class: \"col-12\" }\n\nimport { useCartStore } from \"~~/store/cart\";\nimport { useUserStore } from \"~~/store/user\";\n\nconst _sfc_main = {\n  __name: 'LoginForm',\n  setup(__props) {\n\nlet input = ref({\n  email: { data: \"john.customer@example.com\" },\n  password: { data: \"123456789\" },\n});\nlet formSubmitted = ref(false);\nvar breadcrumbs = { page: \"Log In\", links: [{ name: \"Log In\" }] };\n\nconst HandleLogin = async () => {\n  formSubmitted = true;\n  if (input.value.email.data != \"\" && input.value.password.data != \"\") {\n\n    let login = {\n      email: input.value.email.data,\n      password: input.value.password.data,\n      access_token: \"950|ymQRD5qdiWikHpWyio5NN1Zw1ot5bTYnUxgGrXJCf980d31d\"\n    }\n    let userData = {\n      isLoggedIn: true,\n      email: input?.value?.email?.data,\n      uat: login?.access_token,\n    };\n\n    localStorage.setItem(\"usersAccount\", JSON.stringify(userData));\n    useCookie(\"uat\").value = login?.access_token;\n\n    useUserStore().GetUserInfo();\n    useUserStore().SetUser({\n      isLoggedIn: true,\n      email: input.value.email.data,\n      uat: login?.access_token,\n    });\n    useCartStore().GetCartDataFromApi();\n    navigateTo(NavigationLinks.user_Dashboard);\n  }\n};\n\nreturn (_ctx, _cache) => {\n  const _component_WidgetsInputFieldsEmailField = _resolveComponent(\"WidgetsInputFieldsEmailField\")\n  const _component_WidgetsInputFieldsPasswordField = _resolveComponent(\"WidgetsInputFieldsPasswordField\")\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n  const _component_WidgetsButton = _resolveComponent(\"WidgetsButton\")\n\n  return (_openBlock(), _createElementBlock(\"form\", {\n    class: \"row g-4\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers($event => (HandleLogin()), [\"prevent\"]))\n  }, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_WidgetsInputFieldsEmailField, {\n          classes: \"form-control\",\n          modelValue: _unref(input).email,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => ((_unref(input).email) = $event)),\n          formSubmitted: _unref(formSubmitted),\n          id: \"email\",\n          placeholder: \"Email Address\"\n        }, null, 8, [\"modelValue\", \"formSubmitted\"]),\n        _createElementVNode(\"label\", _hoisted_3, _toDisplayString(_ctx.$t(\"Email Address\")), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createVNode(_component_WidgetsInputFieldsPasswordField, {\n          classes: \"form-control\",\n          modelValue: _unref(input).password,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((_unref(input).password) = $event)),\n          formSubmitted: _unref(formSubmitted),\n          id: \"password\",\n          placeholder: \"Password\"\n        }, null, 8, [\"modelValue\", \"formSubmitted\"]),\n        _createElementVNode(\"label\", _hoisted_6, _toDisplayString(_ctx.$t(\"Password\")), 1)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createElementVNode(\"div\", _hoisted_9, [\n          _hoisted_10,\n          _createElementVNode(\"label\", _hoisted_11, _toDisplayString(_ctx.$t(\"Remember me\")), 1)\n        ]),\n        _createVNode(_component_nuxt_link, {\n          to: \"/auth/forgot-password\",\n          class: \"forgot-password\"\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"Forgot Password ?\")), 1)\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_12, [\n      _createVNode(_component_WidgetsButton, { id: 'login_btn' }, {\n        default: _withCtx(() => [\n          _createTextVNode(_toDisplayString(_ctx.$t(\"Log In\")), 1)\n        ]),\n        _: 1\n      })\n    ])\n  ], 32))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056270633,
      "end": 1716056270638,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/CommonForm/LoginForm.vue\").then(r => r.default))",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056270638,
      "end": 1716056270638,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056270638,
      "end": 1716056270639,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Auth/CommonForm/LoginForm.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056270639,
      "end": 1716056270639,
      "order": "normal"
    }
  ]
}
