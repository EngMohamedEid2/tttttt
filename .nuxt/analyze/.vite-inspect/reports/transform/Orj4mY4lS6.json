{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Logo.vue?nuxt_component=async&nuxt_component_name=HeaderElementsLogo",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <nuxt-link to=\"/theme/osaka\" class=\"web-logo nav-logo\">\n    <div v-if=\"headerLogo\">\n      <img :src=\"headerLogo\" class=\"img-fluid\" alt=\"\" />\n    </div>\n    <div v-else>\n      <h2 :class=\"textClass\">\n        {{\n          SiteSettings?.values?.general?.site_title\n            ? SiteSettings?.values?.general?.site_title\n            : \"Logo\"\n        }}\n      </h2>\n    </div>\n  </nuxt-link>\n</template>\n\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\nlet props = defineProps({\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n});\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n</script>\n\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056270698,
      "end": 1716056270794,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056270794,
      "end": 1716056270794,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\"]\nconst _hoisted_3 = { key: 1 }\n\nimport { storeToRefs } from \"pinia\";\nimport { useSiteStore } from \"~~/store/site\";\n\n\nconst _sfc_main = {\n  __name: 'Logo',\n  props: {\n  themeOptions: Object,\n  textClass: { type: String, default: \"text-white f-w-600\" },\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\nlet headerLogo = ref(\"\");\nlet route = useRoute();\nlet router = useRouter();\nlet { SiteSettings } = storeToRefs(useSiteStore());\n\nfunction setLogo() {\n  if (route.path === \"/theme/paris\" || route.path === \"/theme/osaka\") {\n    headerLogo.value = \"/images/logo/1.png\";\n  } else if (route.path === \"/theme/tokyo\") {\n    headerLogo.value = \"/images/logo/2.png\";\n  } else if (route.path === \"/theme/rome\") {\n    headerLogo.value = \"/images/logo/3.png\";\n  } else if (route.path === \"/theme/madrid\") {\n    headerLogo.value = \"/images/logo/4.png\";\n  } else if (route.path === \"/theme/berlin\" || route.path === \"/theme/denver\") {\n    headerLogo.value = \"/images/logo/6.png\";\n  } else {\n    headerLogo.value = props?.themeOptions?.logo?.header_logo?.original_url;\n  }\n}\n\nonMounted(() => {\n  setLogo();\n  router.afterEach(() => {\n    setLogo();\n  });\n});\n\nreturn (_ctx, _cache) => {\n  const _component_nuxt_link = _resolveComponent(\"nuxt-link\")\n\n  return (_openBlock(), _createBlock(_component_nuxt_link, {\n    to: \"/theme/osaka\",\n    class: \"web-logo nav-logo\"\n  }, {\n    default: _withCtx(() => [\n      (_unref(headerLogo))\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n            _createElementVNode(\"img\", {\n              src: _unref(headerLogo),\n              class: \"img-fluid\",\n              alt: \"\"\n            }, null, 8, _hoisted_2)\n          ]))\n        : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n            _createElementVNode(\"h2\", {\n              class: _normalizeClass(__props.textClass)\n            }, _toDisplayString(_unref(SiteSettings)?.values?.general?.site_title\n            ? _unref(SiteSettings)?.values?.general?.site_title\n            : \"Logo\"), 3)\n          ]))\n    ]),\n    _: 1\n  }))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056270794,
      "end": 1716056270796,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Logo.vue\").then(r => r.default))",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056270796,
      "end": 1716056270796,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056270796,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/Elements/Logo.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056270797,
      "end": 1716056270797,
      "order": "normal"
    }
  ]
}
