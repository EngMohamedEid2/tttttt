{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/nuxt/dist/app/plugins/revive-payload.client.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { reactive, ref, shallowReactive, shallowRef } from \"vue\";\nimport destr from \"destr\";\nimport { definePayloadReviver, getNuxtClientPayload } from \"../composables/payload.js\";\nimport { createError } from \"../composables/error.js\";\nimport { defineNuxtPlugin, useNuxtApp } from \"../nuxt.js\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nconst revivers = {\n  NuxtError: (data) => createError(data),\n  EmptyShallowRef: (data) => shallowRef(data === \"_\" ? void 0 : data === \"0n\" ? BigInt(0) : destr(data)),\n  EmptyRef: (data) => ref(data === \"_\" ? void 0 : data === \"0n\" ? BigInt(0) : destr(data)),\n  ShallowRef: (data) => shallowRef(data),\n  ShallowReactive: (data) => shallowReactive(data),\n  Ref: (data) => ref(data),\n  Reactive: (data) => reactive(data)\n};\nif (componentIslands) {\n  revivers.Island = ({ key, params, result }) => {\n    const nuxtApp = useNuxtApp();\n    if (!nuxtApp.isHydrating) {\n      nuxtApp.payload.data[key] = nuxtApp.payload.data[key] || $fetch(`/__nuxt_island/${key}.json`, {\n        responseType: \"json\",\n        ...params ? { params } : {}\n      }).then((r) => {\n        nuxtApp.payload.data[key] = r;\n        return r;\n      });\n    }\n    return {\n      html: \"\",\n      state: {},\n      head: {\n        link: [],\n        style: []\n      },\n      ...result\n    };\n  };\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:revive-payload:client\",\n  order: -30,\n  async setup(nuxtApp) {\n    for (const reviver in revivers) {\n      definePayloadReviver(reviver, revivers[reviver]);\n    }\n    Object.assign(nuxtApp.payload, await nuxtApp.runWithContext(getNuxtClientPayload));\n    window.__NUXT__ = nuxtApp.payload;\n  }\n});\n",
      "start": 1716056261026,
      "end": 1716056261129,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056261129,
      "end": 1716056261129,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056261129,
      "end": 1716056261130,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056261130,
      "end": 1716056261130,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056261130,
      "end": 1716056261133,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056261133,
      "end": 1716056261133,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056261133,
      "end": 1716056261133,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056261134,
      "end": 1716056261134,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056261134,
      "end": 1716056261135,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056261135,
      "end": 1716056261135,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056261135,
      "end": 1716056261135,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056261135,
      "end": 1716056261135,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056261135,
      "end": 1716056261135,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "result": "/* _processed_nuxt_unctx_transform */\nimport { executeAsync as __executeAsync } from \"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/unctx/dist/index.mjs\";import { reactive, ref, shallowReactive, shallowRef } from \"vue\";\nimport destr from \"destr\";\nimport { definePayloadReviver, getNuxtClientPayload } from \"../composables/payload.js\";\nimport { createError } from \"../composables/error.js\";\nimport { defineNuxtPlugin, useNuxtApp } from \"../nuxt.js\";\nimport { componentIslands } from \"#build/nuxt.config.mjs\";\nconst revivers = {\n  NuxtError: (data) => createError(data),\n  EmptyShallowRef: (data) => shallowRef(data === \"_\" ? void 0 : data === \"0n\" ? BigInt(0) : destr(data)),\n  EmptyRef: (data) => ref(data === \"_\" ? void 0 : data === \"0n\" ? BigInt(0) : destr(data)),\n  ShallowRef: (data) => shallowRef(data),\n  ShallowReactive: (data) => shallowReactive(data),\n  Ref: (data) => ref(data),\n  Reactive: (data) => reactive(data)\n};\nif (componentIslands) {\n  revivers.Island = ({ key, params, result }) => {\n    const nuxtApp = useNuxtApp();\n    if (!nuxtApp.isHydrating) {\n      nuxtApp.payload.data[key] = nuxtApp.payload.data[key] || $fetch(`/__nuxt_island/${key}.json`, {\n        responseType: \"json\",\n        ...params ? { params } : {}\n      }).then((r) => {\n        nuxtApp.payload.data[key] = r;\n        return r;\n      });\n    }\n    return {\n      html: \"\",\n      state: {},\n      head: {\n        link: [],\n        style: []\n      },\n      ...result\n    };\n  };\n}\nexport default defineNuxtPlugin({\n  name: \"nuxt:revive-payload:client\",\n  order: -30,\n  async setup(nuxtApp) {let __temp, __restore;\n    for (const reviver in revivers) {\n      definePayloadReviver(reviver, revivers[reviver]);\n    }\n    Object.assign(nuxtApp.payload, (([__temp,__restore]=__executeAsync(()=>nuxtApp.runWithContext(getNuxtClientPayload))),__temp=await __temp,__restore(),__temp));\n    window.__NUXT__ = nuxtApp.payload;\n  }\n},1);\n",
      "start": 1716056261135,
      "end": 1716056261139,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056261139,
      "end": 1716056261139,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056261139,
      "end": 1716056261139,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056261139,
      "end": 1716056261139,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056261139,
      "end": 1716056261139,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056261139,
      "end": 1716056261140,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056261140,
      "end": 1716056261140,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056261140,
      "end": 1716056261140,
      "order": "normal"
    }
  ]
}
