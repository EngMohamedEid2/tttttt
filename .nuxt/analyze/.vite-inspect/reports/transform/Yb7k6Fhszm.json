{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/vue-image-zoomer/dist/vue-image-zoomer.es.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { nextTick, resolveDirective, openBlock, createElementBlock, Fragment, renderSlot, createCommentVNode, withDirectives, createElementVNode, normalizeClass, renderList, normalizeStyle, createVNode, Transition, withCtx, withModifiers, vShow } from \"vue\";\nvar vueImageZoomer_vue_vue_type_style_index_0_lang = /* @__PURE__ */ (() => \".VueHoverfade-enter-active,.VueHoverfade-leave-active{transition:opacity .5s}.VueHoverfade-enter,.VueHoverfade-leave-to{opacity:0}.vh--outer[v-cloak]{display:none}.vh--flex{display:flex}.vh--jc{justify-content:center}.vh--ai{align-items:center}.vh--rel{position:relative}.vh--abs{position:absolute}.vh--outer{display:inline-block;line-height:0;font-family:Arial,Helvetica,sans-serif;color:#fff}.vh--holder{overflow:hidden;touch-action:manipulation;cursor:zoom-in;align-items:flex-start}.vh--image{top:0;left:0;pointer-events:none}.vh--message{background-color:#000000a6;padding:8px 15px;border-radius:50px;text-align:center;line-height:initial}.vh--message-top{top:20px}.vh--message-bottom{bottom:20px}.vh--icon{transform:rotate(-45deg);display:block;font-size:20px;margin-right:5px;line-height:20px}.vh--close{line-height:0;background-color:#000000a6;border-radius:50px;font-size:23px;cursor:pointer;height:28px;width:28px}.vh--top-left{top:5px;left:5px}.vh--top-right{top:5px;right:5px}.vh--top-center{top:5px;left:50%;transform:translate(-50%)}.vh--bottom-left{bottom:5px;left:5px}.vh--bottom-right{bottom:5px;right:5px}.vh--bottom-center{bottom:5px;left:50%;transform:translate(-50%)}.vh--loading-o{top:0;left:0;width:100%;height:100%;background-color:#000000a6;pointer-events:none}.vh--loading{top:50%;left:50%;font-size:60px;line-height:60px;animation:vuehoverzoomspin 1s linear infinite;width:36px;height:70px}.vh--none{opacity:0}.vh--no-click img{pointer-events:none}@keyframes vuehoverzoomspin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}\\n\")();\nvar _export_sfc = (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n};\nconst _sfc_main = {\n  name: \"VueImageZoomer\",\n  emits: [\"onZoom\", \"offZoom\", \"regularLoaded\", \"zoomLoaded\", \"zoomLoading\"],\n  directives: {\n    clickOutside: {\n      mounted(el, binding) {\n        el.clickOutsideEvent = function(event) {\n          if (!(el == event.target || el.contains(event.target))) {\n            binding.value(event, el);\n          }\n        };\n        document.body.addEventListener(\"click\", el.clickOutsideEvent);\n      },\n      unmounted(el) {\n        document.body.removeEventListener(\"click\", el.clickOutsideEvent);\n      }\n    }\n  },\n  data() {\n    return {\n      touch: false,\n      zoomed: false,\n      x: 0,\n      y: 0,\n      touchPosition: 0,\n      origX: 0,\n      origY: 0,\n      offsetLeft: 0,\n      offsetTop: 0,\n      zoomWidth: 0,\n      zoomHeight: 0,\n      options: {\n        zoomAmount: 0,\n        zoom: false,\n        zoomWebp: false\n      },\n      loaded: false,\n      loading: false,\n      webp_supported: false,\n      cx: 0,\n      cy: 0,\n      showSlot: true\n    };\n  },\n  props: {\n    regular: String,\n    regularWebp: String,\n    zoom: String,\n    zoomWebp: String,\n    imgClass: {\n      type: String,\n      default: \"\"\n    },\n    alt: String,\n    zoomAmount: {\n      type: Number,\n      default: 0\n    },\n    clickZoom: Boolean,\n    hoverMessage: {\n      type: String,\n      default: '<span class=\"vh--icon\">&#9906;</span> Hover to zoom'\n    },\n    touchMessage: {\n      type: String,\n      default: '<span class=\"vh--icon\">&#9906;</span> Tap to zoom'\n    },\n    clickMessage: {\n      type: String,\n      default: '<span class=\"vh--icon\">&#9906;</span> Click to zoom'\n    },\n    closePos: {\n      type: String,\n      default: \"top-left\"\n    },\n    messagePos: {\n      type: String,\n      default: \"bottom\"\n    },\n    showMessage: {\n      type: Boolean,\n      default: true\n    },\n    showMessageTouch: {\n      type: Boolean,\n      default: true\n    },\n    breakpoints: Array,\n    touchZoomPos: {\n      type: Array,\n      default() {\n        return [0.5, 0.5];\n      }\n    },\n    lazyload: Boolean,\n    rightClick: Boolean\n  },\n  watch: {\n    propChanges() {\n      this.get_options();\n    }\n  },\n  computed: {\n    propChanges() {\n      return `${this.breakpoints}|${this.regular}|${this.regularWebp}|${this.zoom}|${this.zoomAmount}|${this.zoomWebp}|${this.lazyload}`;\n    }\n  },\n  mounted() {\n    this.check_webp_feature(\"lossy\", (feature, isSupported) => {\n      if (isSupported) {\n        this.webp_supported = true;\n      }\n    });\n    this.get_options();\n    if (\"ontouchstart\" in window || navigator.msMaxTouchPoints) {\n      this.touch = true;\n    }\n    this.touchLogic();\n  },\n  created() {\n    window.addEventListener(\"resize\", this.debounce(() => {\n      this.resize();\n    }, 500));\n  },\n  unmounted() {\n    window.removeEventListener(\"resize\", this.resize());\n  },\n  methods: {\n    async touchLogic() {\n      await nextTick();\n      let sx, sy;\n      this.$refs[\"vue-hover-zs\"].addEventListener(\"touchstart\", (e) => {\n        if (this.zoomed) {\n          if (e.cancelable) {\n            e.preventDefault();\n          }\n          let touchmovement = e.changedTouches[0];\n          sx = touchmovement.pageX - this.cx;\n          sy = touchmovement.pageY - this.cy;\n        }\n      });\n      this.$refs[\"vue-hover-zs\"].addEventListener(\"touchmove\", (e) => {\n        if (this.zoomed) {\n          let touchmovement = e.changedTouches[0];\n          this.x = touchmovement.pageX - sx;\n          this.y = touchmovement.pageY - sy;\n          if (touchmovement.pageX - sx <= this.origX - this.zoomWidth) {\n            this.x = this.origX - this.zoomWidth;\n          }\n          if (touchmovement.pageX - sx >= 0) {\n            this.x = -1;\n          }\n          if (touchmovement.pageY - sy <= this.origY - this.options.zoomAmount * this.origY) {\n            this.y = this.origY - this.options.zoomAmount * this.origY;\n          }\n          if (touchmovement.pageY - sy >= 0) {\n            this.y = -1;\n          }\n          this.touchPosition = \"translate3d(\" + this.x + \"px,\" + this.y + \"px,0)\";\n        }\n      });\n      this.$refs[\"vue-hover-zs\"].addEventListener(\"touchend\", (e) => {\n        if (this.zoomed) {\n          let touchmovement = e.changedTouches[0];\n          this.cx = touchmovement.pageX - sx;\n          this.cy = touchmovement.pageY - sy;\n        }\n      });\n    },\n    debounce(callback, wait) {\n      let timeout;\n      return (...args) => {\n        const context = this;\n        clearTimeout(timeout);\n        timeout = setTimeout(() => callback.apply(context, args), wait);\n      };\n    },\n    get_options() {\n      this.options.zoomAmount = this.zoomAmount;\n      this.options.zoom = this.zoom;\n      this.options.zoomWebp = this.zoomWebp;\n      if (!this.zoom) {\n        this.options.zoom = this.regular;\n        this.options.zoomAmount = 2;\n      }\n      if (!this.zoomWebp && this.regularWebp) {\n        this.options.zoomWebp = this.regularWebp;\n        this.options.zoomAmount = 2;\n      }\n      this.resize();\n    },\n    resize() {\n      this.zoomed = false;\n      this.loaded = false;\n    },\n    check_webp_feature(feature, callback) {\n      let kTestImages = {\n        lossy: \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\n      };\n      let img = new Image();\n      img.onload = () => {\n        let result = img.width > 0 && img.height > 0;\n        callback(feature, result);\n      };\n      img.onerror = () => {\n        callback(feature, false);\n      };\n      img.src = \"data:image/webp;base64,\" + kTestImages[feature];\n    },\n    loadImage(src, callback) {\n      const sprite = new Image();\n      sprite.onload = callback;\n      sprite.src = src;\n    },\n    loadZoom() {\n      this.offset();\n      if (this.options.zoomAmount != 0) {\n        this.zoomWidth = this.origX * this.options.zoomAmount;\n        this.zoomHeight = this.origY * this.options.zoomAmount;\n        if (this.touch) {\n          this.mobilePos();\n        }\n      }\n      if (!this.loaded) {\n        this.zoomLoad();\n      } else {\n        this.zoomed = true;\n        if (this.options.zoomAmount == 0) {\n          this.options.zoomAmount = this.zoomWidth / this.origX;\n        }\n      }\n    },\n    zoomLoad() {\n      if (!this.clickZoom || this.touch) {\n        this.loading = true;\n        this.$emit(\"zoomLoading\");\n      }\n      let zoomToLoad = this.options.zoom;\n      if (this.breakpoints) {\n        this.breakpoints.forEach((item) => {\n          if (window.innerWidth >= item.width) {\n            if (item.zoom) {\n              zoomToLoad = item.zoom;\n            } else {\n              zoomToLoad = item.regular;\n            }\n          }\n        });\n      }\n      if (this.webp_supported && this.options.zoomWebp) {\n        zoomToLoad = this.options.zoomWebp;\n        if (this.breakpoints) {\n          this.breakpoints.forEach((item) => {\n            if (window.innerWidth >= item.width) {\n              if (item.zoomWebp) {\n                zoomToLoad = item.zoomWebp;\n              } else {\n                zoomToLoad = item.regularWebp;\n              }\n            }\n          });\n        }\n      }\n      this.loadImage(zoomToLoad, (src) => {\n        if (this.options.zoomAmount == 0) {\n          this.zoomWidth = src.target.width;\n          this.zoomHeight = src.target.height;\n          this.options.zoomAmount = src.target.width / this.origX;\n        }\n        this.loaded = true;\n        this.loading = false;\n        this.$emit(\"zoomLoaded\");\n        if (!this.clickZoom || this.touch) {\n          this.zoomed = true;\n          this.mobilePos();\n        }\n      });\n    },\n    isZoom(type, action) {\n      if (action == \"hover\" && !this.clickZoom && !this.touch || action == \"click\" && (this.clickZoom || this.touch) || typeof type === \"object\") {\n        this.zoomed = false;\n        if (type == true) {\n          this.loadZoom();\n          this.$emit(\"onZoom\");\n        } else {\n          this.$emit(\"offZoom\");\n        }\n      }\n    },\n    mobilePos() {\n      let X = (this.zoomWidth - this.origX) * this.touchZoomPos[0];\n      let Y = (this.zoomHeight - this.origY) * this.touchZoomPos[1];\n      if (this.touchZoomPos[0] > 1 || this.touchZoomPos[0] < 0 || this.touchZoomPos[1] > 1 || this.touchZoomPos[1] < 0) {\n        X = 0;\n        Y = 0;\n      }\n      this.cx = -X;\n      this.cy = -Y;\n      this.x = -X;\n      this.y = -Y;\n      this.touchPosition = \"translate3d(-\" + X + \"px,-\" + Y + \"px,0)\";\n    },\n    offset() {\n      this.origX = parseFloat(this.$refs[\"vue-hover-zs\"].offsetWidth);\n      this.origY = parseFloat(this.$refs[\"vue-hover-zs\"].offsetHeight);\n    },\n    mousePos(e) {\n      this.offsetLeft = window.pageXOffset + this.$refs[\"vue-hover-zs\"].getBoundingClientRect().left;\n      this.offsetTop = window.pageYOffset + this.$refs[\"vue-hover-zs\"].getBoundingClientRect().top;\n      if (!this.touch && !this.loading) {\n        if (!this.loaded) {\n          this.offset();\n          this.zoomLoad();\n        } else {\n          this.x = (e.pageX - this.offsetLeft) * (this.options.zoomAmount - 1);\n          this.y = (e.pageY - this.offsetTop) * (this.options.zoomAmount - 1);\n        }\n      }\n    }\n  }\n};\nconst _hoisted_1 = { class: \"vh--outer vh--rel\" };\nconst _hoisted_2 = [\"srcset\", \"media\"];\nconst _hoisted_3 = [\"srcset\", \"media\"];\nconst _hoisted_4 = [\"srcset\"];\nconst _hoisted_5 = [\"loading\", \"src\", \"alt\"];\nconst _hoisted_6 = { key: 0 };\nconst _hoisted_7 = [\"srcset\", \"media\"];\nconst _hoisted_8 = [\"srcset\", \"media\"];\nconst _hoisted_9 = [\"srcset\", \"media\"];\nconst _hoisted_10 = [\"srcset\", \"media\"];\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = [\"innerHTML\"];\nconst _hoisted_15 = [\"innerHTML\"];\nconst _hoisted_16 = [\"innerHTML\"];\nconst _hoisted_17 = {\n  key: 1,\n  class: \"vh--loading-o vh--abs vh--flex vh--jc vh--ai\"\n};\nconst _hoisted_18 = /* @__PURE__ */ createElementVNode(\"div\", {\n  class: \"vh--loading\",\n  innerHTML: \"\\u25E0\"\n}, null, -1);\nconst _hoisted_19 = [\n  _hoisted_18\n];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n  return openBlock(), createElementBlock(Fragment, null, [\n    $data.showSlot && !$props.lazyload ? renderSlot(_ctx.$slots, \"default\", { key: 0 }) : createCommentVNode(\"\", true),\n    withDirectives((openBlock(), createElementBlock(\"div\", _hoisted_1, [\n      createElementVNode(\"div\", {\n        class: normalizeClass([\"vh--holder vh--rel vh--flex vh--jc\", { \"vh--no-click\": !$props.rightClick }]),\n        onMouseenter: _cache[1] || (_cache[1] = ($event) => $options.isZoom(true, \"hover\")),\n        onMouseleave: _cache[2] || (_cache[2] = ($event) => $options.isZoom(false, \"hover\")),\n        onMousemove: _cache[3] || (_cache[3] = (...args) => $options.mousePos && $options.mousePos(...args)),\n        ref: \"vue-hover-zs\",\n        onClick: _cache[4] || (_cache[4] = ($event) => $options.isZoom(!$data.zoomed, \"click\"))\n      }, [\n        createElementVNode(\"picture\", {\n          class: normalizeClass({ \"vh--none\": $data.zoomed })\n        }, [\n          (openBlock(true), createElementBlock(Fragment, null, renderList($props.breakpoints, (breakpoint) => {\n            return openBlock(), createElementBlock(Fragment, {\n              key: breakpoint.width\n            }, [\n              breakpoint.regularWebp ? (openBlock(), createElementBlock(\"source\", {\n                key: 0,\n                srcset: breakpoint.regularWebp,\n                type: \"image/webp\",\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_2)) : createCommentVNode(\"\", true),\n              breakpoint.regular ? (openBlock(), createElementBlock(\"source\", {\n                key: 1,\n                srcset: breakpoint.regular,\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_3)) : createCommentVNode(\"\", true)\n            ], 64);\n          }), 128)),\n          $props.regularWebp ? (openBlock(), createElementBlock(\"source\", {\n            key: 0,\n            srcset: $props.regularWebp,\n            type: \"image/webp\"\n          }, null, 8, _hoisted_4)) : createCommentVNode(\"\", true),\n          createElementVNode(\"img\", {\n            loading: $props.lazyload ? \"lazy\" : \"eager\",\n            src: $props.regular,\n            class: normalizeClass($props.imgClass),\n            alt: $props.alt,\n            onLoad: _cache[0] || (_cache[0] = ($event) => (_ctx.$emit(\"regularLoaded\"), $data.showSlot = false))\n          }, null, 42, _hoisted_5)\n        ], 2),\n        $data.zoomed ? (openBlock(), createElementBlock(\"picture\", _hoisted_6, [\n          (openBlock(true), createElementBlock(Fragment, null, renderList($props.breakpoints, (breakpoint) => {\n            return openBlock(), createElementBlock(Fragment, {\n              key: breakpoint.width\n            }, [\n              breakpoint.zoomWebp ? (openBlock(), createElementBlock(\"source\", {\n                key: 0,\n                srcset: breakpoint.zoomWebp,\n                type: \"image/webp\",\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_7)) : breakpoint.regularWebp ? (openBlock(), createElementBlock(\"source\", {\n                key: 1,\n                srcset: breakpoint.regularWebp,\n                type: \"image/webp\",\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_8)) : createCommentVNode(\"\", true),\n              breakpoint.zoom ? (openBlock(), createElementBlock(\"source\", {\n                key: 2,\n                srcset: breakpoint.zoom,\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_9)) : breakpoint.regular ? (openBlock(), createElementBlock(\"source\", {\n                key: 3,\n                srcset: breakpoint.regular,\n                media: \"(min-width:\" + breakpoint.width + \"px)\"\n              }, null, 8, _hoisted_10)) : createCommentVNode(\"\", true)\n            ], 64);\n          }), 128)),\n          $data.options.zoomWebp ? (openBlock(), createElementBlock(\"source\", {\n            key: 0,\n            src: $data.options.zoomWebp,\n            type: \"image/webp\"\n          }, null, 8, _hoisted_11)) : createCommentVNode(\"\", true),\n          !$data.touch ? (openBlock(), createElementBlock(\"img\", {\n            key: 1,\n            src: $data.options.zoom,\n            class: \"vh--image vh--abs\",\n            style: normalizeStyle({ width: $data.zoomWidth + \"px\", transform: \"translate(-\" + $data.x + \"px,-\" + $data.y + \"px)\" })\n          }, null, 12, _hoisted_12)) : (openBlock(), createElementBlock(\"img\", {\n            key: 2,\n            src: $data.options.zoom,\n            class: \"vh--image vh--abs\",\n            style: normalizeStyle(\"width:\" + $data.zoomWidth + \"px;transform:\" + $data.touchPosition)\n          }, null, 12, _hoisted_13))\n        ])) : createCommentVNode(\"\", true),\n        createVNode(Transition, { name: \"VueHoverfade\" }, {\n          default: withCtx(() => [\n            !$data.zoomed && !$data.loading && !$props.clickZoom && !$data.touch && $props.showMessage ? (openBlock(), createElementBlock(\"div\", {\n              key: 0,\n              class: normalizeClass([\"vh--message vh--abs vh--flex vh--jc vh--ai\", \"vh--message-\" + $props.messagePos]),\n              innerHTML: $props.hoverMessage\n            }, null, 10, _hoisted_14)) : !$data.zoomed && !$data.loading && !$data.touch && $props.showMessage ? (openBlock(), createElementBlock(\"div\", {\n              key: 1,\n              class: normalizeClass([\"vh--message vh--abs vh--flex vh--jc vh--ai\", \"vh--message-\" + $props.messagePos]),\n              innerHTML: $props.clickMessage\n            }, null, 10, _hoisted_15)) : !$data.zoomed && !$data.loading && $data.touch && $props.showMessageTouch ? (openBlock(), createElementBlock(\"div\", {\n              key: 2,\n              class: normalizeClass([\"vh--message vh--abs vh--flex vh--jc vh--ai\", \"vh--message-\" + $props.messagePos]),\n              innerHTML: $props.touchMessage\n            }, null, 10, _hoisted_16)) : createCommentVNode(\"\", true)\n          ]),\n          _: 1\n        })\n      ], 34),\n      createVNode(Transition, { name: \"VueHoverfade\" }, {\n        default: withCtx(() => [\n          $data.touch && $data.zoomed && $data.loaded ? (openBlock(), createElementBlock(\"div\", {\n            key: 0,\n            class: normalizeClass([\"vh--close vh--abs vh--flex vh--jc vh--ai\", \"vh--\" + $props.closePos]),\n            onClick: _cache[5] || (_cache[5] = withModifiers(($event) => $data.zoomed = false, [\"stop\"])),\n            innerHTML: \"\\xD7\"\n          }, null, 2)) : $data.loading ? (openBlock(), createElementBlock(\"div\", _hoisted_17, _hoisted_19)) : createCommentVNode(\"\", true)\n        ]),\n        _: 1\n      })\n    ])), [\n      [_directive_click_outside, $options.isZoom],\n      [vShow, !$data.showSlot || $props.lazyload]\n    ])\n  ], 64);\n}\nvar VueImageZoomer = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nvar index = {\n  install: (app, options) => {\n    app.component(\"VueImageZoomer\", VueImageZoomer);\n  }\n};\nexport { VueImageZoomer, index as default };\n",
      "start": 1716056285584,
      "end": 1716056285931,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056285931,
      "end": 1716056285931,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056285931,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056285932,
      "end": 1716056285932,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056285932,
      "end": 1716056285935,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056285935,
      "end": 1716056285935,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056285935,
      "end": 1716056285935,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056285935,
      "end": 1716056285935,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056285935,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056285936,
      "end": 1716056285936,
      "order": "normal"
    }
  ]
}
