{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/InputFields/NumberField.vue?nuxt_component=async&nuxt_component_name=WidgetsInputFieldsNumberField",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n  <input class=\"number\" :type=\"type\" :class=\"classes\" :id=\"id\" :value=\"modelValue?.data\"\n    @input=\"updated($event.target.value)\" :placeholder=\"placeholder || 'Enter Value'\">\n  <p class=\"text-danger pt-2 m-0\" v-if=\"modelValue?.errorMessage\">{{ $t(modelValue?.errorMessage) }}</p>\n</div>\n</template>\n\n<script setup>\nimport { validateNonEmptyFields } from \"@/utils/validators/inputFieldValidators\";\nlet props = defineProps({\n  type: String,\n  classes: String,\n  id: String,\n  placeholder: String,\n  modelValue: Object,\n  errorMessage: String,\n  formSubmitted: Boolean\n})\nconst emit = defineEmits([\"update:modelValue\"]);\nlet validStatus = ref({})\nwatch(() => props.formSubmitted, () => { props.formSubmitted && updated(props.modelValue?.data) })\nfunction updated(inputValue) {\n  validStatus.value = validateNonEmptyFields({ value: String(inputValue), minLength: props.minLength, errorMessage: props.errorMessage })\n  emit(\"update:modelValue\", {\n    data: props.inputType == 'number' ? Number(inputValue) : inputValue,\n    errorMessage: validStatus.value.errorMessage,\n  });\n}\n</script>\n\n<style scoped></style>",
      "start": 1716056285042,
      "end": 1716056285193,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056285193,
      "end": 1716056285193,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"type\", \"id\", \"value\", \"placeholder\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-danger pt-2 m-0\"\n}\n\nimport { validateNonEmptyFields } from \"@/utils/validators/inputFieldValidators\";\n\nconst _sfc_main = {\n  __name: 'NumberField',\n  props: {\n  type: String,\n  classes: String,\n  id: String,\n  placeholder: String,\n  modelValue: Object,\n  errorMessage: String,\n  formSubmitted: Boolean\n},\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\nconst emit = __emit;\nlet validStatus = ref({})\nwatch(() => props.formSubmitted, () => { props.formSubmitted && updated(props.modelValue?.data) })\nfunction updated(inputValue) {\n  validStatus.value = validateNonEmptyFields({ value: String(inputValue), minLength: props.minLength, errorMessage: props.errorMessage })\n  emit(\"update:modelValue\", {\n    data: props.inputType == 'number' ? Number(inputValue) : inputValue,\n    errorMessage: validStatus.value.errorMessage,\n  });\n}\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"input\", {\n      class: _normalizeClass([\"number\", __props.classes]),\n      type: __props.type,\n      id: __props.id,\n      value: __props.modelValue?.data,\n      onInput: _cache[0] || (_cache[0] = $event => (updated($event.target.value))),\n      placeholder: __props.placeholder || 'Enter Value'\n    }, null, 42, _hoisted_1),\n    (__props.modelValue?.errorMessage)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(_ctx.$t(__props.modelValue?.errorMessage)), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056285193,
      "end": 1716056285196,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/InputFields/NumberField.vue\").then(r => r.default))",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056285196,
      "end": 1716056285196,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/InputFields/NumberField.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056285197,
      "end": 1716056285197,
      "order": "normal"
    }
  ]
}
