{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/pages/seller/stores/index.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <WidgetsBreadcrumb  :breadcrumbs=\"breadcrumbs\"/>\n    <section class=\"seller-grid-section section-b-space\">\n        <ShopSellerStoreBasic :stores=\"store?.data\" :skeletonItems=\"skeletonItems\" :skeletonLoader=\"skeletonLoader\"\n            v-if=\"layout === 'basic_store'\"></ShopSellerStoreBasic>\n        <ShopSellerStoreClassic :stores=\"store?.data\" :skeletonItems=\"skeletonItems\" :skeletonLoader=\"skeletonLoader\"\n            v-if=\"layout === 'classic_store'\"></ShopSellerStoreClassic>\n    </section>\n    <div class=\"custome-pagination section-b-space\" v-if=\"store?.data?.length\">\n        <WidgetsPagination :Data=\"store\" @change-page=\"(toPage) => ChangePage({ toPage })\" />\n    </div>\n</div>\n</template>\n\n<script setup>\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = await HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false });\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n</script>\n\n<style lang=\"scss\" scoped></style>",
      "start": 1716056288800,
      "end": 1716056288908,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056288908,
      "end": 1716056288908,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056288908,
      "end": 1716056288909,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056288909,
      "end": 1716056288909,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056288909,
      "end": 1716056288909,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056288909,
      "end": 1716056288909,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056288909,
      "end": 1716056288909,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056288909,
      "end": 1716056288909,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"seller-grid-section section-b-space\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custome-pagination section-b-space\"\n}\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _cache) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerStoreBasic = _resolveComponent(\"ShopSellerStoreBasic\")\n  const _component_ShopSellerStoreClassic = _resolveComponent(\"ShopSellerStoreClassic\")\n  const _component_WidgetsPagination = _resolveComponent(\"WidgetsPagination\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, 8, [\"breadcrumbs\"]),\n    _createElementVNode(\"section\", _hoisted_1, [\n      (_unref(layout) === 'basic_store')\n        ? (_openBlock(), _createBlock(_component_ShopSellerStoreBasic, {\n            key: 0,\n            stores: _unref(store)?.data,\n            skeletonItems: _unref(skeletonItems),\n            skeletonLoader: _unref(skeletonLoader)\n          }, null, 8, [\"stores\", \"skeletonItems\", \"skeletonLoader\"]))\n        : _createCommentVNode(\"\", true),\n      (_unref(layout) === 'classic_store')\n        ? (_openBlock(), _createBlock(_component_ShopSellerStoreClassic, {\n            key: 1,\n            stores: _unref(store)?.data,\n            skeletonItems: _unref(skeletonItems),\n            skeletonLoader: _unref(skeletonLoader)\n          }, null, 8, [\"stores\", \"skeletonItems\", \"skeletonLoader\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (_unref(store)?.data?.length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createVNode(_component_WidgetsPagination, {\n            Data: _unref(store),\n            onChangePage: _cache[0] || (_cache[0] = (toPage) => ChangePage({ toPage }))\n          }, null, 8, [\"Data\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056288909,
      "end": 1716056288912,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056288912,
      "end": 1716056288912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056288912,
      "end": 1716056288912,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056288912,
      "end": 1716056288912,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056288912,
      "end": 1716056288912,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056288912,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056288913,
      "end": 1716056288913,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { useRoute } from '#app/composables/router';\nimport { ref, watch, onMounted } from 'vue';\nimport { HandleRequest } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/composables/HandleRequest.js';\nimport { withAsyncContext as _withAsyncContext } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"seller-grid-section section-b-space\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"custome-pagination section-b-space\"\n}\n\nimport { storeToRefs } from 'pinia';\nimport { useDataStore } from '@/store/data';\n\nconst _sfc_main = {\n  __name: 'index',\n  async setup(__props) {\n\nlet __temp, __restore\n\nlet { ThemeOptions } = storeToRefs(useDataStore())\nvar breadcrumbs = { page: 'Sellers Store', links: [{ name: 'Sellers Store' }] }\n\nlet router = useRoute()\nlet skeletonLoader = ref(true)\nlet skeletonItems = Array.from({ length: 9 }, (_, index) => index);\nlet layout = ref(router?.query.layout);\nlet StoreParams = ref({ paginate: 9, page: 1, search: '' });\n\nlet { data: store } = (\n  ([__temp,__restore] = _withAsyncContext(() => HandleRequest('store', { key: 'GetStore', params: StoreParams.value }, { initialCache: false }))),\n  __temp = await __temp,\n  __restore(),\n  __temp\n);\n\nwatch(() => router?.query.layout, () => {\n    if (router?.query.layout) {\n        layout.value = router?.query.layout;\n    } else {\n        layout.value = ThemeOptions.value.options.seller && ThemeOptions.value.options.seller.store_layout ? ThemeOptions.value.options.seller.store_layout : 'basic_store';\n    }\n}, { deep: true })\n\nconst ChangePage = ({ toPage }) => {\n    StoreParams.value.page = toPage;\n}\n\nonMounted(() => {\n    setTimeout(() => {\n        skeletonLoader.value = false\n    }, 2000);\n})\n\nreturn (_ctx, _cache) => {\n  const _component_WidgetsBreadcrumb = _resolveComponent(\"WidgetsBreadcrumb\")\n  const _component_ShopSellerStoreBasic = _resolveComponent(\"ShopSellerStoreBasic\")\n  const _component_ShopSellerStoreClassic = _resolveComponent(\"ShopSellerStoreClassic\")\n  const _component_WidgetsPagination = _resolveComponent(\"WidgetsPagination\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createVNode(_component_WidgetsBreadcrumb, { breadcrumbs: _unref(breadcrumbs) }, null, 8, [\"breadcrumbs\"]),\n    _createElementVNode(\"section\", _hoisted_1, [\n      (_unref(layout) === 'basic_store')\n        ? (_openBlock(), _createBlock(_component_ShopSellerStoreBasic, {\n            key: 0,\n            stores: _unref(store)?.data,\n            skeletonItems: _unref(skeletonItems),\n            skeletonLoader: _unref(skeletonLoader)\n          }, null, 8, [\"stores\", \"skeletonItems\", \"skeletonLoader\"]))\n        : _createCommentVNode(\"\", true),\n      (_unref(layout) === 'classic_store')\n        ? (_openBlock(), _createBlock(_component_ShopSellerStoreClassic, {\n            key: 1,\n            stores: _unref(store)?.data,\n            skeletonItems: _unref(skeletonItems),\n            skeletonLoader: _unref(skeletonLoader)\n          }, null, 8, [\"stores\", \"skeletonItems\", \"skeletonLoader\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (_unref(store)?.data?.length)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n          _createVNode(_component_WidgetsPagination, {\n            Data: _unref(store),\n            onChangePage: _cache[0] || (_cache[0] = (toPage) => ChangePage({ toPage }))\n          }, null, 8, [\"Data\"])\n        ]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056288913,
      "end": 1716056288915,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056288915,
      "end": 1716056288915,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1716056288915,
      "end": 1716056288916,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056288916,
      "end": 1716056288916,
      "order": "normal"
    }
  ]
}
