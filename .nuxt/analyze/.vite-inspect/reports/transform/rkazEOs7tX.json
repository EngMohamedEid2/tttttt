{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Widgets/InputFields/PasswordField.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n<div>\n    <input type=\"password\" :class=\"classes\" :placeholder=\"$t(placeholder || 'Enter Value')\"\n        @input=\"Updated($event.target.value)\" :value=\"modelValue?.data\">\n    <p class=\"text-danger pt-2 m-0\" v-if=\"modelValue?.errorMessage\">{{ $t(modelValue?.errorMessage) }} </p>\n</div>\n</template>\n\n<script setup >\nimport { validatePassword } from \"@/utils/validators/inputFieldValidators\";\nlet props = defineProps({\n    classes: String,\n    modelValue: Object,\n    placeholder: String,\n    id: String,\n    minLength: Number,\n    errorMessage: String,\n    formSubmitted: Boolean,\n})\nlet validStatus = ref({})\nconst emit = defineEmits([\"update:modelValue\"]);\nwatch(() => props.formSubmitted, () => { props.formSubmitted && Updated(props.modelValue?.data) })\nfunction Updated(inputValue) {\n    validStatus.value = validatePassword({ value: inputValue, minLength: 8, errorMessage: props.errorMessage })\n    emit('update:modelValue', { data: inputValue, errorMessage: validStatus.value.errorMessage })\n}\n</script>\n\n<style scoped></style>",
      "start": 1716056288228,
      "end": 1716056288358,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056288358,
      "end": 1716056288358,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056288358,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"placeholder\", \"value\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-danger pt-2 m-0\"\n}\n\nimport { validatePassword } from \"@/utils/validators/inputFieldValidators\";\n\nconst _sfc_main = {\n  __name: 'PasswordField',\n  props: {\n    classes: String,\n    modelValue: Object,\n    placeholder: String,\n    id: String,\n    minLength: Number,\n    errorMessage: String,\n    formSubmitted: Boolean,\n},\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\nlet validStatus = ref({})\nconst emit = __emit;\nwatch(() => props.formSubmitted, () => { props.formSubmitted && Updated(props.modelValue?.data) })\nfunction Updated(inputValue) {\n    validStatus.value = validatePassword({ value: inputValue, minLength: 8, errorMessage: props.errorMessage })\n    emit('update:modelValue', { data: inputValue, errorMessage: validStatus.value.errorMessage })\n}\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"input\", {\n      type: \"password\",\n      class: _normalizeClass(__props.classes),\n      placeholder: _ctx.$t(__props.placeholder || 'Enter Value'),\n      onInput: _cache[0] || (_cache[0] = $event => (Updated($event.target.value))),\n      value: __props.modelValue?.data\n    }, null, 42, _hoisted_1),\n    (__props.modelValue?.errorMessage)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(_ctx.$t(__props.modelValue?.errorMessage)), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056288359,
      "end": 1716056288359,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056288360,
      "end": 1716056288360,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { ref, watch } from 'vue';\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"placeholder\", \"value\"]\nconst _hoisted_2 = {\n  key: 0,\n  class: \"text-danger pt-2 m-0\"\n}\n\nimport { validatePassword } from \"@/utils/validators/inputFieldValidators\";\n\nconst _sfc_main = {\n  __name: 'PasswordField',\n  props: {\n    classes: String,\n    modelValue: Object,\n    placeholder: String,\n    id: String,\n    minLength: Number,\n    errorMessage: String,\n    formSubmitted: Boolean,\n},\n  emits: [\"update:modelValue\"],\n  setup(__props, { emit: __emit }) {\n\nlet props = __props\nlet validStatus = ref({})\nconst emit = __emit;\nwatch(() => props.formSubmitted, () => { props.formSubmitted && Updated(props.modelValue?.data) })\nfunction Updated(inputValue) {\n    validStatus.value = validatePassword({ value: inputValue, minLength: 8, errorMessage: props.errorMessage })\n    emit('update:modelValue', { data: inputValue, errorMessage: validStatus.value.errorMessage })\n}\n\nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"input\", {\n      type: \"password\",\n      class: _normalizeClass(__props.classes),\n      placeholder: _ctx.$t(__props.placeholder || 'Enter Value'),\n      onInput: _cache[0] || (_cache[0] = $event => (Updated($event.target.value))),\n      value: __props.modelValue?.data\n    }, null, 42, _hoisted_1),\n    (__props.modelValue?.errorMessage)\n      ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString(_ctx.$t(__props.modelValue?.errorMessage)), 1))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056288360,
      "end": 1716056288361,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056288361,
      "end": 1716056288361,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056288361,
      "end": 1716056288361,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056288361,
      "end": 1716056288361,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056288361,
      "end": 1716056288361,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056288361,
      "end": 1716056288362,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056288362,
      "end": 1716056288362,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056288362,
      "end": 1716056288362,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056288362,
      "end": 1716056288362,
      "order": "normal"
    }
  ]
}
