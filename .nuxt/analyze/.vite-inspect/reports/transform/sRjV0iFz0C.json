{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/store/user.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { useCartStore } from \"./cart\";\nexport const useUserStore = defineStore(\"user-store\", () => {\n  var User = ref({\n    isLoggedIn: false\n  }), UserInfo = ref({});\n  \n  const setDefaultUser = () => {\n    if(process.client){\n    if(localStorage.getItem('usersAccount')){\n      User.value = JSON.parse(localStorage.getItem('usersAccount'))\n    }\n    else{\n      User.value.isLoggedIn = false\n    }\n   }\n  }\n  const SetUser = (user) => {\n    User.value = user;\n  }\n  const SetUserInfo = ({ user }) => {\n    UserInfo.value = user\n  }\n\n  const UpdateUserInfo = async () => {\n    let { data: user, error } = await useFetch('self', {\n    key: `GetSelfInfo`,\n    })\n    if (!error.value) {\n      UserInfo.value = user.value\n    }\n  }\n\n  const LogoutUser = async () => {\n      useCookie('uat').value = null;\n      UserInfo.value = {};\n      User.value.isLoggedIn = false;\n      localStorage.removeItem('usersAccount')\n      navigateTo('/')\n  \n  }\n\n  const GetUserInfo = async () => {\n    await UpdateUserInfo();\n  };\n\n  return {\n    User,\n    UserInfo,\n    SetUser,\n    SetUserInfo,\n    LogoutUser,\n    UpdateUserInfo,\n    GetUserInfo,\n    setDefaultUser\n  };\n});",
      "start": 1716056289411,
      "end": 1716056289858,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056289858,
      "end": 1716056289858,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { useCartStore } from \"./cart\";\nexport const useUserStore = defineStore(\"user-store\", () => {\n  var User = ref({\n    isLoggedIn: false\n  }), UserInfo = ref({});\n  const setDefaultUser = () => {\n    if (true) {\n      if (localStorage.getItem(\"usersAccount\")) {\n        User.value = JSON.parse(localStorage.getItem(\"usersAccount\"));\n      } else {\n        User.value.isLoggedIn = false;\n      }\n    }\n  };\n  const SetUser = (user) => {\n    User.value = user;\n  };\n  const SetUserInfo = ({ user }) => {\n    UserInfo.value = user;\n  };\n  const UpdateUserInfo = async () => {\n    let { data: user, error } = await useFetch(\"self\", {\n      key: `GetSelfInfo`\n    });\n    if (!error.value) {\n      UserInfo.value = user.value;\n    }\n  };\n  const LogoutUser = async () => {\n    useCookie(\"uat\").value = null;\n    UserInfo.value = {};\n    User.value.isLoggedIn = false;\n    localStorage.removeItem(\"usersAccount\");\n    navigateTo(\"/\");\n  };\n  const GetUserInfo = async () => {\n    await UpdateUserInfo();\n  };\n  return {\n    User,\n    UserInfo,\n    SetUser,\n    SetUserInfo,\n    LogoutUser,\n    UpdateUserInfo,\n    GetUserInfo,\n    setDefaultUser\n  };\n});\n",
      "start": 1716056289858,
      "end": 1716056290095,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "result": "import { useCartStore } from \"./cart\";\nexport const useUserStore = defineStore(\"user-store\", () => {\n  var User = ref({\n    isLoggedIn: false\n  }), UserInfo = ref({});\n  const setDefaultUser = () => {\n    if (true) {\n      if (localStorage.getItem(\"usersAccount\")) {\n        User.value = JSON.parse(localStorage.getItem(\"usersAccount\"));\n      } else {\n        User.value.isLoggedIn = false;\n      }\n    }\n  };\n  const SetUser = (user) => {\n    User.value = user;\n  };\n  const SetUserInfo = ({ user }) => {\n    UserInfo.value = user;\n  };\n  const UpdateUserInfo = async () => {\n    let { data: user, error } = await useFetch(\"self\", {\n      key: `GetSelfInfo`\n    }, '$vpSqNedazv');\n    if (!error.value) {\n      UserInfo.value = user.value;\n    }\n  };\n  const LogoutUser = async () => {\n    useCookie(\"uat\").value = null;\n    UserInfo.value = {};\n    User.value.isLoggedIn = false;\n    localStorage.removeItem(\"usersAccount\");\n    navigateTo(\"/\");\n  };\n  const GetUserInfo = async () => {\n    await UpdateUserInfo();\n  };\n  return {\n    User,\n    UserInfo,\n    SetUser,\n    SetUserInfo,\n    LogoutUser,\n    UpdateUserInfo,\n    GetUserInfo,\n    setDefaultUser\n  };\n});\n",
      "start": 1716056290095,
      "end": 1716056290095,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineStore } from 'C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/node_modules/@pinia/nuxt/dist/runtime/composables';\nimport { ref } from 'vue';\nimport { useFetch } from '#app/composables/fetch';\nimport { useCookie } from '#app/composables/cookie';\nimport { navigateTo } from '#app/composables/router';\nimport { useCartStore } from \"./cart\";\nexport const useUserStore = defineStore(\"user-store\", () => {\n  var User = ref({\n    isLoggedIn: false\n  }), UserInfo = ref({});\n  const setDefaultUser = () => {\n    if (true) {\n      if (localStorage.getItem(\"usersAccount\")) {\n        User.value = JSON.parse(localStorage.getItem(\"usersAccount\"));\n      } else {\n        User.value.isLoggedIn = false;\n      }\n    }\n  };\n  const SetUser = (user) => {\n    User.value = user;\n  };\n  const SetUserInfo = ({ user }) => {\n    UserInfo.value = user;\n  };\n  const UpdateUserInfo = async () => {\n    let { data: user, error } = await useFetch(\"self\", {\n      key: `GetSelfInfo`\n    }, '$vpSqNedazv');\n    if (!error.value) {\n      UserInfo.value = user.value;\n    }\n  };\n  const LogoutUser = async () => {\n    useCookie(\"uat\").value = null;\n    UserInfo.value = {};\n    User.value.isLoggedIn = false;\n    localStorage.removeItem(\"usersAccount\");\n    navigateTo(\"/\");\n  };\n  const GetUserInfo = async () => {\n    await UpdateUserInfo();\n  };\n  return {\n    User,\n    UserInfo,\n    SetUser,\n    SetUserInfo,\n    LogoutUser,\n    UpdateUserInfo,\n    GetUserInfo,\n    setDefaultUser\n  };\n});\n",
      "start": 1716056290095,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1716056290096,
      "end": 1716056290096,
      "order": "normal"
    }
  ]
}
