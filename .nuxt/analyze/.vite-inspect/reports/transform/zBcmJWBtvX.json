{
  "resolvedId": "C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/index.vue?nuxt_component=async&nuxt_component_name=Header",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\n  <div>\n  <HeaderBasicHeader\n    v-if=\"style == 'basic_header'\"\n    :sticky=\"sticky\"\n    :logo=\"logo\"\n    :themeOptions=\"ThemeOptions?.options\"\n  />\n  <HeaderClassicHeader\n    v-if=\"style == 'classic_header'\"\n    :themeOptions=\"ThemeOptions?.options\"\n    :sticky=\"sticky\"\n    :logo=\"logo\"\n  />\n  <HeaderStandardHeader\n    v-if=\"style == 'standard_header'\"\n    :themeOptions=\"ThemeOptions?.options\"\n    :sticky=\"sticky\"\n    :logo=\"logo\"\n  />\n  <HeaderMinimalHeader\n    v-if=\"style == 'minimal_header'\"\n    :themeOptions=\"ThemeOptions?.options\"\n    :sticky=\"sticky\"\n    :logo=\"logo\"\n  />\n  </div>\n</template>\n\n<script setup>\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\nimport { HandleRequest } from \"~~/composables/HandleRequest\";\n\nlet props = defineProps({\n  logo: String,\n});\n\nlet style = ref(\"basic_header\");\nlet sticky = ref(true);\nlet route = useRoute();\nlet router = useRouter();\n\nlet { ThemeOptions } = storeToRefs(useDataStore());\n\nfunction setHeader() {\n  if (route.path === \"/theme/rome\") {\n    style.value = \"standard_header\";\n  } else if (route.path === \"/theme/madrid\") {\n    style.value = \"classic_header\";\n  } else if (route.path === \"/theme/berlin\") {\n    style.value = \"minimal_header\";\n  } else if (route.path === \"/theme/denver\") {\n    style.value = \"minimal_header\";\n  } else {\n    style.value = ThemeOptions?.value?.options?.header\n      ? ThemeOptions?.value?.options?.header?.header_options\n      : \"basic_header\";\n    sticky.value =\n      ThemeOptions?.value?.options?.header &&\n      ThemeOptions?.value?.options?.header?.sticky_header_enable\n        ? true\n        : false;\n  }\n}\n\nonMounted(() => {\n  setHeader();\n  router.afterEach(() => {\n    setHeader();\n  });\n});\n</script>\n<style lang=\"scss\" scoped></style>\n",
      "start": 1716056270772,
      "end": 1716056271170,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1716056271171,
      "end": 1716056271171,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport { storeToRefs } from \"pinia\";\nimport { useDataStore } from \"~/store/data\";\nimport { HandleRequest } from \"~~/composables/HandleRequest\";\n\n\nconst _sfc_main = {\n  __name: 'index',\n  props: {\n  logo: String,\n},\n  setup(__props) {\n\nlet props = __props;\n\nlet style = ref(\"basic_header\");\nlet sticky = ref(true);\nlet route = useRoute();\nlet router = useRouter();\n\nlet { ThemeOptions } = storeToRefs(useDataStore());\n\nfunction setHeader() {\n  if (route.path === \"/theme/rome\") {\n    style.value = \"standard_header\";\n  } else if (route.path === \"/theme/madrid\") {\n    style.value = \"classic_header\";\n  } else if (route.path === \"/theme/berlin\") {\n    style.value = \"minimal_header\";\n  } else if (route.path === \"/theme/denver\") {\n    style.value = \"minimal_header\";\n  } else {\n    style.value = ThemeOptions?.value?.options?.header\n      ? ThemeOptions?.value?.options?.header?.header_options\n      : \"basic_header\";\n    sticky.value =\n      ThemeOptions?.value?.options?.header &&\n      ThemeOptions?.value?.options?.header?.sticky_header_enable\n        ? true\n        : false;\n  }\n}\n\nonMounted(() => {\n  setHeader();\n  router.afterEach(() => {\n    setHeader();\n  });\n});\n\nreturn (_ctx, _cache) => {\n  const _component_HeaderBasicHeader = _resolveComponent(\"HeaderBasicHeader\")\n  const _component_HeaderClassicHeader = _resolveComponent(\"HeaderClassicHeader\")\n  const _component_HeaderStandardHeader = _resolveComponent(\"HeaderStandardHeader\")\n  const _component_HeaderMinimalHeader = _resolveComponent(\"HeaderMinimalHeader\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(style) == 'basic_header')\n      ? (_openBlock(), _createBlock(_component_HeaderBasicHeader, {\n          key: 0,\n          sticky: _unref(sticky),\n          logo: __props.logo,\n          themeOptions: _unref(ThemeOptions)?.options\n        }, null, 8, [\"sticky\", \"logo\", \"themeOptions\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(style) == 'classic_header')\n      ? (_openBlock(), _createBlock(_component_HeaderClassicHeader, {\n          key: 1,\n          themeOptions: _unref(ThemeOptions)?.options,\n          sticky: _unref(sticky),\n          logo: __props.logo\n        }, null, 8, [\"themeOptions\", \"sticky\", \"logo\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(style) == 'standard_header')\n      ? (_openBlock(), _createBlock(_component_HeaderStandardHeader, {\n          key: 2,\n          themeOptions: _unref(ThemeOptions)?.options,\n          sticky: _unref(sticky),\n          logo: __props.logo\n        }, null, 8, [\"themeOptions\", \"sticky\", \"logo\"]))\n      : _createCommentVNode(\"\", true),\n    (_unref(style) == 'minimal_header')\n      ? (_openBlock(), _createBlock(_component_HeaderMinimalHeader, {\n          key: 3,\n          themeOptions: _unref(ThemeOptions)?.options,\n          sticky: _unref(sticky),\n          logo: __props.logo\n        }, null, 8, [\"themeOptions\", \"sticky\", \"logo\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1716056271171,
      "end": 1716056271173,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "result": "import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/index.vue\").then(r => r.default))",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "replace",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1716056271173,
      "end": 1716056271173,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1716056271173,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineAsyncComponent } from \"vue\"\nexport default defineAsyncComponent(() => __vitePreload(() => import(\"C:/Users/mopc/Downloads/Compressed/Fastkart-Frontend-Nuxt/Fastkart-Frontend-Nuxt/components/Header/index.vue\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(r => r.default))",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1716056271174,
      "end": 1716056271174,
      "order": "normal"
    }
  ]
}
